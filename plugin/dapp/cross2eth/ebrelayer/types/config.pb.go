// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.9.1
// source: config.proto

package types

import (
	reflect "reflect"
	sync "sync"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SyncTxConfig struct {
<<<<<<< HEAD
	Chain33Host          string   `protobuf:"bytes,1,opt,name=chain33host,proto3" json:"chain33host,omitempty"`
	PushHost             string   `protobuf:"bytes,2,opt,name=pushHost,proto3" json:"pushHost,omitempty"`
	PushName             string   `protobuf:"bytes,3,opt,name=pushName,proto3" json:"pushName,omitempty"`
	PushBind             string   `protobuf:"bytes,4,opt,name=pushBind,proto3" json:"pushBind,omitempty"`
	MaturityDegree       int32    `protobuf:"varint,5,opt,name=maturityDegree,proto3" json:"maturityDegree,omitempty"`
	FetchHeightPeriodMs  int64    `protobuf:"varint,9,opt,name=fetchHeightPeriodMs,proto3" json:"fetchHeightPeriodMs,omitempty"`
	StartSyncHeight      int64    `protobuf:"varint,10,opt,name=startSyncHeight,proto3" json:"startSyncHeight,omitempty"`
	StartSyncSequence    int64    `protobuf:"varint,11,opt,name=startSyncSequence,proto3" json:"startSyncSequence,omitempty"`
	StartSyncHash        string   `protobuf:"bytes,12,opt,name=startSyncHash,proto3" json:"startSyncHash,omitempty"`
	KeepAliveDuration    int64    `protobuf:"varint,13,opt,name=keepAliveDuration,proto3" json:"keepAliveDuration,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SyncTxConfig) Reset()         { *m = SyncTxConfig{} }
func (m *SyncTxConfig) String() string { return proto.CompactTextString(m) }
func (*SyncTxConfig) ProtoMessage()    {}
func (*SyncTxConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_3eaf2c85e69e9ea4, []int{0}
}
=======
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
>>>>>>> upstream/master

	Chain33Host         string `protobuf:"bytes,1,opt,name=chain33host,proto3" json:"chain33host,omitempty"`
	PushHost            string `protobuf:"bytes,2,opt,name=pushHost,proto3" json:"pushHost,omitempty"`
	PushName            string `protobuf:"bytes,3,opt,name=pushName,proto3" json:"pushName,omitempty"`
	PushBind            string `protobuf:"bytes,4,opt,name=pushBind,proto3" json:"pushBind,omitempty"`
	MaturityDegree      int32  `protobuf:"varint,5,opt,name=maturityDegree,proto3" json:"maturityDegree,omitempty"`
	FetchHeightPeriodMs int64  `protobuf:"varint,9,opt,name=fetchHeightPeriodMs,proto3" json:"fetchHeightPeriodMs,omitempty"`
	StartSyncHeight     int64  `protobuf:"varint,10,opt,name=startSyncHeight,proto3" json:"startSyncHeight,omitempty"`
	StartSyncSequence   int64  `protobuf:"varint,11,opt,name=startSyncSequence,proto3" json:"startSyncSequence,omitempty"`
	StartSyncHash       string `protobuf:"bytes,12,opt,name=startSyncHash,proto3" json:"startSyncHash,omitempty"`
	KeepAliveDuration   int64  `protobuf:"varint,13,opt,name=keepAliveDuration,proto3" json:"keepAliveDuration,omitempty"`
}

func (x *SyncTxConfig) Reset() {
	*x = SyncTxConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncTxConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncTxConfig) ProtoMessage() {}

func (x *SyncTxConfig) ProtoReflect() protoreflect.Message {
	mi := &file_config_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncTxConfig.ProtoReflect.Descriptor instead.
func (*SyncTxConfig) Descriptor() ([]byte, []int) {
	return file_config_proto_rawDescGZIP(), []int{0}
}

func (x *SyncTxConfig) GetChain33Host() string {
	if x != nil {
		return x.Chain33Host
	}
	return ""
}

func (x *SyncTxConfig) GetPushHost() string {
	if x != nil {
		return x.PushHost
	}
	return ""
}

func (x *SyncTxConfig) GetPushName() string {
	if x != nil {
		return x.PushName
	}
	return ""
}

func (x *SyncTxConfig) GetPushBind() string {
	if x != nil {
		return x.PushBind
	}
	return ""
}

func (x *SyncTxConfig) GetMaturityDegree() int32 {
	if x != nil {
		return x.MaturityDegree
	}
	return 0
}

func (x *SyncTxConfig) GetFetchHeightPeriodMs() int64 {
	if x != nil {
		return x.FetchHeightPeriodMs
	}
	return 0
}

func (x *SyncTxConfig) GetStartSyncHeight() int64 {
	if x != nil {
		return x.StartSyncHeight
	}
	return 0
}

func (x *SyncTxConfig) GetStartSyncSequence() int64 {
	if x != nil {
		return x.StartSyncSequence
	}
	return 0
}

func (x *SyncTxConfig) GetStartSyncHash() string {
	if x != nil {
		return x.StartSyncHash
	}
	return ""
}

<<<<<<< HEAD
func (m *SyncTxConfig) GetKeepAliveDuration() int64 {
	if m != nil {
		return m.KeepAliveDuration
	}
	return 0
}

type Log struct {
	Loglevel             string   `protobuf:"bytes,1,opt,name=loglevel,proto3" json:"loglevel,omitempty"`
	LogConsoleLevel      string   `protobuf:"bytes,2,opt,name=logConsoleLevel,proto3" json:"logConsoleLevel,omitempty"`
	LogFile              string   `protobuf:"bytes,3,opt,name=logFile,proto3" json:"logFile,omitempty"`
	MaxFileSize          uint32   `protobuf:"varint,4,opt,name=maxFileSize,proto3" json:"maxFileSize,omitempty"`
	MaxBackups           uint32   `protobuf:"varint,5,opt,name=maxBackups,proto3" json:"maxBackups,omitempty"`
	MaxAge               uint32   `protobuf:"varint,6,opt,name=maxAge,proto3" json:"maxAge,omitempty"`
	LocalTime            bool     `protobuf:"varint,7,opt,name=localTime,proto3" json:"localTime,omitempty"`
	Compress             bool     `protobuf:"varint,8,opt,name=compress,proto3" json:"compress,omitempty"`
	CallerFile           bool     `protobuf:"varint,9,opt,name=callerFile,proto3" json:"callerFile,omitempty"`
	CallerFunction       bool     `protobuf:"varint,10,opt,name=callerFunction,proto3" json:"callerFunction,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Log) Reset()         { *m = Log{} }
func (m *Log) String() string { return proto.CompactTextString(m) }
func (*Log) ProtoMessage()    {}
func (*Log) Descriptor() ([]byte, []int) {
	return fileDescriptor_3eaf2c85e69e9ea4, []int{1}
=======
func (x *SyncTxConfig) GetKeepAliveDuration() int64 {
	if x != nil {
		return x.KeepAliveDuration
	}
	return 0
>>>>>>> upstream/master
}

type Log struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Loglevel        string `protobuf:"bytes,1,opt,name=loglevel,proto3" json:"loglevel,omitempty"`
	LogConsoleLevel string `protobuf:"bytes,2,opt,name=logConsoleLevel,proto3" json:"logConsoleLevel,omitempty"`
	LogFile         string `protobuf:"bytes,3,opt,name=logFile,proto3" json:"logFile,omitempty"`
	MaxFileSize     uint32 `protobuf:"varint,4,opt,name=maxFileSize,proto3" json:"maxFileSize,omitempty"`
	MaxBackups      uint32 `protobuf:"varint,5,opt,name=maxBackups,proto3" json:"maxBackups,omitempty"`
	MaxAge          uint32 `protobuf:"varint,6,opt,name=maxAge,proto3" json:"maxAge,omitempty"`
	LocalTime       bool   `protobuf:"varint,7,opt,name=localTime,proto3" json:"localTime,omitempty"`
	Compress        bool   `protobuf:"varint,8,opt,name=compress,proto3" json:"compress,omitempty"`
	CallerFile      bool   `protobuf:"varint,9,opt,name=callerFile,proto3" json:"callerFile,omitempty"`
	CallerFunction  bool   `protobuf:"varint,10,opt,name=callerFunction,proto3" json:"callerFunction,omitempty"`
}

func (x *Log) Reset() {
	*x = Log{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Log) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Log) ProtoMessage() {}

func (x *Log) ProtoReflect() protoreflect.Message {
	mi := &file_config_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Log.ProtoReflect.Descriptor instead.
func (*Log) Descriptor() ([]byte, []int) {
	return file_config_proto_rawDescGZIP(), []int{1}
}

func (x *Log) GetLoglevel() string {
	if x != nil {
		return x.Loglevel
	}
	return ""
}

func (x *Log) GetLogConsoleLevel() string {
	if x != nil {
		return x.LogConsoleLevel
	}
	return ""
}

func (x *Log) GetLogFile() string {
	if x != nil {
		return x.LogFile
	}
	return ""
}

func (x *Log) GetMaxFileSize() uint32 {
	if x != nil {
		return x.MaxFileSize
	}
	return 0
}

func (x *Log) GetMaxBackups() uint32 {
	if x != nil {
		return x.MaxBackups
	}
	return 0
}

func (x *Log) GetMaxAge() uint32 {
	if x != nil {
		return x.MaxAge
	}
	return 0
}

func (x *Log) GetLocalTime() bool {
	if x != nil {
		return x.LocalTime
	}
	return false
}

func (x *Log) GetCompress() bool {
	if x != nil {
		return x.Compress
	}
	return false
}

func (x *Log) GetCallerFile() bool {
	if x != nil {
		return x.CallerFile
	}
	return false
}

func (x *Log) GetCallerFunction() bool {
	if x != nil {
		return x.CallerFunction
	}
	return false
}

type EthRelayerCfg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EthChainName        string   `protobuf:"bytes,1,opt,name=ethChainName,proto3" json:"ethChainName,omitempty"`
	EthProvider         []string `protobuf:"bytes,2,rep,name=ethProvider,proto3" json:"ethProvider,omitempty"`
	EthProviderCli      []string `protobuf:"bytes,3,rep,name=ethProviderCli,proto3" json:"ethProviderCli,omitempty"`
	BridgeRegistry      string   `protobuf:"bytes,4,opt,name=bridgeRegistry,proto3" json:"bridgeRegistry,omitempty"`
	EthMaturityDegree   int32    `protobuf:"varint,5,opt,name=ethMaturityDegree,proto3" json:"ethMaturityDegree,omitempty"`
	EthBlockFetchPeriod int32    `protobuf:"varint,6,opt,name=ethBlockFetchPeriod,proto3" json:"ethBlockFetchPeriod,omitempty"`
}

func (x *EthRelayerCfg) Reset() {
	*x = EthRelayerCfg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EthRelayerCfg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EthRelayerCfg) ProtoMessage() {}

func (x *EthRelayerCfg) ProtoReflect() protoreflect.Message {
	mi := &file_config_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EthRelayerCfg.ProtoReflect.Descriptor instead.
func (*EthRelayerCfg) Descriptor() ([]byte, []int) {
	return file_config_proto_rawDescGZIP(), []int{2}
}

func (x *EthRelayerCfg) GetEthChainName() string {
	if x != nil {
		return x.EthChainName
	}
	return ""
}

func (x *EthRelayerCfg) GetEthProvider() []string {
	if x != nil {
		return x.EthProvider
	}
	return nil
}

func (x *EthRelayerCfg) GetEthProviderCli() []string {
	if x != nil {
		return x.EthProviderCli
	}
	return nil
}

func (x *EthRelayerCfg) GetBridgeRegistry() string {
	if x != nil {
		return x.BridgeRegistry
	}
	return ""
}

func (x *EthRelayerCfg) GetEthMaturityDegree() int32 {
	if x != nil {
		return x.EthMaturityDegree
	}
	return 0
}

func (x *EthRelayerCfg) GetEthBlockFetchPeriod() int32 {
	if x != nil {
		return x.EthBlockFetchPeriod
	}
	return 0
}

type Chain33RelayerCfg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SyncTxConfig            *SyncTxConfig `protobuf:"bytes,1,opt,name=syncTxConfig,proto3" json:"syncTxConfig,omitempty"`
	BridgeRegistryOnChain33 string        `protobuf:"bytes,2,opt,name=bridgeRegistryOnChain33,proto3" json:"bridgeRegistryOnChain33,omitempty"`
	ChainName               string        `protobuf:"bytes,3,opt,name=chainName,proto3" json:"chainName,omitempty"`
	ChainID4Chain33         int32         `protobuf:"varint,4,opt,name=chainID4Chain33,proto3" json:"chainID4Chain33,omitempty"`
}

func (x *Chain33RelayerCfg) Reset() {
	*x = Chain33RelayerCfg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Chain33RelayerCfg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Chain33RelayerCfg) ProtoMessage() {}

func (x *Chain33RelayerCfg) ProtoReflect() protoreflect.Message {
	mi := &file_config_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Chain33RelayerCfg.ProtoReflect.Descriptor instead.
func (*Chain33RelayerCfg) Descriptor() ([]byte, []int) {
	return file_config_proto_rawDescGZIP(), []int{3}
}

func (x *Chain33RelayerCfg) GetSyncTxConfig() *SyncTxConfig {
	if x != nil {
		return x.SyncTxConfig
	}
	return nil
}

func (x *Chain33RelayerCfg) GetBridgeRegistryOnChain33() string {
	if x != nil {
		return x.BridgeRegistryOnChain33
	}
	return ""
}

func (x *Chain33RelayerCfg) GetChainName() string {
	if x != nil {
		return x.ChainName
	}
	return ""
}

func (x *Chain33RelayerCfg) GetChainID4Chain33() int32 {
	if x != nil {
		return x.ChainID4Chain33
	}
	return 0
}

type RelayerConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title             string             `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	JrpcBindAddr      string             `protobuf:"bytes,2,opt,name=jrpcBindAddr,proto3" json:"jrpcBindAddr,omitempty"` // Jrpc服务地址
	EthRelayerCfg     []*EthRelayerCfg   `protobuf:"bytes,3,rep,name=ethRelayerCfg,proto3" json:"ethRelayerCfg,omitempty"`
	Chain33RelayerCfg *Chain33RelayerCfg `protobuf:"bytes,4,opt,name=chain33RelayerCfg,proto3" json:"chain33RelayerCfg,omitempty"`
	Log               *Log               `protobuf:"bytes,5,opt,name=log,proto3" json:"log,omitempty"`
	Dbdriver          string             `protobuf:"bytes,6,opt,name=dbdriver,proto3" json:"dbdriver,omitempty"` //数据库类型
	DbPath            string             `protobuf:"bytes,7,opt,name=dbPath,proto3" json:"dbPath,omitempty"`     //数据库存储目录
	DbCache           int32              `protobuf:"varint,8,opt,name=dbCache,proto3" json:"dbCache,omitempty"`  //数据库缓存大小
	ProcessWithDraw   bool               `protobuf:"varint,9,opt,name=processWithDraw,proto3" json:"processWithDraw,omitempty"`
	RemindUrl         string             `protobuf:"bytes,10,opt,name=remindUrl,proto3" json:"remindUrl,omitempty"` // 代理打币地址金额不够时发生提醒短信的 url
}

func (x *RelayerConfig) Reset() {
	*x = RelayerConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelayerConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelayerConfig) ProtoMessage() {}

func (x *RelayerConfig) ProtoReflect() protoreflect.Message {
	mi := &file_config_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelayerConfig.ProtoReflect.Descriptor instead.
func (*RelayerConfig) Descriptor() ([]byte, []int) {
	return file_config_proto_rawDescGZIP(), []int{4}
}

func (x *RelayerConfig) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *RelayerConfig) GetJrpcBindAddr() string {
	if x != nil {
		return x.JrpcBindAddr
	}
	return ""
}

func (x *RelayerConfig) GetEthRelayerCfg() []*EthRelayerCfg {
	if x != nil {
		return x.EthRelayerCfg
	}
	return nil
}

func (x *RelayerConfig) GetChain33RelayerCfg() *Chain33RelayerCfg {
	if x != nil {
		return x.Chain33RelayerCfg
	}
	return nil
}

func (x *RelayerConfig) GetLog() *Log {
	if x != nil {
		return x.Log
	}
	return nil
}

func (x *RelayerConfig) GetDbdriver() string {
	if x != nil {
		return x.Dbdriver
	}
	return ""
}

func (x *RelayerConfig) GetDbPath() string {
	if x != nil {
		return x.DbPath
	}
	return ""
}

func (x *RelayerConfig) GetDbCache() int32 {
	if x != nil {
		return x.DbCache
	}
	return 0
}

func (x *RelayerConfig) GetProcessWithDraw() bool {
	if x != nil {
		return x.ProcessWithDraw
	}
	return false
}

func (x *RelayerConfig) GetRemindUrl() string {
	if x != nil {
		return x.RemindUrl
	}
	return ""
}

type SyncTxReceiptConfig struct {
<<<<<<< HEAD
	Chain33Host          string   `protobuf:"bytes,1,opt,name=chain33host,proto3" json:"chain33host,omitempty"`
	PushHost             string   `protobuf:"bytes,2,opt,name=pushHost,proto3" json:"pushHost,omitempty"`
	PushName             string   `protobuf:"bytes,3,opt,name=pushName,proto3" json:"pushName,omitempty"`
	PushBind             string   `protobuf:"bytes,4,opt,name=pushBind,proto3" json:"pushBind,omitempty"`
	StartSyncHeight      int64    `protobuf:"varint,5,opt,name=startSyncHeight,proto3" json:"startSyncHeight,omitempty"`
	StartSyncSequence    int64    `protobuf:"varint,6,opt,name=startSyncSequence,proto3" json:"startSyncSequence,omitempty"`
	StartSyncHash        string   `protobuf:"bytes,7,opt,name=startSyncHash,proto3" json:"startSyncHash,omitempty"`
	Contracts            []string `protobuf:"bytes,8,rep,name=contracts,proto3" json:"contracts,omitempty"`
	KeepAliveDuration    int64    `protobuf:"varint,9,opt,name=keepAliveDuration,proto3" json:"keepAliveDuration,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SyncTxReceiptConfig) Reset()         { *m = SyncTxReceiptConfig{} }
func (m *SyncTxReceiptConfig) String() string { return proto.CompactTextString(m) }
func (*SyncTxReceiptConfig) ProtoMessage()    {}
func (*SyncTxReceiptConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_3eaf2c85e69e9ea4, []int{5}
}
=======
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
>>>>>>> upstream/master

	Chain33Host       string   `protobuf:"bytes,1,opt,name=chain33host,proto3" json:"chain33host,omitempty"`
	PushHost          string   `protobuf:"bytes,2,opt,name=pushHost,proto3" json:"pushHost,omitempty"`
	PushName          string   `protobuf:"bytes,3,opt,name=pushName,proto3" json:"pushName,omitempty"`
	PushBind          string   `protobuf:"bytes,4,opt,name=pushBind,proto3" json:"pushBind,omitempty"`
	StartSyncHeight   int64    `protobuf:"varint,5,opt,name=startSyncHeight,proto3" json:"startSyncHeight,omitempty"`
	StartSyncSequence int64    `protobuf:"varint,6,opt,name=startSyncSequence,proto3" json:"startSyncSequence,omitempty"`
	StartSyncHash     string   `protobuf:"bytes,7,opt,name=startSyncHash,proto3" json:"startSyncHash,omitempty"`
	Contracts         []string `protobuf:"bytes,8,rep,name=contracts,proto3" json:"contracts,omitempty"`
	KeepAliveDuration int64    `protobuf:"varint,9,opt,name=keepAliveDuration,proto3" json:"keepAliveDuration,omitempty"`
}

func (x *SyncTxReceiptConfig) Reset() {
	*x = SyncTxReceiptConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncTxReceiptConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncTxReceiptConfig) ProtoMessage() {}

func (x *SyncTxReceiptConfig) ProtoReflect() protoreflect.Message {
	mi := &file_config_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncTxReceiptConfig.ProtoReflect.Descriptor instead.
func (*SyncTxReceiptConfig) Descriptor() ([]byte, []int) {
	return file_config_proto_rawDescGZIP(), []int{5}
}

func (x *SyncTxReceiptConfig) GetChain33Host() string {
	if x != nil {
		return x.Chain33Host
	}
	return ""
}

func (x *SyncTxReceiptConfig) GetPushHost() string {
	if x != nil {
		return x.PushHost
	}
	return ""
}

func (x *SyncTxReceiptConfig) GetPushName() string {
	if x != nil {
		return x.PushName
	}
	return ""
}

func (x *SyncTxReceiptConfig) GetPushBind() string {
	if x != nil {
		return x.PushBind
	}
	return ""
}

func (x *SyncTxReceiptConfig) GetStartSyncHeight() int64 {
	if x != nil {
		return x.StartSyncHeight
	}
	return 0
}

func (x *SyncTxReceiptConfig) GetStartSyncSequence() int64 {
	if x != nil {
		return x.StartSyncSequence
	}
	return 0
}

func (x *SyncTxReceiptConfig) GetStartSyncHash() string {
	if x != nil {
		return x.StartSyncHash
	}
	return ""
}

func (x *SyncTxReceiptConfig) GetContracts() []string {
	if x != nil {
		return x.Contracts
	}
	return nil
}

<<<<<<< HEAD
func (m *SyncTxReceiptConfig) GetKeepAliveDuration() int64 {
	if m != nil {
		return m.KeepAliveDuration
=======
func (x *SyncTxReceiptConfig) GetKeepAliveDuration() int64 {
	if x != nil {
		return x.KeepAliveDuration
>>>>>>> upstream/master
	}
	return 0
}

<<<<<<< HEAD
func init() {
	proto.RegisterType((*SyncTxConfig)(nil), "types.SyncTxConfig")
	proto.RegisterType((*Log)(nil), "types.Log")
	proto.RegisterType((*EthRelayerCfg)(nil), "types.EthRelayerCfg")
	proto.RegisterType((*Chain33RelayerCfg)(nil), "types.Chain33RelayerCfg")
	proto.RegisterType((*RelayerConfig)(nil), "types.RelayerConfig")
	proto.RegisterType((*SyncTxReceiptConfig)(nil), "types.SyncTxReceiptConfig")
}

func init() { proto.RegisterFile("config.proto", fileDescriptor_3eaf2c85e69e9ea4) }

var fileDescriptor_3eaf2c85e69e9ea4 = []byte{
	// 795 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x55, 0x41, 0x6f, 0xeb, 0x44,
	0x10, 0x56, 0xe2, 0x97, 0xb6, 0xde, 0x24, 0xa0, 0x6e, 0x9f, 0x60, 0x85, 0x9e, 0x50, 0x14, 0x21,
	0x94, 0x03, 0x0a, 0xa8, 0x45, 0x02, 0x71, 0x6b, 0x13, 0xaa, 0x87, 0xd4, 0x07, 0xd5, 0xf6, 0x21,
	0x24, 0x6e, 0x9b, 0xf5, 0xd4, 0x5e, 0xba, 0xf6, 0x9a, 0xf5, 0x26, 0x24, 0xdc, 0x38, 0x70, 0xe1,
	0x5f, 0xf1, 0x07, 0xb8, 0xf1, 0x7f, 0xd0, 0xac, 0xed, 0xc4, 0x71, 0x52, 0x09, 0x4e, 0xdc, 0xf2,
	0x7d, 0xdf, 0xec, 0x66, 0x67, 0xe6, 0x9b, 0x31, 0x19, 0x48, 0x93, 0x3d, 0xaa, 0x78, 0x9a, 0x5b,
	0xe3, 0x0c, 0xed, 0xb9, 0x4d, 0x0e, 0xc5, 0xf8, 0x8f, 0x80, 0x0c, 0x1e, 0x36, 0x99, 0x7c, 0xbb,
	0x9e, 0x79, 0x95, 0x8e, 0x48, 0x5f, 0x26, 0x42, 0x65, 0x57, 0x57, 0x89, 0x29, 0x1c, 0xeb, 0x8c,
	0x3a, 0x93, 0x90, 0x37, 0x29, 0xfa, 0x01, 0x39, 0xcb, 0x97, 0x45, 0xf2, 0x1a, 0xe5, 0xae, 0x97,
	0xb7, 0xb8, 0xd6, 0xbe, 0x15, 0x29, 0xb0, 0x60, 0xa7, 0x21, 0xae, 0xb5, 0x1b, 0x95, 0x45, 0xec,
	0xc5, 0x4e, 0x43, 0x4c, 0x3f, 0x26, 0xef, 0xa4, 0xc2, 0x2d, 0xad, 0x72, 0x9b, 0x39, 0xc4, 0x16,
	0x80, 0xf5, 0x46, 0x9d, 0x49, 0x8f, 0xb7, 0x58, 0xfa, 0x19, 0xb9, 0x78, 0x04, 0x27, 0x93, 0xd7,
	0xa0, 0xe2, 0xc4, 0xdd, 0x83, 0x55, 0x26, 0x7a, 0x53, 0xb0, 0x70, 0xd4, 0x99, 0x04, 0xfc, 0x98,
	0x44, 0x27, 0xe4, 0xdd, 0xc2, 0x09, 0xeb, 0x30, 0xc9, 0x52, 0x62, 0xc4, 0x47, 0xb7, 0x69, 0xfa,
	0x09, 0x39, 0xdf, 0x52, 0x0f, 0xf0, 0xf3, 0x12, 0x32, 0x09, 0xac, 0xef, 0x63, 0x0f, 0x05, 0xfa,
	0x11, 0x19, 0xee, 0x2e, 0x10, 0x45, 0xc2, 0x06, 0x3e, 0xa5, 0x7d, 0x12, 0xef, 0x7c, 0x02, 0xc8,
	0xaf, 0xb5, 0x5a, 0xc1, 0x7c, 0x69, 0x85, 0x53, 0x26, 0x63, 0xc3, 0xf2, 0xce, 0x03, 0x61, 0xfc,
	0x67, 0x97, 0x04, 0x77, 0x26, 0xc6, 0x4a, 0x69, 0x13, 0x6b, 0x58, 0x81, 0xae, 0x1a, 0xb0, 0xc5,
	0x98, 0x8f, 0x36, 0xf1, 0xcc, 0x64, 0x85, 0xd1, 0x70, 0xe7, 0x43, 0xca, 0x26, 0xb4, 0x69, 0xca,
	0xc8, 0xa9, 0x36, 0xf1, 0xad, 0xd2, 0x75, 0x2b, 0x6a, 0x88, 0x3d, 0x4e, 0xc5, 0x1a, 0x7f, 0x3e,
	0xa8, 0x5f, 0xc1, 0x37, 0x63, 0xc8, 0x9b, 0x14, 0xfd, 0x90, 0x90, 0x54, 0xac, 0x6f, 0x84, 0x7c,
	0x5a, 0xe6, 0x85, 0xef, 0xc5, 0x90, 0x37, 0x18, 0xfa, 0x1e, 0x39, 0x49, 0xc5, 0xfa, 0x3a, 0x06,
	0x76, 0xe2, 0xb5, 0x0a, 0xd1, 0x57, 0x24, 0xd4, 0x46, 0x0a, 0xfd, 0x56, 0xa5, 0xc0, 0x4e, 0x47,
	0x9d, 0xc9, 0x19, 0xdf, 0x11, 0x98, 0x97, 0x34, 0x69, 0x6e, 0xa1, 0x28, 0xd8, 0x99, 0x17, 0xb7,
	0x18, 0xff, 0x51, 0x0a, 0xad, 0xc1, 0xfa, 0x07, 0x87, 0x5e, 0x6d, 0x30, 0xe8, 0x90, 0x0a, 0x2d,
	0x33, 0xe9, 0xcb, 0x48, 0x7c, 0x4c, 0x8b, 0x1d, 0xff, 0xde, 0x25, 0xc3, 0xaf, 0x5d, 0xc2, 0x41,
	0x8b, 0x0d, 0xd8, 0xd9, 0x63, 0x4c, 0xc7, 0x64, 0x00, 0x2e, 0x99, 0xa1, 0x83, 0xbd, 0x2f, 0xcb,
	0x8a, 0xee, 0x71, 0x58, 0x11, 0x70, 0xc9, 0xbd, 0x35, 0x2b, 0x15, 0x81, 0x65, 0xdd, 0x51, 0x80,
	0xae, 0x6f, 0x50, 0xf8, 0xff, 0x0d, 0x38, 0xd3, 0x8a, 0x05, 0x3e, 0xa8, 0xc5, 0x62, 0xdc, 0xc2,
	0xaa, 0x28, 0x06, 0x0e, 0xb1, 0x2a, 0x9c, 0xdd, 0x54, 0x5e, 0x6f, 0xb1, 0xe8, 0x0c, 0x70, 0xc9,
	0x9b, 0x63, 0xa6, 0x3f, 0x14, 0xd0, 0xf7, 0xe0, 0x92, 0x1b, 0x6d, 0xe4, 0xd3, 0x2d, 0x9a, 0xbc,
	0xb4, 0xb7, 0x2f, 0x7e, 0x8f, 0x1f, 0x93, 0xc6, 0x7f, 0x75, 0xc8, 0xf9, 0xac, 0x9c, 0xda, 0x46,
	0x2d, 0xbe, 0x20, 0x83, 0xa2, 0x31, 0xed, 0xbe, 0x16, 0xfd, 0xcb, 0x8b, 0xa9, 0x5f, 0x06, 0xd3,
	0xe6, 0x22, 0xe0, 0x7b, 0x81, 0xf4, 0x4b, 0xf2, 0xfe, 0x7e, 0x02, 0xdf, 0x65, 0xd5, 0xed, 0x95,
	0xfd, 0x9e, 0x93, 0xd1, 0x12, 0x72, 0x5b, 0xfb, 0xd2, 0x88, 0x3b, 0x02, 0xed, 0xec, 0xc1, 0x37,
	0xf3, 0xcf, 0xeb, 0xfb, 0x5e, 0xf8, 0xa4, 0xda, 0xf4, 0xf8, 0xb7, 0x80, 0x0c, 0xeb, 0x4c, 0xca,
	0x37, 0xbd, 0x24, 0x3d, 0xa7, 0x9c, 0xae, 0x3b, 0x5a, 0x02, 0x6c, 0xf7, 0x4f, 0x36, 0x97, 0xb8,
	0x56, 0xae, 0xa3, 0xc8, 0x56, 0xcf, 0xdb, 0xe3, 0xe8, 0x57, 0x64, 0x08, 0x4d, 0x8f, 0xf8, 0x5e,
	0xf6, 0x2f, 0x5f, 0x56, 0x75, 0xd8, 0xf3, 0x0f, 0xdf, 0x0f, 0xa5, 0xb7, 0xe4, 0x5c, 0xb6, 0xeb,
	0xea, 0xdf, 0xdc, 0xbf, 0x64, 0xd5, 0xf9, 0x83, 0xba, 0xf3, 0xc3, 0x23, 0xf4, 0x15, 0x09, 0xb4,
	0x89, 0x7d, 0xcb, 0xfb, 0x97, 0xa4, 0x3a, 0x79, 0x67, 0x62, 0x8e, 0x34, 0x8e, 0x4a, 0xb4, 0x88,
	0xac, 0x5a, 0x81, 0xf5, 0x5d, 0x0e, 0xf9, 0x16, 0xe3, 0xf0, 0x45, 0x8b, 0x7b, 0xe1, 0x12, 0x3f,
	0x61, 0x21, 0xaf, 0x10, 0x0e, 0x7c, 0xb4, 0x98, 0x09, 0x99, 0x80, 0x9f, 0xae, 0x1e, 0xaf, 0x21,
	0x56, 0x39, 0xb7, 0x46, 0x42, 0x51, 0xfc, 0xa0, 0x5c, 0x32, 0xb7, 0xe2, 0x97, 0x6a, 0xc2, 0xda,
	0x34, 0x76, 0xcb, 0x42, 0xaa, 0xb2, 0xe8, 0x7b, 0xab, 0xfd, 0x84, 0x85, 0x7c, 0x47, 0x8c, 0xff,
	0xee, 0x92, 0x8b, 0xd2, 0x24, 0x1c, 0x24, 0xa8, 0xdc, 0xfd, 0xaf, 0x1f, 0x8d, 0x23, 0xab, 0xbd,
	0xf7, 0x1f, 0x56, 0xfb, 0xc9, 0xbf, 0x5e, 0xed, 0xa7, 0xc7, 0x56, 0x3b, 0xfa, 0xda, 0x64, 0xce,
	0x0a, 0xe9, 0x70, 0x9b, 0x05, 0xde, 0xd7, 0x35, 0x71, 0x7c, 0xf1, 0x87, 0xcf, 0x2c, 0xfe, 0x1b,
	0xf2, 0xe3, 0xd9, 0x74, 0xfa, 0xa9, 0xb7, 0xc0, 0xe2, 0xc4, 0x7f, 0x9f, 0xaf, 0xfe, 0x09, 0x00,
	0x00, 0xff, 0xff, 0x27, 0x9c, 0x3e, 0x6e, 0xaf, 0x07, 0x00, 0x00,
=======
var File_config_proto protoreflect.FileDescriptor

var file_config_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x22, 0x8a, 0x03, 0x0a, 0x0c, 0x53, 0x79, 0x6e, 0x63, 0x54, 0x78,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x33,
	0x33, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x33, 0x33, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x75, 0x73, 0x68,
	0x48, 0x6f, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x75, 0x73, 0x68,
	0x48, 0x6f, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x75, 0x73, 0x68, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x75, 0x73, 0x68, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x75, 0x73, 0x68, 0x42, 0x69, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x75, 0x73, 0x68, 0x42, 0x69, 0x6e, 0x64, 0x12, 0x26, 0x0a, 0x0e,
	0x6d, 0x61, 0x74, 0x75, 0x72, 0x69, 0x74, 0x79, 0x44, 0x65, 0x67, 0x72, 0x65, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x6d, 0x61, 0x74, 0x75, 0x72, 0x69, 0x74, 0x79, 0x44, 0x65,
	0x67, 0x72, 0x65, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x66, 0x65, 0x74, 0x63, 0x68, 0x48, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x4d, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x13, 0x66, 0x65, 0x74, 0x63, 0x68, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x50, 0x65,
	0x72, 0x69, 0x6f, 0x64, 0x4d, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x53,
	0x79, 0x6e, 0x63, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x12, 0x2c, 0x0a, 0x11, 0x73, 0x74, 0x61, 0x72, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x65, 0x71,
	0x75, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x24,
	0x0a, 0x0d, 0x73, 0x74, 0x61, 0x72, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x48, 0x61, 0x73, 0x68, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x72, 0x74, 0x53, 0x79, 0x6e, 0x63,
	0x48, 0x61, 0x73, 0x68, 0x12, 0x2c, 0x0a, 0x11, 0x6b, 0x65, 0x65, 0x70, 0x41, 0x6c, 0x69, 0x76,
	0x65, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x11, 0x6b, 0x65, 0x65, 0x70, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0xc1, 0x02, 0x0a, 0x03, 0x4c, 0x6f, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f,
	0x67, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f,
	0x67, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x28, 0x0a, 0x0f, 0x6c, 0x6f, 0x67, 0x43, 0x6f, 0x6e,
	0x73, 0x6f, 0x6c, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x6c, 0x6f, 0x67, 0x43, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x12, 0x18, 0x0a, 0x07, 0x6c, 0x6f, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x61,
	0x78, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0b, 0x6d, 0x61, 0x78, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x6d, 0x61, 0x78, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0a, 0x6d, 0x61, 0x78, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x6d, 0x61, 0x78, 0x41, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6d, 0x61,
	0x78, 0x41, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1e,
	0x0a, 0x0a, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x46, 0x69, 0x6c, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0a, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x26,
	0x0a, 0x0e, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x46, 0x75,
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x85, 0x02, 0x0a, 0x0d, 0x45, 0x74, 0x68, 0x52, 0x65,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x66, 0x67, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x74, 0x68, 0x43,
	0x68, 0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x65, 0x74, 0x68, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x65, 0x74, 0x68, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0b, 0x65, 0x74, 0x68, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x26,
	0x0a, 0x0e, 0x65, 0x74, 0x68, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x43, 0x6c, 0x69,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x65, 0x74, 0x68, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x43, 0x6c, 0x69, 0x12, 0x26, 0x0a, 0x0e, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x12, 0x2c,
	0x0a, 0x11, 0x65, 0x74, 0x68, 0x4d, 0x61, 0x74, 0x75, 0x72, 0x69, 0x74, 0x79, 0x44, 0x65, 0x67,
	0x72, 0x65, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x65, 0x74, 0x68, 0x4d, 0x61,
	0x74, 0x75, 0x72, 0x69, 0x74, 0x79, 0x44, 0x65, 0x67, 0x72, 0x65, 0x65, 0x12, 0x30, 0x0a, 0x13,
	0x65, 0x74, 0x68, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x46, 0x65, 0x74, 0x63, 0x68, 0x50, 0x65, 0x72,
	0x69, 0x6f, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x65, 0x74, 0x68, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x46, 0x65, 0x74, 0x63, 0x68, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x22, 0xce,
	0x01, 0x0a, 0x11, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x33, 0x33, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x43, 0x66, 0x67, 0x12, 0x37, 0x0a, 0x0c, 0x73, 0x79, 0x6e, 0x63, 0x54, 0x78, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x54, 0x78, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x0c, 0x73, 0x79, 0x6e, 0x63, 0x54, 0x78, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x38, 0x0a,
	0x17, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x4f,
	0x6e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x33, 0x33, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17,
	0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x4f, 0x6e,
	0x43, 0x68, 0x61, 0x69, 0x6e, 0x33, 0x33, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x44,
	0x34, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x33, 0x33, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x44, 0x34, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x33, 0x33, 0x22,
	0x81, 0x03, 0x0a, 0x0d, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x6a, 0x72, 0x70, 0x63, 0x42,
	0x69, 0x6e, 0x64, 0x41, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6a,
	0x72, 0x70, 0x63, 0x42, 0x69, 0x6e, 0x64, 0x41, 0x64, 0x64, 0x72, 0x12, 0x3a, 0x0a, 0x0d, 0x65,
	0x74, 0x68, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x66, 0x67, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x45, 0x74, 0x68, 0x52, 0x65,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x66, 0x67, 0x52, 0x0d, 0x65, 0x74, 0x68, 0x52, 0x65, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x43, 0x66, 0x67, 0x12, 0x46, 0x0a, 0x11, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x33, 0x33, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x66, 0x67, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x69, 0x6e,
	0x33, 0x33, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x66, 0x67, 0x52, 0x11, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x33, 0x33, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x66, 0x67, 0x12,
	0x1c, 0x0a, 0x03, 0x6c, 0x6f, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x4c, 0x6f, 0x67, 0x52, 0x03, 0x6c, 0x6f, 0x67, 0x12, 0x1a, 0x0a,
	0x08, 0x64, 0x62, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x64, 0x62, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x62, 0x50,
	0x61, 0x74, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x62, 0x50, 0x61, 0x74,
	0x68, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x62, 0x43, 0x61, 0x63, 0x68, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x64, 0x62, 0x43, 0x61, 0x63, 0x68, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x70,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x57, 0x69, 0x74, 0x68, 0x44, 0x72, 0x61, 0x77, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x57, 0x69, 0x74,
	0x68, 0x44, 0x72, 0x61, 0x77, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x55,
	0x72, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x6d, 0x69, 0x6e, 0x64,
	0x55, 0x72, 0x6c, 0x22, 0xd5, 0x02, 0x0a, 0x13, 0x53, 0x79, 0x6e, 0x63, 0x54, 0x78, 0x52, 0x65,
	0x63, 0x65, 0x69, 0x70, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x20, 0x0a, 0x0b, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x33, 0x33, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x33, 0x33, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x75, 0x73, 0x68, 0x48, 0x6f, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x75, 0x73, 0x68, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x75, 0x73,
	0x68, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x75, 0x73,
	0x68, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x75, 0x73, 0x68, 0x42, 0x69, 0x6e,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x75, 0x73, 0x68, 0x42, 0x69, 0x6e,
	0x64, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x48, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x53, 0x79, 0x6e, 0x63, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x2c, 0x0a, 0x11, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x73, 0x74, 0x61, 0x72, 0x74, 0x53, 0x79, 0x6e,
	0x63, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x48, 0x61, 0x73, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x73, 0x74, 0x61, 0x72, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x48, 0x61, 0x73, 0x68, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x18, 0x08, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x12, 0x2c, 0x0a,
	0x11, 0x6b, 0x65, 0x65, 0x70, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x6b, 0x65, 0x65, 0x70, 0x41, 0x6c,
	0x69, 0x76, 0x65, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0a, 0x5a, 0x08, 0x2e,
	0x2e, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_config_proto_rawDescOnce sync.Once
	file_config_proto_rawDescData = file_config_proto_rawDesc
)

func file_config_proto_rawDescGZIP() []byte {
	file_config_proto_rawDescOnce.Do(func() {
		file_config_proto_rawDescData = protoimpl.X.CompressGZIP(file_config_proto_rawDescData)
	})
	return file_config_proto_rawDescData
}

var file_config_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_config_proto_goTypes = []interface{}{
	(*SyncTxConfig)(nil),        // 0: types.SyncTxConfig
	(*Log)(nil),                 // 1: types.Log
	(*EthRelayerCfg)(nil),       // 2: types.EthRelayerCfg
	(*Chain33RelayerCfg)(nil),   // 3: types.Chain33RelayerCfg
	(*RelayerConfig)(nil),       // 4: types.RelayerConfig
	(*SyncTxReceiptConfig)(nil), // 5: types.SyncTxReceiptConfig
}
var file_config_proto_depIdxs = []int32{
	0, // 0: types.Chain33RelayerCfg.syncTxConfig:type_name -> types.SyncTxConfig
	2, // 1: types.RelayerConfig.ethRelayerCfg:type_name -> types.EthRelayerCfg
	3, // 2: types.RelayerConfig.chain33RelayerCfg:type_name -> types.Chain33RelayerCfg
	1, // 3: types.RelayerConfig.log:type_name -> types.Log
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_config_proto_init() }
func file_config_proto_init() {
	if File_config_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_config_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncTxConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Log); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EthRelayerCfg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Chain33RelayerCfg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelayerConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncTxReceiptConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_config_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_config_proto_goTypes,
		DependencyIndexes: file_config_proto_depIdxs,
		MessageInfos:      file_config_proto_msgTypes,
	}.Build()
	File_config_proto = out.File
	file_config_proto_rawDesc = nil
	file_config_proto_goTypes = nil
	file_config_proto_depIdxs = nil
>>>>>>> upstream/master
}
