syntax = "proto3";

package types;
option go_package = "github.com/33cn/plugin/plugin/dapp/zksync/types";


message ZkDeposit {
  uint64 tokenId = 1;
  string amount = 2;
  string ethAddress = 3;
  string chain33Addr = 4;
  int64 ethPriorityQueueId = 5; //需要在合约保证id连续
  ZkSignature signature = 6;
  uint64 chainTitleId = 7;

}

message ZkWithdraw {
  uint64 tokenId = 1;
  string amount = 2;
  uint64 accountId = 3;
  ZkSignature signature = 4;
  ZkSwapFee fee    = 5;
}

message ZkContractToTree {
  uint64 tokenId = 1;
  string amount = 2;
  uint64 accountId = 3;
  ZkSignature signature = 4;
}

message ZkTreeToContract {
  uint64 tokenId = 1;
  string amount = 2;
  uint64 accountId = 3;
  ZkSignature signature = 4;
}

message ZkTransfer {
  uint64 tokenId = 1;
  string amount = 2;
  uint64 fromAccountId = 3;
  uint64 toAccountId = 4;
  ZkSignature signature = 5;
  ZkSwapFee fee    = 6;
}

message ZkTransferToNew {
  uint64 tokenId = 1;
  string amount = 2;
  uint64 fromAccountId = 3;
  string toEthAddress = 4;
  string toChain33Address = 5;
  ZkSignature signature = 6;
  ZkSwapFee fee    = 7;
}

message ZkProxyExit {
  uint64 tokenId = 1;
  uint64 proxyId = 2; //代理id，扣手续费
  uint64 targetId = 3; //目标id
  ZkSignature signature = 4;
  ZkSwapFee fee    = 5;
}

message ZkSetPubKey {
  uint64 accountId = 1;
  ZkPubKey  pubKey = 2;
  uint64    pubKeyTy = 3;
  ZkSignature signature = 4;
}

message ZkFullExit {
  uint64 tokenId = 1;
  uint64 accountId = 2;
  int64 ethPriorityQueueId = 3;
  ZkSignature signature = 4;
  uint64 chainTitleId = 5;
  ZkSwapFee fee    = 6;
}

message ZkSwap {
  ZkSignature signature = 1;
}


message ZkMintNFT {
  uint64 fromAccountId = 1;
  uint64 recipientId = 2;
  string contentHash = 3;
  uint64 ercProtocol = 4;
  uint64 amount      = 5;
  ZkSignature signature = 6;
  ZkSwapFee fee    = 7;
}

message ZkWithdrawNFT {
  uint64 fromAccountId = 1;
  uint64 NFTTokenId = 2;
  uint64 amount     = 3;

  ZkSignature signature = 5;
  ZkSwapFee fee    = 6;
}

message ZkTransferNFT {
  uint64 fromAccountId = 1;
  uint64 recipientId = 2;
  uint64 NFTTokenId = 3;
  uint64 amount     = 4;

  ZkSignature signature = 6;
  ZkSwapFee fee    = 7;
}


message ZkSignature {
  ZkPubKey pubKey = 1;
  string signInfo = 2;
  ZkMsg msg = 3;
}

message ZkMsg {
  string first = 1;
  string second = 2;
  string third = 3;
}

message ZkPubKey {
  string  x = 1;
  string  y = 2;
}

message ZkSwapFee {
  string makerFee   = 1;
  string takerFee   = 2;
  uint64 tokenId    = 3; //默认是操作的币种，如果不同，则在此设置，比如NFT的交换
}

message SiblingPath {
  repeated string path    = 1;
  repeated string helper  = 2;
}

message AccountProxyPubKeys {
  //代理地址都由用户自己指定，不能由代理地址指定，代理地址只能处理有限指定的操作
  ZkPubKey normal = 1;
  ZkPubKey system = 2;
  ZkPubKey super  = 3;
}

message AccountWitness {
  uint64 ID             = 1;
  string ethAddr        = 2;
  string chain33Addr    = 3;
  string tokenTreeRoot  = 4; //sub chain token tree root
  ZkPubKey pubKey       = 5;
  SiblingPath sibling   = 6;
  AccountProxyPubKeys proxyPubKeys  = 7;

}

message TokenWitness {
  uint64 ID     = 1; //eth contract define token ID
  string balance        = 2; //eth balance u128
  SiblingPath sibling   = 3;
}

//one operation branch
message OperationMetaBranch {
  AccountWitness accountWitness       = 1;
  TokenWitness   tokenWitness         = 2;
}

// before and after operation data
message OperationPairBranch {
  OperationMetaBranch before = 1;
  OperationMetaBranch after  = 2;
}

message OperationInfo {
  uint64    blockHeight   = 1;
  uint32    txIndex       = 2;
  uint32    opIndex       = 3;

  uint32    txType        = 4;
  string    txHash        = 5;
//  uint64    accountID     = 6;
//  uint64    tokenID       = 7;
//  string    amount        = 8;
//  string    feeAmount        = 9;

//  ZkSignature sigData       = 10;

  repeated string  roots  = 11; //每个操作后的root

  //每个operation data由一对 操作前后数据组成，不同操作可以有多个操作数据，deposit:1,transfer:2
  repeated OperationPairBranch operationBranches = 12;

  //操作特殊数据,像订单数据
  OperationSpecialInfo specialInfo = 13;
  //记录deposit或fullExit对应的eth priorityId，方便查询对应区块高度和证明Id
  int64 ethPriorityId = 14;
}

message ZkProxyExitSpecialInfo {
  uint64    proxyID       = 1;
  uint64    targetId      = 2;
  uint64    tokenID       = 3;
  string    amount        = 4;
  ZkSignature signature   = 5;
  ZkSwapFee fee           = 6;
}

message ZkFullExitSpecialInfo {
  uint64    accountID     = 1;
  uint64    tokenID       = 2;
  string    amount        = 3;
  string    feeAmount     = 4;
  ZkSignature signature   = 5;
}

message ZkFeeSpecialInfo {
  uint64    accountID     = 1;
  uint64    tokenID       = 2;
  string    amount        = 3;
  ZkSignature signature   = 5;
}

message ZkMintNFTSpecialInfo {
  uint64    mintAcctId    = 1;
  uint64    recipientId   = 2;
  uint64    ercProtocol   = 3;
  repeated string contentHash = 4;
  uint64    newNFTTokenID     = 5;
  uint64    createSerialId = 6;
  string    amount        = 7;
  ZkSignature signature   = 8;
  ZkSwapFee fee           = 9;
}


message ZkWithdrawNFTSpecialInfo {
  uint64    fromAcctId    = 1;
  uint64    NFTTokenID     = 2;
  string    withdrawAmount = 3;
  uint64    creatorAcctId = 4;
  uint64    ercProtocol   = 5;
  repeated string contentHash = 6;
  uint64    createSerialId = 7;
  string    initMintAmount        = 8;
  ZkSignature signature   = 9;
  ZkSwapFee fee           = 10;
}

message ZkSwapOrderInfo {
  uint64 acctId         = 1;
  string amount         = 2;
  string ratioSell      = 3;
  string ratioBuy       = 4;
  ZkSignature signature = 5;
}

message ZkSwapSpecialInfo {
  uint64    leftTokenId    = 1; //BTY-USDT 对
  uint64    rightTokenID     = 2;
  string    leftDealAmount = 3;
  string    rightDealAmount = 4;
  ZkSwapOrderInfo maker = 5;
  ZkSwapOrderInfo taker = 6;
  ZkSwapFee fee           = 10;
}

message OperationSpecialInfo {
//  repeated OperationSpecialData specialDatas = 111;
  oneof value {
    ZkDeposit  deposit            = 1;
    ZkWithdraw withdraw           = 2;
    ZkTransfer transfer           = 3;
    ZkTransferToNew transferToNew = 4;
    ZkProxyExitSpecialInfo proxyExit = 5;
    ZkSetPubKey setPubKey         = 6;
    ZkFullExitSpecialInfo  fullExit  = 7;
    ZkSwapSpecialInfo  swap         = 8;
    ZkContractToTree contractToTree = 9;
    ZkTreeToContract treeToContract = 10;
    ZkFeeSpecialInfo fee        = 11;  //fee action
    ZkMintNFTSpecialInfo     mintNFT       = 12;
    ZkWithdrawNFTSpecialInfo withdrawNFT   = 13;
    ZkTransferNFT transferNFT   = 14;
  }
}

message OrderPricePair {
  string sell = 1;
  string buy  = 2;
}

message OperationSpecialData {
  uint64 accountID           = 1;
  uint64 recipientID         = 2; //accountID侧设置的recipientID
  string recipientAddr       = 3; //accountID侧设置的recipientAddr
  repeated string amount     = 4;  //accountID侧最初设置的amount
  repeated uint32 chainID    = 5;
  repeated uint64 tokenID    = 6;
  repeated OrderPricePair pricePair  = 7;
  ZkSignature sigData         = 8;
  repeated string contentHash = 9;
  uint64   pubKeyType         = 10;
  ZkPubKey pubKey             = 11;

}
