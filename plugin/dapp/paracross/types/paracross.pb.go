// Code generated by protoc-gen-go. DO NOT EDIT.
// source: paracross.proto

/*
Package types is a generated protocol buffer package.

It is generated from these files:
	paracross.proto

It has these top-level messages:
	ParacrossStatusDetails
	ParacrossStatusBlockDetails
	ParacrossHeightStatus
	ParacrossHeightStatusRsp
	ParacrossStatus
	ParacrossConsensusStatus
	ParaNodeAddrConfig
	ParaNodeVoteDetail
	ParaNodeAddrIdStatus
	ParaNodeIdStatus
	ReceiptParaNodeConfig
	ReceiptParaNodeAddrStatUpdate
	ReceiptParaNodeVoteDone
	ParaNodeGroupConfig
	ReqParaNodeAddrPubKey
	ParaNodeAddrPubKey
	AddrAndPubKey
	RespParaNodeAddrPubKey
	ReqConverTx2Privacy
	ParaNodeGroupStatus
	ReceiptParaNodeGroupConfig
	ReqParacrossNodeInfo
	RespParacrossNodeAddrs
	RespParacrossNodeGroups
	ParaBlock2MainMap
	ParaBlock2MainInfo
	ParacrossNodeStatus
	SelfConsensStages
	SelfConsensStage
	SelfConsensStageInfo
	LocalSelfConsStageInfo
	ConfigVoteInfo
	ConfigCancelInfo
	ParaStageConfig
	ReceiptSelfConsStageConfig
	ReceiptSelfConsStageVoteDone
	ReceiptSelfConsStagesUpdate
	ReqQuerySelfStages
	ReplyQuerySelfStages
	ParacrossCommitAction
	ParacrossMinerAction
	ParacrossAction
	ReceiptParacrossCommit
	ReceiptParacrossMiner
	ReceiptParacrossDone
	ReceiptParacrossRecord
	ParacrossTx
	ReqParacrossTitleHeight
	RespParacrossDone
	RespParacrossTitles
	ReqParacrossTitleHash
	ParacrossAsset
	ParaLocalDbBlock
	ParaLocalDbBlockInfo
*/
package types

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import types2 "github.com/33cn/chain33/types"
import types1 "github.com/33cn/chain33/types"
import types3 "github.com/33cn/chain33/types"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// stateDB
type ParacrossStatusDetails struct {
	Addrs     []string `protobuf:"bytes,1,rep,name=addrs" json:"addrs,omitempty"`
	BlockHash [][]byte `protobuf:"bytes,2,rep,name=blockHash,proto3" json:"blockHash,omitempty"`
}

func (m *ParacrossStatusDetails) Reset()                    { *m = ParacrossStatusDetails{} }
func (m *ParacrossStatusDetails) String() string            { return proto.CompactTextString(m) }
func (*ParacrossStatusDetails) ProtoMessage()               {}
func (*ParacrossStatusDetails) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ParacrossStatusDetails) GetAddrs() []string {
	if m != nil {
		return m.Addrs
	}
	return nil
}

func (m *ParacrossStatusDetails) GetBlockHash() [][]byte {
	if m != nil {
		return m.BlockHash
	}
	return nil
}

// 记录不同blockHash的详细数据
type ParacrossStatusBlockDetails struct {
	BlockHashs [][]byte `protobuf:"bytes,1,rep,name=blockHashs,proto3" json:"blockHashs,omitempty"`
	TxResults  [][]byte `protobuf:"bytes,2,rep,name=txResults,proto3" json:"txResults,omitempty"`
}

func (m *ParacrossStatusBlockDetails) Reset()                    { *m = ParacrossStatusBlockDetails{} }
func (m *ParacrossStatusBlockDetails) String() string            { return proto.CompactTextString(m) }
func (*ParacrossStatusBlockDetails) ProtoMessage()               {}
func (*ParacrossStatusBlockDetails) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ParacrossStatusBlockDetails) GetBlockHashs() [][]byte {
	if m != nil {
		return m.BlockHashs
	}
	return nil
}

func (m *ParacrossStatusBlockDetails) GetTxResults() [][]byte {
	if m != nil {
		return m.TxResults
	}
	return nil
}

type ParacrossHeightStatus struct {
	// ing, done
	Status       int32                        `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	Title        string                       `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	Height       int64                        `protobuf:"varint,3,opt,name=height" json:"height,omitempty"`
	Details      *ParacrossStatusDetails      `protobuf:"bytes,4,opt,name=details" json:"details,omitempty"`
	MainHeight   int64                        `protobuf:"varint,5,opt,name=mainHeight" json:"mainHeight,omitempty"`
	MainHash     []byte                       `protobuf:"bytes,6,opt,name=mainHash,proto3" json:"mainHash,omitempty"`
	BlockDetails *ParacrossStatusBlockDetails `protobuf:"bytes,7,opt,name=blockDetails" json:"blockDetails,omitempty"`
}

func (m *ParacrossHeightStatus) Reset()                    { *m = ParacrossHeightStatus{} }
func (m *ParacrossHeightStatus) String() string            { return proto.CompactTextString(m) }
func (*ParacrossHeightStatus) ProtoMessage()               {}
func (*ParacrossHeightStatus) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ParacrossHeightStatus) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *ParacrossHeightStatus) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *ParacrossHeightStatus) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *ParacrossHeightStatus) GetDetails() *ParacrossStatusDetails {
	if m != nil {
		return m.Details
	}
	return nil
}

func (m *ParacrossHeightStatus) GetMainHeight() int64 {
	if m != nil {
		return m.MainHeight
	}
	return 0
}

func (m *ParacrossHeightStatus) GetMainHash() []byte {
	if m != nil {
		return m.MainHash
	}
	return nil
}

func (m *ParacrossHeightStatus) GetBlockDetails() *ParacrossStatusBlockDetails {
	if m != nil {
		return m.BlockDetails
	}
	return nil
}

type ParacrossHeightStatusRsp struct {
	Status          int32    `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	Title           string   `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	Height          int64    `protobuf:"varint,3,opt,name=height" json:"height,omitempty"`
	MainHeight      int64    `protobuf:"varint,4,opt,name=mainHeight" json:"mainHeight,omitempty"`
	MainHash        string   `protobuf:"bytes,5,opt,name=mainHash" json:"mainHash,omitempty"`
	CommitAddrs     []string `protobuf:"bytes,6,rep,name=commitAddrs" json:"commitAddrs,omitempty"`
	CommitBlockHash []string `protobuf:"bytes,7,rep,name=commitBlockHash" json:"commitBlockHash,omitempty"`
}

func (m *ParacrossHeightStatusRsp) Reset()                    { *m = ParacrossHeightStatusRsp{} }
func (m *ParacrossHeightStatusRsp) String() string            { return proto.CompactTextString(m) }
func (*ParacrossHeightStatusRsp) ProtoMessage()               {}
func (*ParacrossHeightStatusRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ParacrossHeightStatusRsp) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *ParacrossHeightStatusRsp) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *ParacrossHeightStatusRsp) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *ParacrossHeightStatusRsp) GetMainHeight() int64 {
	if m != nil {
		return m.MainHeight
	}
	return 0
}

func (m *ParacrossHeightStatusRsp) GetMainHash() string {
	if m != nil {
		return m.MainHash
	}
	return ""
}

func (m *ParacrossHeightStatusRsp) GetCommitAddrs() []string {
	if m != nil {
		return m.CommitAddrs
	}
	return nil
}

func (m *ParacrossHeightStatusRsp) GetCommitBlockHash() []string {
	if m != nil {
		return m.CommitBlockHash
	}
	return nil
}

type ParacrossStatus struct {
	Title      string `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
	Height     int64  `protobuf:"varint,2,opt,name=height" json:"height,omitempty"`
	BlockHash  []byte `protobuf:"bytes,3,opt,name=blockHash,proto3" json:"blockHash,omitempty"`
	MainHeight int64  `protobuf:"varint,4,opt,name=mainHeight" json:"mainHeight,omitempty"`
	MainHash   []byte `protobuf:"bytes,5,opt,name=mainHash,proto3" json:"mainHash,omitempty"`
}

func (m *ParacrossStatus) Reset()                    { *m = ParacrossStatus{} }
func (m *ParacrossStatus) String() string            { return proto.CompactTextString(m) }
func (*ParacrossStatus) ProtoMessage()               {}
func (*ParacrossStatus) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ParacrossStatus) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *ParacrossStatus) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *ParacrossStatus) GetBlockHash() []byte {
	if m != nil {
		return m.BlockHash
	}
	return nil
}

func (m *ParacrossStatus) GetMainHeight() int64 {
	if m != nil {
		return m.MainHeight
	}
	return 0
}

func (m *ParacrossStatus) GetMainHash() []byte {
	if m != nil {
		return m.MainHash
	}
	return nil
}

type ParacrossConsensusStatus struct {
	Title            string `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
	ChainHeight      int64  `protobuf:"varint,2,opt,name=chainHeight" json:"chainHeight,omitempty"`
	ConsensHeight    int64  `protobuf:"varint,3,opt,name=consensHeight" json:"consensHeight,omitempty"`
	ConsensBlockHash string `protobuf:"bytes,4,opt,name=consensBlockHash" json:"consensBlockHash,omitempty"`
}

func (m *ParacrossConsensusStatus) Reset()                    { *m = ParacrossConsensusStatus{} }
func (m *ParacrossConsensusStatus) String() string            { return proto.CompactTextString(m) }
func (*ParacrossConsensusStatus) ProtoMessage()               {}
func (*ParacrossConsensusStatus) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *ParacrossConsensusStatus) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *ParacrossConsensusStatus) GetChainHeight() int64 {
	if m != nil {
		return m.ChainHeight
	}
	return 0
}

func (m *ParacrossConsensusStatus) GetConsensHeight() int64 {
	if m != nil {
		return m.ConsensHeight
	}
	return 0
}

func (m *ParacrossConsensusStatus) GetConsensBlockHash() string {
	if m != nil {
		return m.ConsensBlockHash
	}
	return ""
}

type ParaNodeAddrConfig struct {
	Title       string `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
	Op          uint32 `protobuf:"varint,2,opt,name=op" json:"op,omitempty"`
	Id          string `protobuf:"bytes,3,opt,name=id" json:"id,omitempty"`
	Addr        string `protobuf:"bytes,4,opt,name=addr" json:"addr,omitempty"`
	Value       uint32 `protobuf:"varint,5,opt,name=value" json:"value,omitempty"`
	CoinsFrozen int64  `protobuf:"varint,6,opt,name=coinsFrozen" json:"coinsFrozen,omitempty"`
}

func (m *ParaNodeAddrConfig) Reset()                    { *m = ParaNodeAddrConfig{} }
func (m *ParaNodeAddrConfig) String() string            { return proto.CompactTextString(m) }
func (*ParaNodeAddrConfig) ProtoMessage()               {}
func (*ParaNodeAddrConfig) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *ParaNodeAddrConfig) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *ParaNodeAddrConfig) GetOp() uint32 {
	if m != nil {
		return m.Op
	}
	return 0
}

func (m *ParaNodeAddrConfig) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ParaNodeAddrConfig) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func (m *ParaNodeAddrConfig) GetValue() uint32 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *ParaNodeAddrConfig) GetCoinsFrozen() int64 {
	if m != nil {
		return m.CoinsFrozen
	}
	return 0
}

type ParaNodeVoteDetail struct {
	Addrs []string `protobuf:"bytes,1,rep,name=addrs" json:"addrs,omitempty"`
	Votes []string `protobuf:"bytes,2,rep,name=votes" json:"votes,omitempty"`
}

func (m *ParaNodeVoteDetail) Reset()                    { *m = ParaNodeVoteDetail{} }
func (m *ParaNodeVoteDetail) String() string            { return proto.CompactTextString(m) }
func (*ParaNodeVoteDetail) ProtoMessage()               {}
func (*ParaNodeVoteDetail) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *ParaNodeVoteDetail) GetAddrs() []string {
	if m != nil {
		return m.Addrs
	}
	return nil
}

func (m *ParaNodeVoteDetail) GetVotes() []string {
	if m != nil {
		return m.Votes
	}
	return nil
}

type ParaNodeAddrIdStatus struct {
	Addr       string `protobuf:"bytes,1,opt,name=addr" json:"addr,omitempty"`
	ProposalId string `protobuf:"bytes,2,opt,name=proposalId" json:"proposalId,omitempty"`
	QuitId     string `protobuf:"bytes,3,opt,name=quitId" json:"quitId,omitempty"`
	Status     int32  `protobuf:"varint,4,opt,name=status" json:"status,omitempty"`
	Title      string `protobuf:"bytes,5,opt,name=title" json:"title,omitempty"`
}

func (m *ParaNodeAddrIdStatus) Reset()                    { *m = ParaNodeAddrIdStatus{} }
func (m *ParaNodeAddrIdStatus) String() string            { return proto.CompactTextString(m) }
func (*ParaNodeAddrIdStatus) ProtoMessage()               {}
func (*ParaNodeAddrIdStatus) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *ParaNodeAddrIdStatus) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func (m *ParaNodeAddrIdStatus) GetProposalId() string {
	if m != nil {
		return m.ProposalId
	}
	return ""
}

func (m *ParaNodeAddrIdStatus) GetQuitId() string {
	if m != nil {
		return m.QuitId
	}
	return ""
}

func (m *ParaNodeAddrIdStatus) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *ParaNodeAddrIdStatus) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

type ParaNodeIdStatus struct {
	Id          string              `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Status      int32               `protobuf:"varint,2,opt,name=status" json:"status,omitempty"`
	Title       string              `protobuf:"bytes,3,opt,name=title" json:"title,omitempty"`
	TargetAddr  string              `protobuf:"bytes,4,opt,name=targetAddr" json:"targetAddr,omitempty"`
	CoinsFrozen int64               `protobuf:"varint,5,opt,name=coinsFrozen" json:"coinsFrozen,omitempty"`
	Votes       *ParaNodeVoteDetail `protobuf:"bytes,6,opt,name=votes" json:"votes,omitempty"`
	FromAddr    string              `protobuf:"bytes,7,opt,name=fromAddr" json:"fromAddr,omitempty"`
	Height      int64               `protobuf:"varint,8,opt,name=height" json:"height,omitempty"`
}

func (m *ParaNodeIdStatus) Reset()                    { *m = ParaNodeIdStatus{} }
func (m *ParaNodeIdStatus) String() string            { return proto.CompactTextString(m) }
func (*ParaNodeIdStatus) ProtoMessage()               {}
func (*ParaNodeIdStatus) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *ParaNodeIdStatus) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ParaNodeIdStatus) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *ParaNodeIdStatus) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *ParaNodeIdStatus) GetTargetAddr() string {
	if m != nil {
		return m.TargetAddr
	}
	return ""
}

func (m *ParaNodeIdStatus) GetCoinsFrozen() int64 {
	if m != nil {
		return m.CoinsFrozen
	}
	return 0
}

func (m *ParaNodeIdStatus) GetVotes() *ParaNodeVoteDetail {
	if m != nil {
		return m.Votes
	}
	return nil
}

func (m *ParaNodeIdStatus) GetFromAddr() string {
	if m != nil {
		return m.FromAddr
	}
	return ""
}

func (m *ParaNodeIdStatus) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

type ReceiptParaNodeConfig struct {
	Addr    string              `protobuf:"bytes,1,opt,name=addr" json:"addr,omitempty"`
	Config  *ParaNodeAddrConfig `protobuf:"bytes,2,opt,name=config" json:"config,omitempty"`
	Prev    *ParaNodeIdStatus   `protobuf:"bytes,3,opt,name=prev" json:"prev,omitempty"`
	Current *ParaNodeIdStatus   `protobuf:"bytes,4,opt,name=current" json:"current,omitempty"`
}

func (m *ReceiptParaNodeConfig) Reset()                    { *m = ReceiptParaNodeConfig{} }
func (m *ReceiptParaNodeConfig) String() string            { return proto.CompactTextString(m) }
func (*ReceiptParaNodeConfig) ProtoMessage()               {}
func (*ReceiptParaNodeConfig) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *ReceiptParaNodeConfig) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func (m *ReceiptParaNodeConfig) GetConfig() *ParaNodeAddrConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

func (m *ReceiptParaNodeConfig) GetPrev() *ParaNodeIdStatus {
	if m != nil {
		return m.Prev
	}
	return nil
}

func (m *ReceiptParaNodeConfig) GetCurrent() *ParaNodeIdStatus {
	if m != nil {
		return m.Current
	}
	return nil
}

type ReceiptParaNodeAddrStatUpdate struct {
	FromAddr string                `protobuf:"bytes,1,opt,name=fromAddr" json:"fromAddr,omitempty"`
	Prev     *ParaNodeAddrIdStatus `protobuf:"bytes,2,opt,name=prev" json:"prev,omitempty"`
	Current  *ParaNodeAddrIdStatus `protobuf:"bytes,3,opt,name=current" json:"current,omitempty"`
}

func (m *ReceiptParaNodeAddrStatUpdate) Reset()                    { *m = ReceiptParaNodeAddrStatUpdate{} }
func (m *ReceiptParaNodeAddrStatUpdate) String() string            { return proto.CompactTextString(m) }
func (*ReceiptParaNodeAddrStatUpdate) ProtoMessage()               {}
func (*ReceiptParaNodeAddrStatUpdate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *ReceiptParaNodeAddrStatUpdate) GetFromAddr() string {
	if m != nil {
		return m.FromAddr
	}
	return ""
}

func (m *ReceiptParaNodeAddrStatUpdate) GetPrev() *ParaNodeAddrIdStatus {
	if m != nil {
		return m.Prev
	}
	return nil
}

func (m *ReceiptParaNodeAddrStatUpdate) GetCurrent() *ParaNodeAddrIdStatus {
	if m != nil {
		return m.Current
	}
	return nil
}

type ReceiptParaNodeVoteDone struct {
	Id         string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Title      string `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	TargetAddr string `protobuf:"bytes,3,opt,name=targetAddr" json:"targetAddr,omitempty"`
	TotalNodes int32  `protobuf:"varint,4,opt,name=totalNodes" json:"totalNodes,omitempty"`
	TotalVote  int32  `protobuf:"varint,5,opt,name=totalVote" json:"totalVote,omitempty"`
	MostVote   int32  `protobuf:"varint,6,opt,name=mostVote" json:"mostVote,omitempty"`
	VoteRst    string `protobuf:"bytes,7,opt,name=voteRst" json:"voteRst,omitempty"`
	DoneStatus int32  `protobuf:"varint,8,opt,name=doneStatus" json:"doneStatus,omitempty"`
}

func (m *ReceiptParaNodeVoteDone) Reset()                    { *m = ReceiptParaNodeVoteDone{} }
func (m *ReceiptParaNodeVoteDone) String() string            { return proto.CompactTextString(m) }
func (*ReceiptParaNodeVoteDone) ProtoMessage()               {}
func (*ReceiptParaNodeVoteDone) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *ReceiptParaNodeVoteDone) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ReceiptParaNodeVoteDone) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *ReceiptParaNodeVoteDone) GetTargetAddr() string {
	if m != nil {
		return m.TargetAddr
	}
	return ""
}

func (m *ReceiptParaNodeVoteDone) GetTotalNodes() int32 {
	if m != nil {
		return m.TotalNodes
	}
	return 0
}

func (m *ReceiptParaNodeVoteDone) GetTotalVote() int32 {
	if m != nil {
		return m.TotalVote
	}
	return 0
}

func (m *ReceiptParaNodeVoteDone) GetMostVote() int32 {
	if m != nil {
		return m.MostVote
	}
	return 0
}

func (m *ReceiptParaNodeVoteDone) GetVoteRst() string {
	if m != nil {
		return m.VoteRst
	}
	return ""
}

func (m *ReceiptParaNodeVoteDone) GetDoneStatus() int32 {
	if m != nil {
		return m.DoneStatus
	}
	return 0
}

type ParaNodeGroupConfig struct {
	Title       string `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
	Op          uint32 `protobuf:"varint,2,opt,name=op" json:"op,omitempty"`
	Id          string `protobuf:"bytes,3,opt,name=id" json:"id,omitempty"`
	Addrs       string `protobuf:"bytes,4,opt,name=addrs" json:"addrs,omitempty"`
	CoinsFrozen int64  `protobuf:"varint,5,opt,name=coinsFrozen" json:"coinsFrozen,omitempty"`
}

func (m *ParaNodeGroupConfig) Reset()                    { *m = ParaNodeGroupConfig{} }
func (m *ParaNodeGroupConfig) String() string            { return proto.CompactTextString(m) }
func (*ParaNodeGroupConfig) ProtoMessage()               {}
func (*ParaNodeGroupConfig) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *ParaNodeGroupConfig) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *ParaNodeGroupConfig) GetOp() uint32 {
	if m != nil {
		return m.Op
	}
	return 0
}

func (m *ParaNodeGroupConfig) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ParaNodeGroupConfig) GetAddrs() string {
	if m != nil {
		return m.Addrs
	}
	return ""
}

func (m *ParaNodeGroupConfig) GetCoinsFrozen() int64 {
	if m != nil {
		return m.CoinsFrozen
	}
	return 0
}

type ReqParaNodeAddrPubKey struct {
	Title string `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
}

func (m *ReqParaNodeAddrPubKey) Reset()                    { *m = ReqParaNodeAddrPubKey{} }
func (m *ReqParaNodeAddrPubKey) String() string            { return proto.CompactTextString(m) }
func (*ReqParaNodeAddrPubKey) ProtoMessage()               {}
func (*ReqParaNodeAddrPubKey) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *ReqParaNodeAddrPubKey) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

type ParaNodeAddrPubKey struct {
	Addr2Pubkey map[string][]byte `protobuf:"bytes,1,rep,name=addr2pubkey" json:"addr2pubkey,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (m *ParaNodeAddrPubKey) Reset()                    { *m = ParaNodeAddrPubKey{} }
func (m *ParaNodeAddrPubKey) String() string            { return proto.CompactTextString(m) }
func (*ParaNodeAddrPubKey) ProtoMessage()               {}
func (*ParaNodeAddrPubKey) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *ParaNodeAddrPubKey) GetAddr2Pubkey() map[string][]byte {
	if m != nil {
		return m.Addr2Pubkey
	}
	return nil
}

type AddrAndPubKey struct {
	Addr   string `protobuf:"bytes,1,opt,name=addr" json:"addr,omitempty"`
	Pubkey string `protobuf:"bytes,2,opt,name=pubkey" json:"pubkey,omitempty"`
}

func (m *AddrAndPubKey) Reset()                    { *m = AddrAndPubKey{} }
func (m *AddrAndPubKey) String() string            { return proto.CompactTextString(m) }
func (*AddrAndPubKey) ProtoMessage()               {}
func (*AddrAndPubKey) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *AddrAndPubKey) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func (m *AddrAndPubKey) GetPubkey() string {
	if m != nil {
		return m.Pubkey
	}
	return ""
}

type RespParaNodeAddrPubKey struct {
	AddrAndPubKey []*AddrAndPubKey `protobuf:"bytes,1,rep,name=addrAndPubKey" json:"addrAndPubKey,omitempty"`
}

func (m *RespParaNodeAddrPubKey) Reset()                    { *m = RespParaNodeAddrPubKey{} }
func (m *RespParaNodeAddrPubKey) String() string            { return proto.CompactTextString(m) }
func (*RespParaNodeAddrPubKey) ProtoMessage()               {}
func (*RespParaNodeAddrPubKey) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *RespParaNodeAddrPubKey) GetAddrAndPubKey() []*AddrAndPubKey {
	if m != nil {
		return m.AddrAndPubKey
	}
	return nil
}

type ReqConverTx2Privacy struct {
	Data string `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
}

func (m *ReqConverTx2Privacy) Reset()                    { *m = ReqConverTx2Privacy{} }
func (m *ReqConverTx2Privacy) String() string            { return proto.CompactTextString(m) }
func (*ReqConverTx2Privacy) ProtoMessage()               {}
func (*ReqConverTx2Privacy) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *ReqConverTx2Privacy) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

type ParaNodeGroupStatus struct {
	Id          string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Status      int32  `protobuf:"varint,2,opt,name=status" json:"status,omitempty"`
	Title       string `protobuf:"bytes,3,opt,name=title" json:"title,omitempty"`
	TargetAddrs string `protobuf:"bytes,4,opt,name=targetAddrs" json:"targetAddrs,omitempty"`
	CoinsFrozen int64  `protobuf:"varint,5,opt,name=coinsFrozen" json:"coinsFrozen,omitempty"`
	FromAddr    string `protobuf:"bytes,6,opt,name=fromAddr" json:"fromAddr,omitempty"`
	Height      int64  `protobuf:"varint,7,opt,name=height" json:"height,omitempty"`
}

func (m *ParaNodeGroupStatus) Reset()                    { *m = ParaNodeGroupStatus{} }
func (m *ParaNodeGroupStatus) String() string            { return proto.CompactTextString(m) }
func (*ParaNodeGroupStatus) ProtoMessage()               {}
func (*ParaNodeGroupStatus) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *ParaNodeGroupStatus) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ParaNodeGroupStatus) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *ParaNodeGroupStatus) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *ParaNodeGroupStatus) GetTargetAddrs() string {
	if m != nil {
		return m.TargetAddrs
	}
	return ""
}

func (m *ParaNodeGroupStatus) GetCoinsFrozen() int64 {
	if m != nil {
		return m.CoinsFrozen
	}
	return 0
}

func (m *ParaNodeGroupStatus) GetFromAddr() string {
	if m != nil {
		return m.FromAddr
	}
	return ""
}

func (m *ParaNodeGroupStatus) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

type ReceiptParaNodeGroupConfig struct {
	Addr    string               `protobuf:"bytes,1,opt,name=addr" json:"addr,omitempty"`
	Config  *ParaNodeGroupConfig `protobuf:"bytes,2,opt,name=config" json:"config,omitempty"`
	Prev    *ParaNodeGroupStatus `protobuf:"bytes,3,opt,name=prev" json:"prev,omitempty"`
	Current *ParaNodeGroupStatus `protobuf:"bytes,4,opt,name=current" json:"current,omitempty"`
}

func (m *ReceiptParaNodeGroupConfig) Reset()                    { *m = ReceiptParaNodeGroupConfig{} }
func (m *ReceiptParaNodeGroupConfig) String() string            { return proto.CompactTextString(m) }
func (*ReceiptParaNodeGroupConfig) ProtoMessage()               {}
func (*ReceiptParaNodeGroupConfig) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *ReceiptParaNodeGroupConfig) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func (m *ReceiptParaNodeGroupConfig) GetConfig() *ParaNodeGroupConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

func (m *ReceiptParaNodeGroupConfig) GetPrev() *ParaNodeGroupStatus {
	if m != nil {
		return m.Prev
	}
	return nil
}

func (m *ReceiptParaNodeGroupConfig) GetCurrent() *ParaNodeGroupStatus {
	if m != nil {
		return m.Current
	}
	return nil
}

// node query
type ReqParacrossNodeInfo struct {
	Title  string `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
	Id     string `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	Addr   string `protobuf:"bytes,3,opt,name=addr" json:"addr,omitempty"`
	Status int32  `protobuf:"varint,4,opt,name=status" json:"status,omitempty"`
}

func (m *ReqParacrossNodeInfo) Reset()                    { *m = ReqParacrossNodeInfo{} }
func (m *ReqParacrossNodeInfo) String() string            { return proto.CompactTextString(m) }
func (*ReqParacrossNodeInfo) ProtoMessage()               {}
func (*ReqParacrossNodeInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *ReqParacrossNodeInfo) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *ReqParacrossNodeInfo) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ReqParacrossNodeInfo) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func (m *ReqParacrossNodeInfo) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

type RespParacrossNodeAddrs struct {
	Ids []*ParaNodeIdStatus `protobuf:"bytes,1,rep,name=ids" json:"ids,omitempty"`
}

func (m *RespParacrossNodeAddrs) Reset()                    { *m = RespParacrossNodeAddrs{} }
func (m *RespParacrossNodeAddrs) String() string            { return proto.CompactTextString(m) }
func (*RespParacrossNodeAddrs) ProtoMessage()               {}
func (*RespParacrossNodeAddrs) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *RespParacrossNodeAddrs) GetIds() []*ParaNodeIdStatus {
	if m != nil {
		return m.Ids
	}
	return nil
}

type RespParacrossNodeGroups struct {
	Ids []*ParaNodeGroupStatus `protobuf:"bytes,1,rep,name=ids" json:"ids,omitempty"`
}

func (m *RespParacrossNodeGroups) Reset()                    { *m = RespParacrossNodeGroups{} }
func (m *RespParacrossNodeGroups) String() string            { return proto.CompactTextString(m) }
func (*RespParacrossNodeGroups) ProtoMessage()               {}
func (*RespParacrossNodeGroups) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

func (m *RespParacrossNodeGroups) GetIds() []*ParaNodeGroupStatus {
	if m != nil {
		return m.Ids
	}
	return nil
}

type ParaBlock2MainMap struct {
	Height     int64  `protobuf:"varint,1,opt,name=height" json:"height,omitempty"`
	BlockHash  string `protobuf:"bytes,2,opt,name=blockHash" json:"blockHash,omitempty"`
	MainHeight int64  `protobuf:"varint,3,opt,name=mainHeight" json:"mainHeight,omitempty"`
	MainHash   string `protobuf:"bytes,4,opt,name=mainHash" json:"mainHash,omitempty"`
}

func (m *ParaBlock2MainMap) Reset()                    { *m = ParaBlock2MainMap{} }
func (m *ParaBlock2MainMap) String() string            { return proto.CompactTextString(m) }
func (*ParaBlock2MainMap) ProtoMessage()               {}
func (*ParaBlock2MainMap) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

func (m *ParaBlock2MainMap) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *ParaBlock2MainMap) GetBlockHash() string {
	if m != nil {
		return m.BlockHash
	}
	return ""
}

func (m *ParaBlock2MainMap) GetMainHeight() int64 {
	if m != nil {
		return m.MainHeight
	}
	return 0
}

func (m *ParaBlock2MainMap) GetMainHash() string {
	if m != nil {
		return m.MainHash
	}
	return ""
}

type ParaBlock2MainInfo struct {
	Items []*ParaBlock2MainMap `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
}

func (m *ParaBlock2MainInfo) Reset()                    { *m = ParaBlock2MainInfo{} }
func (m *ParaBlock2MainInfo) String() string            { return proto.CompactTextString(m) }
func (*ParaBlock2MainInfo) ProtoMessage()               {}
func (*ParaBlock2MainInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25} }

func (m *ParaBlock2MainInfo) GetItems() []*ParaBlock2MainMap {
	if m != nil {
		return m.Items
	}
	return nil
}

// action
type ParacrossNodeStatus struct {
	MainBlockHash     []byte   `protobuf:"bytes,1,opt,name=mainBlockHash,proto3" json:"mainBlockHash,omitempty"`
	MainBlockHeight   int64    `protobuf:"varint,2,opt,name=mainBlockHeight" json:"mainBlockHeight,omitempty"`
	Title             string   `protobuf:"bytes,3,opt,name=title" json:"title,omitempty"`
	Height            int64    `protobuf:"varint,4,opt,name=height" json:"height,omitempty"`
	PreBlockHash      []byte   `protobuf:"bytes,5,opt,name=preBlockHash,proto3" json:"preBlockHash,omitempty"`
	BlockHash         []byte   `protobuf:"bytes,6,opt,name=blockHash,proto3" json:"blockHash,omitempty"`
	PreStateHash      []byte   `protobuf:"bytes,7,opt,name=preStateHash,proto3" json:"preStateHash,omitempty"`
	StateHash         []byte   `protobuf:"bytes,8,opt,name=stateHash,proto3" json:"stateHash,omitempty"`
	TxCounts          uint32   `protobuf:"varint,9,opt,name=txCounts" json:"txCounts,omitempty"`
	TxResult          []byte   `protobuf:"bytes,10,opt,name=txResult,proto3" json:"txResult,omitempty"`
	TxHashs           [][]byte `protobuf:"bytes,11,rep,name=txHashs,proto3" json:"txHashs,omitempty"`
	CrossTxResult     []byte   `protobuf:"bytes,12,opt,name=crossTxResult,proto3" json:"crossTxResult,omitempty"`
	CrossTxHashs      [][]byte `protobuf:"bytes,13,rep,name=crossTxHashs,proto3" json:"crossTxHashs,omitempty"`
	NonCommitTxCounts uint32   `protobuf:"varint,14,opt,name=nonCommitTxCounts" json:"nonCommitTxCounts,omitempty"`
}

func (m *ParacrossNodeStatus) Reset()                    { *m = ParacrossNodeStatus{} }
func (m *ParacrossNodeStatus) String() string            { return proto.CompactTextString(m) }
func (*ParacrossNodeStatus) ProtoMessage()               {}
func (*ParacrossNodeStatus) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26} }

func (m *ParacrossNodeStatus) GetMainBlockHash() []byte {
	if m != nil {
		return m.MainBlockHash
	}
	return nil
}

func (m *ParacrossNodeStatus) GetMainBlockHeight() int64 {
	if m != nil {
		return m.MainBlockHeight
	}
	return 0
}

func (m *ParacrossNodeStatus) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *ParacrossNodeStatus) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *ParacrossNodeStatus) GetPreBlockHash() []byte {
	if m != nil {
		return m.PreBlockHash
	}
	return nil
}

func (m *ParacrossNodeStatus) GetBlockHash() []byte {
	if m != nil {
		return m.BlockHash
	}
	return nil
}

func (m *ParacrossNodeStatus) GetPreStateHash() []byte {
	if m != nil {
		return m.PreStateHash
	}
	return nil
}

func (m *ParacrossNodeStatus) GetStateHash() []byte {
	if m != nil {
		return m.StateHash
	}
	return nil
}

func (m *ParacrossNodeStatus) GetTxCounts() uint32 {
	if m != nil {
		return m.TxCounts
	}
	return 0
}

func (m *ParacrossNodeStatus) GetTxResult() []byte {
	if m != nil {
		return m.TxResult
	}
	return nil
}

func (m *ParacrossNodeStatus) GetTxHashs() [][]byte {
	if m != nil {
		return m.TxHashs
	}
	return nil
}

func (m *ParacrossNodeStatus) GetCrossTxResult() []byte {
	if m != nil {
		return m.CrossTxResult
	}
	return nil
}

func (m *ParacrossNodeStatus) GetCrossTxHashs() [][]byte {
	if m != nil {
		return m.CrossTxHashs
	}
	return nil
}

func (m *ParacrossNodeStatus) GetNonCommitTxCounts() uint32 {
	if m != nil {
		return m.NonCommitTxCounts
	}
	return 0
}

type SelfConsensStages struct {
	Items []*SelfConsensStage `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
}

func (m *SelfConsensStages) Reset()                    { *m = SelfConsensStages{} }
func (m *SelfConsensStages) String() string            { return proto.CompactTextString(m) }
func (*SelfConsensStages) ProtoMessage()               {}
func (*SelfConsensStages) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{27} }

func (m *SelfConsensStages) GetItems() []*SelfConsensStage {
	if m != nil {
		return m.Items
	}
	return nil
}

type SelfConsensStage struct {
	StartHeight int64  `protobuf:"varint,1,opt,name=startHeight" json:"startHeight,omitempty"`
	Enable      uint32 `protobuf:"varint,2,opt,name=enable" json:"enable,omitempty"`
}

func (m *SelfConsensStage) Reset()                    { *m = SelfConsensStage{} }
func (m *SelfConsensStage) String() string            { return proto.CompactTextString(m) }
func (*SelfConsensStage) ProtoMessage()               {}
func (*SelfConsensStage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{28} }

func (m *SelfConsensStage) GetStartHeight() int64 {
	if m != nil {
		return m.StartHeight
	}
	return 0
}

func (m *SelfConsensStage) GetEnable() uint32 {
	if m != nil {
		return m.Enable
	}
	return 0
}

type SelfConsensStageInfo struct {
	Id         string              `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Status     uint32              `protobuf:"varint,2,opt,name=status" json:"status,omitempty"`
	Stage      *SelfConsensStage   `protobuf:"bytes,3,opt,name=stage" json:"stage,omitempty"`
	FromAddr   string              `protobuf:"bytes,4,opt,name=fromAddr" json:"fromAddr,omitempty"`
	ExecHeight int64               `protobuf:"varint,5,opt,name=execHeight" json:"execHeight,omitempty"`
	Votes      *ParaNodeVoteDetail `protobuf:"bytes,6,opt,name=votes" json:"votes,omitempty"`
}

func (m *SelfConsensStageInfo) Reset()                    { *m = SelfConsensStageInfo{} }
func (m *SelfConsensStageInfo) String() string            { return proto.CompactTextString(m) }
func (*SelfConsensStageInfo) ProtoMessage()               {}
func (*SelfConsensStageInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{29} }

func (m *SelfConsensStageInfo) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SelfConsensStageInfo) GetStatus() uint32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *SelfConsensStageInfo) GetStage() *SelfConsensStage {
	if m != nil {
		return m.Stage
	}
	return nil
}

func (m *SelfConsensStageInfo) GetFromAddr() string {
	if m != nil {
		return m.FromAddr
	}
	return ""
}

func (m *SelfConsensStageInfo) GetExecHeight() int64 {
	if m != nil {
		return m.ExecHeight
	}
	return 0
}

func (m *SelfConsensStageInfo) GetVotes() *ParaNodeVoteDetail {
	if m != nil {
		return m.Votes
	}
	return nil
}

type LocalSelfConsStageInfo struct {
	Stage   *SelfConsensStageInfo `protobuf:"bytes,1,opt,name=stage" json:"stage,omitempty"`
	TxIndex string                `protobuf:"bytes,2,opt,name=txIndex" json:"txIndex,omitempty"`
}

func (m *LocalSelfConsStageInfo) Reset()                    { *m = LocalSelfConsStageInfo{} }
func (m *LocalSelfConsStageInfo) String() string            { return proto.CompactTextString(m) }
func (*LocalSelfConsStageInfo) ProtoMessage()               {}
func (*LocalSelfConsStageInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{30} }

func (m *LocalSelfConsStageInfo) GetStage() *SelfConsensStageInfo {
	if m != nil {
		return m.Stage
	}
	return nil
}

func (m *LocalSelfConsStageInfo) GetTxIndex() string {
	if m != nil {
		return m.TxIndex
	}
	return ""
}

type ConfigVoteInfo struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// 投票值　１:ok 2:nok
	Value uint32 `protobuf:"varint,2,opt,name=value" json:"value,omitempty"`
}

func (m *ConfigVoteInfo) Reset()                    { *m = ConfigVoteInfo{} }
func (m *ConfigVoteInfo) String() string            { return proto.CompactTextString(m) }
func (*ConfigVoteInfo) ProtoMessage()               {}
func (*ConfigVoteInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{31} }

func (m *ConfigVoteInfo) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ConfigVoteInfo) GetValue() uint32 {
	if m != nil {
		return m.Value
	}
	return 0
}

type ConfigCancelInfo struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *ConfigCancelInfo) Reset()                    { *m = ConfigCancelInfo{} }
func (m *ConfigCancelInfo) String() string            { return proto.CompactTextString(m) }
func (*ConfigCancelInfo) ProtoMessage()               {}
func (*ConfigCancelInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{32} }

func (m *ConfigCancelInfo) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

// 广义配置类型
type ParaStageConfig struct {
	Title string `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
	// 配置类型
	Op uint32 `protobuf:"varint,2,opt,name=op" json:"op,omitempty"`
	// Types that are valid to be assigned to Value:
	//	*ParaStageConfig_Stage
	//	*ParaStageConfig_Vote
	//	*ParaStageConfig_Cancel
	Value isParaStageConfig_Value `protobuf_oneof:"value"`
}

func (m *ParaStageConfig) Reset()                    { *m = ParaStageConfig{} }
func (m *ParaStageConfig) String() string            { return proto.CompactTextString(m) }
func (*ParaStageConfig) ProtoMessage()               {}
func (*ParaStageConfig) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{33} }

type isParaStageConfig_Value interface {
	isParaStageConfig_Value()
}

type ParaStageConfig_Stage struct {
	Stage *SelfConsensStage `protobuf:"bytes,10,opt,name=stage,oneof"`
}
type ParaStageConfig_Vote struct {
	Vote *ConfigVoteInfo `protobuf:"bytes,11,opt,name=vote,oneof"`
}
type ParaStageConfig_Cancel struct {
	Cancel *ConfigCancelInfo `protobuf:"bytes,12,opt,name=cancel,oneof"`
}

func (*ParaStageConfig_Stage) isParaStageConfig_Value()  {}
func (*ParaStageConfig_Vote) isParaStageConfig_Value()   {}
func (*ParaStageConfig_Cancel) isParaStageConfig_Value() {}

func (m *ParaStageConfig) GetValue() isParaStageConfig_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *ParaStageConfig) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *ParaStageConfig) GetOp() uint32 {
	if m != nil {
		return m.Op
	}
	return 0
}

func (m *ParaStageConfig) GetStage() *SelfConsensStage {
	if x, ok := m.GetValue().(*ParaStageConfig_Stage); ok {
		return x.Stage
	}
	return nil
}

func (m *ParaStageConfig) GetVote() *ConfigVoteInfo {
	if x, ok := m.GetValue().(*ParaStageConfig_Vote); ok {
		return x.Vote
	}
	return nil
}

func (m *ParaStageConfig) GetCancel() *ConfigCancelInfo {
	if x, ok := m.GetValue().(*ParaStageConfig_Cancel); ok {
		return x.Cancel
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ParaStageConfig) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ParaStageConfig_OneofMarshaler, _ParaStageConfig_OneofUnmarshaler, _ParaStageConfig_OneofSizer, []interface{}{
		(*ParaStageConfig_Stage)(nil),
		(*ParaStageConfig_Vote)(nil),
		(*ParaStageConfig_Cancel)(nil),
	}
}

func _ParaStageConfig_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ParaStageConfig)
	// value
	switch x := m.Value.(type) {
	case *ParaStageConfig_Stage:
		b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Stage); err != nil {
			return err
		}
	case *ParaStageConfig_Vote:
		b.EncodeVarint(11<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Vote); err != nil {
			return err
		}
	case *ParaStageConfig_Cancel:
		b.EncodeVarint(12<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Cancel); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ParaStageConfig.Value has unexpected type %T", x)
	}
	return nil
}

func _ParaStageConfig_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ParaStageConfig)
	switch tag {
	case 10: // value.stage
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SelfConsensStage)
		err := b.DecodeMessage(msg)
		m.Value = &ParaStageConfig_Stage{msg}
		return true, err
	case 11: // value.vote
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ConfigVoteInfo)
		err := b.DecodeMessage(msg)
		m.Value = &ParaStageConfig_Vote{msg}
		return true, err
	case 12: // value.cancel
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ConfigCancelInfo)
		err := b.DecodeMessage(msg)
		m.Value = &ParaStageConfig_Cancel{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ParaStageConfig_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ParaStageConfig)
	// value
	switch x := m.Value.(type) {
	case *ParaStageConfig_Stage:
		s := proto.Size(x.Stage)
		n += proto.SizeVarint(10<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ParaStageConfig_Vote:
		s := proto.Size(x.Vote)
		n += proto.SizeVarint(11<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ParaStageConfig_Cancel:
		s := proto.Size(x.Cancel)
		n += proto.SizeVarint(12<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type ReceiptSelfConsStageConfig struct {
	Prev    *SelfConsensStageInfo `protobuf:"bytes,1,opt,name=prev" json:"prev,omitempty"`
	Current *SelfConsensStageInfo `protobuf:"bytes,2,opt,name=current" json:"current,omitempty"`
}

func (m *ReceiptSelfConsStageConfig) Reset()                    { *m = ReceiptSelfConsStageConfig{} }
func (m *ReceiptSelfConsStageConfig) String() string            { return proto.CompactTextString(m) }
func (*ReceiptSelfConsStageConfig) ProtoMessage()               {}
func (*ReceiptSelfConsStageConfig) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{34} }

func (m *ReceiptSelfConsStageConfig) GetPrev() *SelfConsensStageInfo {
	if m != nil {
		return m.Prev
	}
	return nil
}

func (m *ReceiptSelfConsStageConfig) GetCurrent() *SelfConsensStageInfo {
	if m != nil {
		return m.Current
	}
	return nil
}

type ReceiptSelfConsStageVoteDone struct {
	Id         string            `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Stage      *SelfConsensStage `protobuf:"bytes,2,opt,name=stage" json:"stage,omitempty"`
	TotalNodes int32             `protobuf:"varint,3,opt,name=totalNodes" json:"totalNodes,omitempty"`
	TotalVote  int32             `protobuf:"varint,4,opt,name=totalVote" json:"totalVote,omitempty"`
	MostVote   int32             `protobuf:"varint,5,opt,name=mostVote" json:"mostVote,omitempty"`
	VoteRst    string            `protobuf:"bytes,6,opt,name=voteRst" json:"voteRst,omitempty"`
}

func (m *ReceiptSelfConsStageVoteDone) Reset()                    { *m = ReceiptSelfConsStageVoteDone{} }
func (m *ReceiptSelfConsStageVoteDone) String() string            { return proto.CompactTextString(m) }
func (*ReceiptSelfConsStageVoteDone) ProtoMessage()               {}
func (*ReceiptSelfConsStageVoteDone) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{35} }

func (m *ReceiptSelfConsStageVoteDone) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ReceiptSelfConsStageVoteDone) GetStage() *SelfConsensStage {
	if m != nil {
		return m.Stage
	}
	return nil
}

func (m *ReceiptSelfConsStageVoteDone) GetTotalNodes() int32 {
	if m != nil {
		return m.TotalNodes
	}
	return 0
}

func (m *ReceiptSelfConsStageVoteDone) GetTotalVote() int32 {
	if m != nil {
		return m.TotalVote
	}
	return 0
}

func (m *ReceiptSelfConsStageVoteDone) GetMostVote() int32 {
	if m != nil {
		return m.MostVote
	}
	return 0
}

func (m *ReceiptSelfConsStageVoteDone) GetVoteRst() string {
	if m != nil {
		return m.VoteRst
	}
	return ""
}

type ReceiptSelfConsStagesUpdate struct {
	Prev    *SelfConsensStages `protobuf:"bytes,1,opt,name=prev" json:"prev,omitempty"`
	Current *SelfConsensStages `protobuf:"bytes,2,opt,name=current" json:"current,omitempty"`
}

func (m *ReceiptSelfConsStagesUpdate) Reset()                    { *m = ReceiptSelfConsStagesUpdate{} }
func (m *ReceiptSelfConsStagesUpdate) String() string            { return proto.CompactTextString(m) }
func (*ReceiptSelfConsStagesUpdate) ProtoMessage()               {}
func (*ReceiptSelfConsStagesUpdate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{36} }

func (m *ReceiptSelfConsStagesUpdate) GetPrev() *SelfConsensStages {
	if m != nil {
		return m.Prev
	}
	return nil
}

func (m *ReceiptSelfConsStagesUpdate) GetCurrent() *SelfConsensStages {
	if m != nil {
		return m.Current
	}
	return nil
}

// query
type ReqQuerySelfStages struct {
	Status    uint32 `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	Id        string `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	Count     int32  `protobuf:"varint,3,opt,name=count" json:"count,omitempty"`
	Direction int32  `protobuf:"varint,4,opt,name=direction" json:"direction,omitempty"`
	Height    int64  `protobuf:"varint,5,opt,name=height" json:"height,omitempty"`
	Index     int32  `protobuf:"varint,6,opt,name=index" json:"index,omitempty"`
}

func (m *ReqQuerySelfStages) Reset()                    { *m = ReqQuerySelfStages{} }
func (m *ReqQuerySelfStages) String() string            { return proto.CompactTextString(m) }
func (*ReqQuerySelfStages) ProtoMessage()               {}
func (*ReqQuerySelfStages) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{37} }

func (m *ReqQuerySelfStages) GetStatus() uint32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *ReqQuerySelfStages) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ReqQuerySelfStages) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *ReqQuerySelfStages) GetDirection() int32 {
	if m != nil {
		return m.Direction
	}
	return 0
}

func (m *ReqQuerySelfStages) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *ReqQuerySelfStages) GetIndex() int32 {
	if m != nil {
		return m.Index
	}
	return 0
}

type ReplyQuerySelfStages struct {
	StageInfo []*SelfConsensStageInfo `protobuf:"bytes,1,rep,name=stageInfo" json:"stageInfo,omitempty"`
}

func (m *ReplyQuerySelfStages) Reset()                    { *m = ReplyQuerySelfStages{} }
func (m *ReplyQuerySelfStages) String() string            { return proto.CompactTextString(m) }
func (*ReplyQuerySelfStages) ProtoMessage()               {}
func (*ReplyQuerySelfStages) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{38} }

func (m *ReplyQuerySelfStages) GetStageInfo() []*SelfConsensStageInfo {
	if m != nil {
		return m.StageInfo
	}
	return nil
}

type ParacrossCommitAction struct {
	Status *ParacrossNodeStatus `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
}

func (m *ParacrossCommitAction) Reset()                    { *m = ParacrossCommitAction{} }
func (m *ParacrossCommitAction) String() string            { return proto.CompactTextString(m) }
func (*ParacrossCommitAction) ProtoMessage()               {}
func (*ParacrossCommitAction) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{39} }

func (m *ParacrossCommitAction) GetStatus() *ParacrossNodeStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

type ParacrossMinerAction struct {
	Status          *ParacrossNodeStatus `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	IsSelfConsensus bool                 `protobuf:"varint,2,opt,name=isSelfConsensus" json:"isSelfConsensus,omitempty"`
}

func (m *ParacrossMinerAction) Reset()                    { *m = ParacrossMinerAction{} }
func (m *ParacrossMinerAction) String() string            { return proto.CompactTextString(m) }
func (*ParacrossMinerAction) ProtoMessage()               {}
func (*ParacrossMinerAction) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{40} }

func (m *ParacrossMinerAction) GetStatus() *ParacrossNodeStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *ParacrossMinerAction) GetIsSelfConsensus() bool {
	if m != nil {
		return m.IsSelfConsensus
	}
	return false
}

type ParacrossAction struct {
	// Types that are valid to be assigned to Value:
	//	*ParacrossAction_Commit
	//	*ParacrossAction_Miner
	//	*ParacrossAction_AssetTransfer
	//	*ParacrossAction_AssetWithdraw
	//	*ParacrossAction_Transfer
	//	*ParacrossAction_Withdraw
	//	*ParacrossAction_TransferToExec
	//	*ParacrossAction_NodeConfig
	//	*ParacrossAction_NodeGroupConfig
	//	*ParacrossAction_SelfStageConfig
	Value isParacrossAction_Value `protobuf_oneof:"value"`
	Ty    int32                   `protobuf:"varint,2,opt,name=ty" json:"ty,omitempty"`
}

func (m *ParacrossAction) Reset()                    { *m = ParacrossAction{} }
func (m *ParacrossAction) String() string            { return proto.CompactTextString(m) }
func (*ParacrossAction) ProtoMessage()               {}
func (*ParacrossAction) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{41} }

type isParacrossAction_Value interface {
	isParacrossAction_Value()
}

type ParacrossAction_Commit struct {
	Commit *ParacrossCommitAction `protobuf:"bytes,1,opt,name=commit,oneof"`
}
type ParacrossAction_Miner struct {
	Miner *ParacrossMinerAction `protobuf:"bytes,3,opt,name=miner,oneof"`
}
type ParacrossAction_AssetTransfer struct {
	AssetTransfer *types2.AssetsTransfer `protobuf:"bytes,4,opt,name=assetTransfer,oneof"`
}
type ParacrossAction_AssetWithdraw struct {
	AssetWithdraw *types2.AssetsWithdraw `protobuf:"bytes,5,opt,name=assetWithdraw,oneof"`
}
type ParacrossAction_Transfer struct {
	Transfer *types2.AssetsTransfer `protobuf:"bytes,6,opt,name=transfer,oneof"`
}
type ParacrossAction_Withdraw struct {
	Withdraw *types2.AssetsWithdraw `protobuf:"bytes,7,opt,name=withdraw,oneof"`
}
type ParacrossAction_TransferToExec struct {
	TransferToExec *types2.AssetsTransferToExec `protobuf:"bytes,8,opt,name=transferToExec,oneof"`
}
type ParacrossAction_NodeConfig struct {
	NodeConfig *ParaNodeAddrConfig `protobuf:"bytes,9,opt,name=nodeConfig,oneof"`
}
type ParacrossAction_NodeGroupConfig struct {
	NodeGroupConfig *ParaNodeGroupConfig `protobuf:"bytes,10,opt,name=nodeGroupConfig,oneof"`
}
type ParacrossAction_SelfStageConfig struct {
	SelfStageConfig *ParaStageConfig `protobuf:"bytes,11,opt,name=selfStageConfig,oneof"`
}

func (*ParacrossAction_Commit) isParacrossAction_Value()          {}
func (*ParacrossAction_Miner) isParacrossAction_Value()           {}
func (*ParacrossAction_AssetTransfer) isParacrossAction_Value()   {}
func (*ParacrossAction_AssetWithdraw) isParacrossAction_Value()   {}
func (*ParacrossAction_Transfer) isParacrossAction_Value()        {}
func (*ParacrossAction_Withdraw) isParacrossAction_Value()        {}
func (*ParacrossAction_TransferToExec) isParacrossAction_Value()  {}
func (*ParacrossAction_NodeConfig) isParacrossAction_Value()      {}
func (*ParacrossAction_NodeGroupConfig) isParacrossAction_Value() {}
func (*ParacrossAction_SelfStageConfig) isParacrossAction_Value() {}

func (m *ParacrossAction) GetValue() isParacrossAction_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *ParacrossAction) GetCommit() *ParacrossCommitAction {
	if x, ok := m.GetValue().(*ParacrossAction_Commit); ok {
		return x.Commit
	}
	return nil
}

func (m *ParacrossAction) GetMiner() *ParacrossMinerAction {
	if x, ok := m.GetValue().(*ParacrossAction_Miner); ok {
		return x.Miner
	}
	return nil
}

func (m *ParacrossAction) GetAssetTransfer() *types2.AssetsTransfer {
	if x, ok := m.GetValue().(*ParacrossAction_AssetTransfer); ok {
		return x.AssetTransfer
	}
	return nil
}

func (m *ParacrossAction) GetAssetWithdraw() *types2.AssetsWithdraw {
	if x, ok := m.GetValue().(*ParacrossAction_AssetWithdraw); ok {
		return x.AssetWithdraw
	}
	return nil
}

func (m *ParacrossAction) GetTransfer() *types2.AssetsTransfer {
	if x, ok := m.GetValue().(*ParacrossAction_Transfer); ok {
		return x.Transfer
	}
	return nil
}

func (m *ParacrossAction) GetWithdraw() *types2.AssetsWithdraw {
	if x, ok := m.GetValue().(*ParacrossAction_Withdraw); ok {
		return x.Withdraw
	}
	return nil
}

func (m *ParacrossAction) GetTransferToExec() *types2.AssetsTransferToExec {
	if x, ok := m.GetValue().(*ParacrossAction_TransferToExec); ok {
		return x.TransferToExec
	}
	return nil
}

func (m *ParacrossAction) GetNodeConfig() *ParaNodeAddrConfig {
	if x, ok := m.GetValue().(*ParacrossAction_NodeConfig); ok {
		return x.NodeConfig
	}
	return nil
}

func (m *ParacrossAction) GetNodeGroupConfig() *ParaNodeGroupConfig {
	if x, ok := m.GetValue().(*ParacrossAction_NodeGroupConfig); ok {
		return x.NodeGroupConfig
	}
	return nil
}

func (m *ParacrossAction) GetSelfStageConfig() *ParaStageConfig {
	if x, ok := m.GetValue().(*ParacrossAction_SelfStageConfig); ok {
		return x.SelfStageConfig
	}
	return nil
}

func (m *ParacrossAction) GetTy() int32 {
	if m != nil {
		return m.Ty
	}
	return 0
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ParacrossAction) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ParacrossAction_OneofMarshaler, _ParacrossAction_OneofUnmarshaler, _ParacrossAction_OneofSizer, []interface{}{
		(*ParacrossAction_Commit)(nil),
		(*ParacrossAction_Miner)(nil),
		(*ParacrossAction_AssetTransfer)(nil),
		(*ParacrossAction_AssetWithdraw)(nil),
		(*ParacrossAction_Transfer)(nil),
		(*ParacrossAction_Withdraw)(nil),
		(*ParacrossAction_TransferToExec)(nil),
		(*ParacrossAction_NodeConfig)(nil),
		(*ParacrossAction_NodeGroupConfig)(nil),
		(*ParacrossAction_SelfStageConfig)(nil),
	}
}

func _ParacrossAction_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ParacrossAction)
	// value
	switch x := m.Value.(type) {
	case *ParacrossAction_Commit:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Commit); err != nil {
			return err
		}
	case *ParacrossAction_Miner:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Miner); err != nil {
			return err
		}
	case *ParacrossAction_AssetTransfer:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.AssetTransfer); err != nil {
			return err
		}
	case *ParacrossAction_AssetWithdraw:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.AssetWithdraw); err != nil {
			return err
		}
	case *ParacrossAction_Transfer:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Transfer); err != nil {
			return err
		}
	case *ParacrossAction_Withdraw:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Withdraw); err != nil {
			return err
		}
	case *ParacrossAction_TransferToExec:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.TransferToExec); err != nil {
			return err
		}
	case *ParacrossAction_NodeConfig:
		b.EncodeVarint(9<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.NodeConfig); err != nil {
			return err
		}
	case *ParacrossAction_NodeGroupConfig:
		b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.NodeGroupConfig); err != nil {
			return err
		}
	case *ParacrossAction_SelfStageConfig:
		b.EncodeVarint(11<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.SelfStageConfig); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ParacrossAction.Value has unexpected type %T", x)
	}
	return nil
}

func _ParacrossAction_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ParacrossAction)
	switch tag {
	case 1: // value.commit
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ParacrossCommitAction)
		err := b.DecodeMessage(msg)
		m.Value = &ParacrossAction_Commit{msg}
		return true, err
	case 3: // value.miner
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ParacrossMinerAction)
		err := b.DecodeMessage(msg)
		m.Value = &ParacrossAction_Miner{msg}
		return true, err
	case 4: // value.assetTransfer
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(types2.AssetsTransfer)
		err := b.DecodeMessage(msg)
		m.Value = &ParacrossAction_AssetTransfer{msg}
		return true, err
	case 5: // value.assetWithdraw
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(types2.AssetsWithdraw)
		err := b.DecodeMessage(msg)
		m.Value = &ParacrossAction_AssetWithdraw{msg}
		return true, err
	case 6: // value.transfer
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(types2.AssetsTransfer)
		err := b.DecodeMessage(msg)
		m.Value = &ParacrossAction_Transfer{msg}
		return true, err
	case 7: // value.withdraw
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(types2.AssetsWithdraw)
		err := b.DecodeMessage(msg)
		m.Value = &ParacrossAction_Withdraw{msg}
		return true, err
	case 8: // value.transferToExec
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(types2.AssetsTransferToExec)
		err := b.DecodeMessage(msg)
		m.Value = &ParacrossAction_TransferToExec{msg}
		return true, err
	case 9: // value.nodeConfig
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ParaNodeAddrConfig)
		err := b.DecodeMessage(msg)
		m.Value = &ParacrossAction_NodeConfig{msg}
		return true, err
	case 10: // value.nodeGroupConfig
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ParaNodeGroupConfig)
		err := b.DecodeMessage(msg)
		m.Value = &ParacrossAction_NodeGroupConfig{msg}
		return true, err
	case 11: // value.selfStageConfig
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ParaStageConfig)
		err := b.DecodeMessage(msg)
		m.Value = &ParacrossAction_SelfStageConfig{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ParacrossAction_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ParacrossAction)
	// value
	switch x := m.Value.(type) {
	case *ParacrossAction_Commit:
		s := proto.Size(x.Commit)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ParacrossAction_Miner:
		s := proto.Size(x.Miner)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ParacrossAction_AssetTransfer:
		s := proto.Size(x.AssetTransfer)
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ParacrossAction_AssetWithdraw:
		s := proto.Size(x.AssetWithdraw)
		n += proto.SizeVarint(5<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ParacrossAction_Transfer:
		s := proto.Size(x.Transfer)
		n += proto.SizeVarint(6<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ParacrossAction_Withdraw:
		s := proto.Size(x.Withdraw)
		n += proto.SizeVarint(7<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ParacrossAction_TransferToExec:
		s := proto.Size(x.TransferToExec)
		n += proto.SizeVarint(8<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ParacrossAction_NodeConfig:
		s := proto.Size(x.NodeConfig)
		n += proto.SizeVarint(9<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ParacrossAction_NodeGroupConfig:
		s := proto.Size(x.NodeGroupConfig)
		n += proto.SizeVarint(10<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ParacrossAction_SelfStageConfig:
		s := proto.Size(x.SelfStageConfig)
		n += proto.SizeVarint(11<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// logs
type ReceiptParacrossCommit struct {
	Addr    string                 `protobuf:"bytes,1,opt,name=addr" json:"addr,omitempty"`
	Status  *ParacrossNodeStatus   `protobuf:"bytes,2,opt,name=status" json:"status,omitempty"`
	Prev    *ParacrossHeightStatus `protobuf:"bytes,3,opt,name=prev" json:"prev,omitempty"`
	Current *ParacrossHeightStatus `protobuf:"bytes,4,opt,name=current" json:"current,omitempty"`
}

func (m *ReceiptParacrossCommit) Reset()                    { *m = ReceiptParacrossCommit{} }
func (m *ReceiptParacrossCommit) String() string            { return proto.CompactTextString(m) }
func (*ReceiptParacrossCommit) ProtoMessage()               {}
func (*ReceiptParacrossCommit) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{42} }

func (m *ReceiptParacrossCommit) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func (m *ReceiptParacrossCommit) GetStatus() *ParacrossNodeStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *ReceiptParacrossCommit) GetPrev() *ParacrossHeightStatus {
	if m != nil {
		return m.Prev
	}
	return nil
}

func (m *ReceiptParacrossCommit) GetCurrent() *ParacrossHeightStatus {
	if m != nil {
		return m.Current
	}
	return nil
}

type ReceiptParacrossMiner struct {
	Status *ParacrossNodeStatus `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
}

func (m *ReceiptParacrossMiner) Reset()                    { *m = ReceiptParacrossMiner{} }
func (m *ReceiptParacrossMiner) String() string            { return proto.CompactTextString(m) }
func (*ReceiptParacrossMiner) ProtoMessage()               {}
func (*ReceiptParacrossMiner) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{43} }

func (m *ReceiptParacrossMiner) GetStatus() *ParacrossNodeStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

type ReceiptParacrossDone struct {
	TotalNodes      int32    `protobuf:"varint,1,opt,name=totalNodes" json:"totalNodes,omitempty"`
	TotalCommit     int32    `protobuf:"varint,2,opt,name=totalCommit" json:"totalCommit,omitempty"`
	MostSameCommit  int32    `protobuf:"varint,3,opt,name=mostSameCommit" json:"mostSameCommit,omitempty"`
	Title           string   `protobuf:"bytes,4,opt,name=title" json:"title,omitempty"`
	Height          int64    `protobuf:"varint,5,opt,name=height" json:"height,omitempty"`
	StateHash       []byte   `protobuf:"bytes,6,opt,name=stateHash,proto3" json:"stateHash,omitempty"`
	TxCounts        uint32   `protobuf:"varint,7,opt,name=txCounts" json:"txCounts,omitempty"`
	TxResult        []byte   `protobuf:"bytes,8,opt,name=txResult,proto3" json:"txResult,omitempty"`
	BlockHash       []byte   `protobuf:"bytes,9,opt,name=blockHash,proto3" json:"blockHash,omitempty"`
	TxHashs         [][]byte `protobuf:"bytes,10,rep,name=txHashs,proto3" json:"txHashs,omitempty"`
	CrossTxResult   []byte   `protobuf:"bytes,11,opt,name=crossTxResult,proto3" json:"crossTxResult,omitempty"`
	CrossTxHashs    [][]byte `protobuf:"bytes,12,rep,name=crossTxHashs,proto3" json:"crossTxHashs,omitempty"`
	MainBlockHash   []byte   `protobuf:"bytes,13,opt,name=mainBlockHash,proto3" json:"mainBlockHash,omitempty"`
	MainBlockHeight int64    `protobuf:"varint,14,opt,name=mainBlockHeight" json:"mainBlockHeight,omitempty"`
}

func (m *ReceiptParacrossDone) Reset()                    { *m = ReceiptParacrossDone{} }
func (m *ReceiptParacrossDone) String() string            { return proto.CompactTextString(m) }
func (*ReceiptParacrossDone) ProtoMessage()               {}
func (*ReceiptParacrossDone) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{44} }

func (m *ReceiptParacrossDone) GetTotalNodes() int32 {
	if m != nil {
		return m.TotalNodes
	}
	return 0
}

func (m *ReceiptParacrossDone) GetTotalCommit() int32 {
	if m != nil {
		return m.TotalCommit
	}
	return 0
}

func (m *ReceiptParacrossDone) GetMostSameCommit() int32 {
	if m != nil {
		return m.MostSameCommit
	}
	return 0
}

func (m *ReceiptParacrossDone) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *ReceiptParacrossDone) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *ReceiptParacrossDone) GetStateHash() []byte {
	if m != nil {
		return m.StateHash
	}
	return nil
}

func (m *ReceiptParacrossDone) GetTxCounts() uint32 {
	if m != nil {
		return m.TxCounts
	}
	return 0
}

func (m *ReceiptParacrossDone) GetTxResult() []byte {
	if m != nil {
		return m.TxResult
	}
	return nil
}

func (m *ReceiptParacrossDone) GetBlockHash() []byte {
	if m != nil {
		return m.BlockHash
	}
	return nil
}

func (m *ReceiptParacrossDone) GetTxHashs() [][]byte {
	if m != nil {
		return m.TxHashs
	}
	return nil
}

func (m *ReceiptParacrossDone) GetCrossTxResult() []byte {
	if m != nil {
		return m.CrossTxResult
	}
	return nil
}

func (m *ReceiptParacrossDone) GetCrossTxHashs() [][]byte {
	if m != nil {
		return m.CrossTxHashs
	}
	return nil
}

func (m *ReceiptParacrossDone) GetMainBlockHash() []byte {
	if m != nil {
		return m.MainBlockHash
	}
	return nil
}

func (m *ReceiptParacrossDone) GetMainBlockHeight() int64 {
	if m != nil {
		return m.MainBlockHeight
	}
	return 0
}

type ReceiptParacrossRecord struct {
	Addr   string               `protobuf:"bytes,1,opt,name=addr" json:"addr,omitempty"`
	Status *ParacrossNodeStatus `protobuf:"bytes,2,opt,name=status" json:"status,omitempty"`
}

func (m *ReceiptParacrossRecord) Reset()                    { *m = ReceiptParacrossRecord{} }
func (m *ReceiptParacrossRecord) String() string            { return proto.CompactTextString(m) }
func (*ReceiptParacrossRecord) ProtoMessage()               {}
func (*ReceiptParacrossRecord) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{45} }

func (m *ReceiptParacrossRecord) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func (m *ReceiptParacrossRecord) GetStatus() *ParacrossNodeStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

// LocalDB
// title-height-addr : txHash
type ParacrossTx struct {
	TxHash string `protobuf:"bytes,1,opt,name=txHash" json:"txHash,omitempty"`
}

func (m *ParacrossTx) Reset()                    { *m = ParacrossTx{} }
func (m *ParacrossTx) String() string            { return proto.CompactTextString(m) }
func (*ParacrossTx) ProtoMessage()               {}
func (*ParacrossTx) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{46} }

func (m *ParacrossTx) GetTxHash() string {
	if m != nil {
		return m.TxHash
	}
	return ""
}

// query
type ReqParacrossTitleHeight struct {
	Title  string `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
	Height int64  `protobuf:"varint,2,opt,name=height" json:"height,omitempty"`
}

func (m *ReqParacrossTitleHeight) Reset()                    { *m = ReqParacrossTitleHeight{} }
func (m *ReqParacrossTitleHeight) String() string            { return proto.CompactTextString(m) }
func (*ReqParacrossTitleHeight) ProtoMessage()               {}
func (*ReqParacrossTitleHeight) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{47} }

func (m *ReqParacrossTitleHeight) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *ReqParacrossTitleHeight) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

type RespParacrossDone struct {
	TotalNodes     int32  `protobuf:"varint,1,opt,name=totalNodes" json:"totalNodes,omitempty"`
	TotalCommit    int32  `protobuf:"varint,2,opt,name=totalCommit" json:"totalCommit,omitempty"`
	MostSameCommit int32  `protobuf:"varint,3,opt,name=mostSameCommit" json:"mostSameCommit,omitempty"`
	Title          string `protobuf:"bytes,4,opt,name=title" json:"title,omitempty"`
	Height         int64  `protobuf:"varint,5,opt,name=height" json:"height,omitempty"`
	StateHash      string `protobuf:"bytes,6,opt,name=stateHash" json:"stateHash,omitempty"`
	TxCounts       uint32 `protobuf:"varint,7,opt,name=txCounts" json:"txCounts,omitempty"`
	TxResult       string `protobuf:"bytes,8,opt,name=txResult" json:"txResult,omitempty"`
}

func (m *RespParacrossDone) Reset()                    { *m = RespParacrossDone{} }
func (m *RespParacrossDone) String() string            { return proto.CompactTextString(m) }
func (*RespParacrossDone) ProtoMessage()               {}
func (*RespParacrossDone) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{48} }

func (m *RespParacrossDone) GetTotalNodes() int32 {
	if m != nil {
		return m.TotalNodes
	}
	return 0
}

func (m *RespParacrossDone) GetTotalCommit() int32 {
	if m != nil {
		return m.TotalCommit
	}
	return 0
}

func (m *RespParacrossDone) GetMostSameCommit() int32 {
	if m != nil {
		return m.MostSameCommit
	}
	return 0
}

func (m *RespParacrossDone) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *RespParacrossDone) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *RespParacrossDone) GetStateHash() string {
	if m != nil {
		return m.StateHash
	}
	return ""
}

func (m *RespParacrossDone) GetTxCounts() uint32 {
	if m != nil {
		return m.TxCounts
	}
	return 0
}

func (m *RespParacrossDone) GetTxResult() string {
	if m != nil {
		return m.TxResult
	}
	return ""
}

type RespParacrossTitles struct {
	Titles []*RespParacrossDone `protobuf:"bytes,1,rep,name=titles" json:"titles,omitempty"`
}

func (m *RespParacrossTitles) Reset()                    { *m = RespParacrossTitles{} }
func (m *RespParacrossTitles) String() string            { return proto.CompactTextString(m) }
func (*RespParacrossTitles) ProtoMessage()               {}
func (*RespParacrossTitles) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{49} }

func (m *RespParacrossTitles) GetTitles() []*RespParacrossDone {
	if m != nil {
		return m.Titles
	}
	return nil
}

type ReqParacrossTitleHash struct {
	Title     string `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
	BlockHash []byte `protobuf:"bytes,2,opt,name=blockHash,proto3" json:"blockHash,omitempty"`
}

func (m *ReqParacrossTitleHash) Reset()                    { *m = ReqParacrossTitleHash{} }
func (m *ReqParacrossTitleHash) String() string            { return proto.CompactTextString(m) }
func (*ReqParacrossTitleHash) ProtoMessage()               {}
func (*ReqParacrossTitleHash) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{50} }

func (m *ReqParacrossTitleHash) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *ReqParacrossTitleHash) GetBlockHash() []byte {
	if m != nil {
		return m.BlockHash
	}
	return nil
}

// 跨链转账相关
type ParacrossAsset struct {
	// input
	From       string `protobuf:"bytes,1,opt,name=from" json:"from,omitempty"`
	To         string `protobuf:"bytes,2,opt,name=to" json:"to,omitempty"`
	IsWithdraw bool   `protobuf:"varint,3,opt,name=isWithdraw" json:"isWithdraw,omitempty"`
	TxHash     []byte `protobuf:"bytes,4,opt,name=txHash,proto3" json:"txHash,omitempty"`
	Amount     int64  `protobuf:"varint,5,opt,name=amount" json:"amount,omitempty"`
	Exec       string `protobuf:"bytes,6,opt,name=exec" json:"exec,omitempty"`
	Symbol     string `protobuf:"bytes,7,opt,name=symbol" json:"symbol,omitempty"`
	// 主链部分
	Height int64 `protobuf:"varint,10,opt,name=height" json:"height,omitempty"`
	// 平行链部分
	CommitDoneHeight int64 `protobuf:"varint,21,opt,name=commitDoneHeight" json:"commitDoneHeight,omitempty"`
	ParaHeight       int64 `protobuf:"varint,22,opt,name=paraHeight" json:"paraHeight,omitempty"`
	Success          bool  `protobuf:"varint,23,opt,name=success" json:"success,omitempty"`
}

func (m *ParacrossAsset) Reset()                    { *m = ParacrossAsset{} }
func (m *ParacrossAsset) String() string            { return proto.CompactTextString(m) }
func (*ParacrossAsset) ProtoMessage()               {}
func (*ParacrossAsset) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{51} }

func (m *ParacrossAsset) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *ParacrossAsset) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

func (m *ParacrossAsset) GetIsWithdraw() bool {
	if m != nil {
		return m.IsWithdraw
	}
	return false
}

func (m *ParacrossAsset) GetTxHash() []byte {
	if m != nil {
		return m.TxHash
	}
	return nil
}

func (m *ParacrossAsset) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *ParacrossAsset) GetExec() string {
	if m != nil {
		return m.Exec
	}
	return ""
}

func (m *ParacrossAsset) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

func (m *ParacrossAsset) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *ParacrossAsset) GetCommitDoneHeight() int64 {
	if m != nil {
		return m.CommitDoneHeight
	}
	return 0
}

func (m *ParacrossAsset) GetParaHeight() int64 {
	if m != nil {
		return m.ParaHeight
	}
	return 0
}

func (m *ParacrossAsset) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type ParaLocalDbBlock struct {
	Height         int64                 `protobuf:"varint,1,opt,name=height" json:"height,omitempty"`
	MainHash       []byte                `protobuf:"bytes,2,opt,name=mainHash,proto3" json:"mainHash,omitempty"`
	MainHeight     int64                 `protobuf:"varint,3,opt,name=mainHeight" json:"mainHeight,omitempty"`
	ParentMainHash []byte                `protobuf:"bytes,4,opt,name=parentMainHash,proto3" json:"parentMainHash,omitempty"`
	BlockTime      int64                 `protobuf:"varint,5,opt,name=blockTime" json:"blockTime,omitempty"`
	Txs            []*types2.Transaction `protobuf:"bytes,6,rep,name=txs" json:"txs,omitempty"`
}

func (m *ParaLocalDbBlock) Reset()                    { *m = ParaLocalDbBlock{} }
func (m *ParaLocalDbBlock) String() string            { return proto.CompactTextString(m) }
func (*ParaLocalDbBlock) ProtoMessage()               {}
func (*ParaLocalDbBlock) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{52} }

func (m *ParaLocalDbBlock) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *ParaLocalDbBlock) GetMainHash() []byte {
	if m != nil {
		return m.MainHash
	}
	return nil
}

func (m *ParaLocalDbBlock) GetMainHeight() int64 {
	if m != nil {
		return m.MainHeight
	}
	return 0
}

func (m *ParaLocalDbBlock) GetParentMainHash() []byte {
	if m != nil {
		return m.ParentMainHash
	}
	return nil
}

func (m *ParaLocalDbBlock) GetBlockTime() int64 {
	if m != nil {
		return m.BlockTime
	}
	return 0
}

func (m *ParaLocalDbBlock) GetTxs() []*types2.Transaction {
	if m != nil {
		return m.Txs
	}
	return nil
}

type ParaLocalDbBlockInfo struct {
	Height         int64    `protobuf:"varint,1,opt,name=height" json:"height,omitempty"`
	MainHash       string   `protobuf:"bytes,2,opt,name=mainHash" json:"mainHash,omitempty"`
	MainHeight     int64    `protobuf:"varint,3,opt,name=mainHeight" json:"mainHeight,omitempty"`
	ParentMainHash string   `protobuf:"bytes,4,opt,name=parentMainHash" json:"parentMainHash,omitempty"`
	BlockTime      int64    `protobuf:"varint,5,opt,name=blockTime" json:"blockTime,omitempty"`
	Txs            []string `protobuf:"bytes,6,rep,name=txs" json:"txs,omitempty"`
}

func (m *ParaLocalDbBlockInfo) Reset()                    { *m = ParaLocalDbBlockInfo{} }
func (m *ParaLocalDbBlockInfo) String() string            { return proto.CompactTextString(m) }
func (*ParaLocalDbBlockInfo) ProtoMessage()               {}
func (*ParaLocalDbBlockInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{53} }

func (m *ParaLocalDbBlockInfo) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *ParaLocalDbBlockInfo) GetMainHash() string {
	if m != nil {
		return m.MainHash
	}
	return ""
}

func (m *ParaLocalDbBlockInfo) GetMainHeight() int64 {
	if m != nil {
		return m.MainHeight
	}
	return 0
}

func (m *ParaLocalDbBlockInfo) GetParentMainHash() string {
	if m != nil {
		return m.ParentMainHash
	}
	return ""
}

func (m *ParaLocalDbBlockInfo) GetBlockTime() int64 {
	if m != nil {
		return m.BlockTime
	}
	return 0
}

func (m *ParaLocalDbBlockInfo) GetTxs() []string {
	if m != nil {
		return m.Txs
	}
	return nil
}

func init() {
	proto.RegisterType((*ParacrossStatusDetails)(nil), "types.ParacrossStatusDetails")
	proto.RegisterType((*ParacrossStatusBlockDetails)(nil), "types.ParacrossStatusBlockDetails")
	proto.RegisterType((*ParacrossHeightStatus)(nil), "types.ParacrossHeightStatus")
	proto.RegisterType((*ParacrossHeightStatusRsp)(nil), "types.ParacrossHeightStatusRsp")
	proto.RegisterType((*ParacrossStatus)(nil), "types.ParacrossStatus")
	proto.RegisterType((*ParacrossConsensusStatus)(nil), "types.ParacrossConsensusStatus")
	proto.RegisterType((*ParaNodeAddrConfig)(nil), "types.ParaNodeAddrConfig")
	proto.RegisterType((*ParaNodeVoteDetail)(nil), "types.ParaNodeVoteDetail")
	proto.RegisterType((*ParaNodeAddrIdStatus)(nil), "types.ParaNodeAddrIdStatus")
	proto.RegisterType((*ParaNodeIdStatus)(nil), "types.ParaNodeIdStatus")
	proto.RegisterType((*ReceiptParaNodeConfig)(nil), "types.ReceiptParaNodeConfig")
	proto.RegisterType((*ReceiptParaNodeAddrStatUpdate)(nil), "types.ReceiptParaNodeAddrStatUpdate")
	proto.RegisterType((*ReceiptParaNodeVoteDone)(nil), "types.ReceiptParaNodeVoteDone")
	proto.RegisterType((*ParaNodeGroupConfig)(nil), "types.ParaNodeGroupConfig")
	proto.RegisterType((*ReqParaNodeAddrPubKey)(nil), "types.ReqParaNodeAddrPubKey")
	proto.RegisterType((*ParaNodeAddrPubKey)(nil), "types.ParaNodeAddrPubKey")
	proto.RegisterType((*AddrAndPubKey)(nil), "types.AddrAndPubKey")
	proto.RegisterType((*RespParaNodeAddrPubKey)(nil), "types.RespParaNodeAddrPubKey")
	proto.RegisterType((*ReqConverTx2Privacy)(nil), "types.ReqConverTx2Privacy")
	proto.RegisterType((*ParaNodeGroupStatus)(nil), "types.ParaNodeGroupStatus")
	proto.RegisterType((*ReceiptParaNodeGroupConfig)(nil), "types.ReceiptParaNodeGroupConfig")
	proto.RegisterType((*ReqParacrossNodeInfo)(nil), "types.ReqParacrossNodeInfo")
	proto.RegisterType((*RespParacrossNodeAddrs)(nil), "types.RespParacrossNodeAddrs")
	proto.RegisterType((*RespParacrossNodeGroups)(nil), "types.RespParacrossNodeGroups")
	proto.RegisterType((*ParaBlock2MainMap)(nil), "types.ParaBlock2MainMap")
	proto.RegisterType((*ParaBlock2MainInfo)(nil), "types.ParaBlock2MainInfo")
	proto.RegisterType((*ParacrossNodeStatus)(nil), "types.ParacrossNodeStatus")
	proto.RegisterType((*SelfConsensStages)(nil), "types.SelfConsensStages")
	proto.RegisterType((*SelfConsensStage)(nil), "types.SelfConsensStage")
	proto.RegisterType((*SelfConsensStageInfo)(nil), "types.SelfConsensStageInfo")
	proto.RegisterType((*LocalSelfConsStageInfo)(nil), "types.LocalSelfConsStageInfo")
	proto.RegisterType((*ConfigVoteInfo)(nil), "types.ConfigVoteInfo")
	proto.RegisterType((*ConfigCancelInfo)(nil), "types.ConfigCancelInfo")
	proto.RegisterType((*ParaStageConfig)(nil), "types.ParaStageConfig")
	proto.RegisterType((*ReceiptSelfConsStageConfig)(nil), "types.ReceiptSelfConsStageConfig")
	proto.RegisterType((*ReceiptSelfConsStageVoteDone)(nil), "types.ReceiptSelfConsStageVoteDone")
	proto.RegisterType((*ReceiptSelfConsStagesUpdate)(nil), "types.ReceiptSelfConsStagesUpdate")
	proto.RegisterType((*ReqQuerySelfStages)(nil), "types.ReqQuerySelfStages")
	proto.RegisterType((*ReplyQuerySelfStages)(nil), "types.ReplyQuerySelfStages")
	proto.RegisterType((*ParacrossCommitAction)(nil), "types.ParacrossCommitAction")
	proto.RegisterType((*ParacrossMinerAction)(nil), "types.ParacrossMinerAction")
	proto.RegisterType((*ParacrossAction)(nil), "types.ParacrossAction")
	proto.RegisterType((*ReceiptParacrossCommit)(nil), "types.ReceiptParacrossCommit")
	proto.RegisterType((*ReceiptParacrossMiner)(nil), "types.ReceiptParacrossMiner")
	proto.RegisterType((*ReceiptParacrossDone)(nil), "types.ReceiptParacrossDone")
	proto.RegisterType((*ReceiptParacrossRecord)(nil), "types.ReceiptParacrossRecord")
	proto.RegisterType((*ParacrossTx)(nil), "types.ParacrossTx")
	proto.RegisterType((*ReqParacrossTitleHeight)(nil), "types.ReqParacrossTitleHeight")
	proto.RegisterType((*RespParacrossDone)(nil), "types.RespParacrossDone")
	proto.RegisterType((*RespParacrossTitles)(nil), "types.RespParacrossTitles")
	proto.RegisterType((*ReqParacrossTitleHash)(nil), "types.ReqParacrossTitleHash")
	proto.RegisterType((*ParacrossAsset)(nil), "types.ParacrossAsset")
	proto.RegisterType((*ParaLocalDbBlock)(nil), "types.ParaLocalDbBlock")
	proto.RegisterType((*ParaLocalDbBlockInfo)(nil), "types.ParaLocalDbBlockInfo")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Paracross service

type ParacrossClient interface {
	GetTitle(ctx context.Context, in *types1.ReqString, opts ...grpc.CallOption) (*ParacrossConsensusStatus, error)
	ListTitles(ctx context.Context, in *types1.ReqNil, opts ...grpc.CallOption) (*RespParacrossTitles, error)
	GetDoneTitleHeight(ctx context.Context, in *ReqParacrossTitleHeight, opts ...grpc.CallOption) (*RespParacrossDone, error)
	GetTitleHeight(ctx context.Context, in *ReqParacrossTitleHeight, opts ...grpc.CallOption) (*ParacrossHeightStatusRsp, error)
	GetAssetTxResult(ctx context.Context, in *types1.ReqHash, opts ...grpc.CallOption) (*ParacrossAsset, error)
	IsSync(ctx context.Context, in *types1.ReqNil, opts ...grpc.CallOption) (*types3.IsCaughtUp, error)
}

type paracrossClient struct {
	cc *grpc.ClientConn
}

func NewParacrossClient(cc *grpc.ClientConn) ParacrossClient {
	return &paracrossClient{cc}
}

func (c *paracrossClient) GetTitle(ctx context.Context, in *types1.ReqString, opts ...grpc.CallOption) (*ParacrossConsensusStatus, error) {
	out := new(ParacrossConsensusStatus)
	err := grpc.Invoke(ctx, "/types.paracross/GetTitle", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *paracrossClient) ListTitles(ctx context.Context, in *types1.ReqNil, opts ...grpc.CallOption) (*RespParacrossTitles, error) {
	out := new(RespParacrossTitles)
	err := grpc.Invoke(ctx, "/types.paracross/ListTitles", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *paracrossClient) GetDoneTitleHeight(ctx context.Context, in *ReqParacrossTitleHeight, opts ...grpc.CallOption) (*RespParacrossDone, error) {
	out := new(RespParacrossDone)
	err := grpc.Invoke(ctx, "/types.paracross/GetDoneTitleHeight", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *paracrossClient) GetTitleHeight(ctx context.Context, in *ReqParacrossTitleHeight, opts ...grpc.CallOption) (*ParacrossHeightStatusRsp, error) {
	out := new(ParacrossHeightStatusRsp)
	err := grpc.Invoke(ctx, "/types.paracross/GetTitleHeight", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *paracrossClient) GetAssetTxResult(ctx context.Context, in *types1.ReqHash, opts ...grpc.CallOption) (*ParacrossAsset, error) {
	out := new(ParacrossAsset)
	err := grpc.Invoke(ctx, "/types.paracross/GetAssetTxResult", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *paracrossClient) IsSync(ctx context.Context, in *types1.ReqNil, opts ...grpc.CallOption) (*types3.IsCaughtUp, error) {
	out := new(types3.IsCaughtUp)
	err := grpc.Invoke(ctx, "/types.paracross/IsSync", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Paracross service

type ParacrossServer interface {
	GetTitle(context.Context, *types1.ReqString) (*ParacrossConsensusStatus, error)
	ListTitles(context.Context, *types1.ReqNil) (*RespParacrossTitles, error)
	GetDoneTitleHeight(context.Context, *ReqParacrossTitleHeight) (*RespParacrossDone, error)
	GetTitleHeight(context.Context, *ReqParacrossTitleHeight) (*ParacrossHeightStatusRsp, error)
	GetAssetTxResult(context.Context, *types1.ReqHash) (*ParacrossAsset, error)
	IsSync(context.Context, *types1.ReqNil) (*types3.IsCaughtUp, error)
}

func RegisterParacrossServer(s *grpc.Server, srv ParacrossServer) {
	s.RegisterService(&_Paracross_serviceDesc, srv)
}

func _Paracross_GetTitle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(types1.ReqString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ParacrossServer).GetTitle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.paracross/GetTitle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ParacrossServer).GetTitle(ctx, req.(*types1.ReqString))
	}
	return interceptor(ctx, in, info, handler)
}

func _Paracross_ListTitles_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(types1.ReqNil)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ParacrossServer).ListTitles(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.paracross/ListTitles",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ParacrossServer).ListTitles(ctx, req.(*types1.ReqNil))
	}
	return interceptor(ctx, in, info, handler)
}

func _Paracross_GetDoneTitleHeight_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqParacrossTitleHeight)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ParacrossServer).GetDoneTitleHeight(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.paracross/GetDoneTitleHeight",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ParacrossServer).GetDoneTitleHeight(ctx, req.(*ReqParacrossTitleHeight))
	}
	return interceptor(ctx, in, info, handler)
}

func _Paracross_GetTitleHeight_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqParacrossTitleHeight)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ParacrossServer).GetTitleHeight(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.paracross/GetTitleHeight",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ParacrossServer).GetTitleHeight(ctx, req.(*ReqParacrossTitleHeight))
	}
	return interceptor(ctx, in, info, handler)
}

func _Paracross_GetAssetTxResult_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(types1.ReqHash)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ParacrossServer).GetAssetTxResult(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.paracross/GetAssetTxResult",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ParacrossServer).GetAssetTxResult(ctx, req.(*types1.ReqHash))
	}
	return interceptor(ctx, in, info, handler)
}

func _Paracross_IsSync_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(types1.ReqNil)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ParacrossServer).IsSync(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.paracross/IsSync",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ParacrossServer).IsSync(ctx, req.(*types1.ReqNil))
	}
	return interceptor(ctx, in, info, handler)
}

var _Paracross_serviceDesc = grpc.ServiceDesc{
	ServiceName: "types.paracross",
	HandlerType: (*ParacrossServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetTitle",
			Handler:    _Paracross_GetTitle_Handler,
		},
		{
			MethodName: "ListTitles",
			Handler:    _Paracross_ListTitles_Handler,
		},
		{
			MethodName: "GetDoneTitleHeight",
			Handler:    _Paracross_GetDoneTitleHeight_Handler,
		},
		{
			MethodName: "GetTitleHeight",
			Handler:    _Paracross_GetTitleHeight_Handler,
		},
		{
			MethodName: "GetAssetTxResult",
			Handler:    _Paracross_GetAssetTxResult_Handler,
		},
		{
			MethodName: "IsSync",
			Handler:    _Paracross_IsSync_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "paracross.proto",
}

func init() { proto.RegisterFile("paracross.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 2522 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x1a, 0x3d, 0x73, 0x1c, 0x49,
	0x75, 0x67, 0xbf, 0xa4, 0x7d, 0xd2, 0xca, 0xd2, 0x58, 0x96, 0x17, 0xd9, 0xe7, 0x53, 0x75, 0x99,
	0x2b, 0xdd, 0x9d, 0x2d, 0xe3, 0x35, 0x18, 0xee, 0x5c, 0x7c, 0xd8, 0xb2, 0xad, 0x55, 0xd9, 0xbe,
	0xf2, 0x8d, 0x74, 0x10, 0x90, 0x30, 0xda, 0x6d, 0x4b, 0x53, 0xb7, 0x9a, 0x59, 0xcf, 0xf4, 0xfa,
	0x24, 0x12, 0x8a, 0x02, 0x62, 0x88, 0xa8, 0x3a, 0x02, 0x02, 0x20, 0xe6, 0x27, 0x10, 0x10, 0x1e,
	0xd1, 0x11, 0x10, 0x90, 0x91, 0x91, 0x13, 0x90, 0x52, 0xef, 0x75, 0xf7, 0x4c, 0x77, 0xef, 0xec,
	0x5a, 0xf6, 0x39, 0x21, 0xdb, 0xf7, 0xfa, 0xf5, 0xeb, 0xf7, 0xdd, 0xef, 0xf5, 0x2c, 0x9c, 0x1b,
	0x85, 0x69, 0xd8, 0x4f, 0x93, 0x2c, 0xdb, 0x1a, 0xa5, 0x89, 0x48, 0xfc, 0x86, 0x38, 0x1d, 0xf1,
	0x6c, 0x7d, 0x45, 0xa4, 0x61, 0x9c, 0x85, 0x7d, 0x11, 0x25, 0xb1, 0x5c, 0x59, 0x5f, 0xec, 0x27,
	0xc7, 0xc7, 0x39, 0xb4, 0x7c, 0x30, 0x4c, 0xfa, 0x9f, 0xf6, 0x8f, 0xc2, 0x48, 0x61, 0xd8, 0x63,
	0x58, 0x7b, 0xaa, 0x99, 0xed, 0x89, 0x50, 0x8c, 0xb3, 0xfb, 0x5c, 0x84, 0xd1, 0x30, 0xf3, 0x57,
	0xa1, 0x11, 0x0e, 0x06, 0x69, 0xd6, 0xf1, 0x36, 0x6a, 0x9b, 0xad, 0x40, 0x02, 0xfe, 0x65, 0x68,
	0x11, 0x8f, 0x5e, 0x98, 0x1d, 0x75, 0xaa, 0x1b, 0xb5, 0xcd, 0xc5, 0xa0, 0x40, 0xb0, 0x1f, 0xc3,
	0x25, 0x87, 0xdb, 0x3d, 0x5c, 0xd3, 0x2c, 0xaf, 0x00, 0xe4, 0xb4, 0x92, 0xef, 0x62, 0x60, 0x60,
	0x90, 0xb9, 0x38, 0x09, 0x78, 0x36, 0x1e, 0x8a, 0x4c, 0x33, 0xcf, 0x11, 0xec, 0x77, 0x55, 0xb8,
	0x90, 0x73, 0xef, 0xf1, 0xe8, 0xf0, 0x48, 0xc8, 0x33, 0xfc, 0x35, 0x68, 0x66, 0xf4, 0xab, 0xe3,
	0x6d, 0x78, 0x9b, 0x8d, 0x40, 0x41, 0xa8, 0x82, 0x88, 0xc4, 0x90, 0x77, 0xaa, 0x1b, 0x1e, 0xaa,
	0x40, 0x00, 0x52, 0x1f, 0xd1, 0xee, 0x4e, 0x6d, 0xc3, 0xdb, 0xac, 0x05, 0x0a, 0xf2, 0xbf, 0x0d,
	0x73, 0x03, 0x29, 0x68, 0xa7, 0xbe, 0xe1, 0x6d, 0x2e, 0x74, 0xdf, 0xda, 0x22, 0xb3, 0x6e, 0x95,
	0x1b, 0x28, 0xd0, 0xd4, 0xa8, 0xd6, 0x71, 0x18, 0xc5, 0x52, 0xa4, 0x4e, 0x83, 0x98, 0x1a, 0x18,
	0x7f, 0x1d, 0xe6, 0x09, 0x42, 0x93, 0x35, 0x37, 0xbc, 0xcd, 0xc5, 0x20, 0x87, 0xfd, 0x87, 0xb0,
	0x78, 0x60, 0x98, 0xa8, 0x33, 0x47, 0x27, 0xb3, 0xf2, 0x93, 0x4d, 0x63, 0x06, 0xd6, 0x3e, 0xf6,
	0x6f, 0x0f, 0x3a, 0xa5, 0xc6, 0x09, 0xb2, 0xd1, 0x1b, 0xb2, 0x8f, 0xad, 0x66, 0x7d, 0xa6, 0x9a,
	0x0d, 0x62, 0x58, 0xa8, 0xb9, 0x01, 0x0b, 0x18, 0x88, 0x91, 0xb8, 0x4b, 0x21, 0xd5, 0xa4, 0x90,
	0x32, 0x51, 0xfe, 0x26, 0x9c, 0x93, 0xe0, 0xbd, 0x3c, 0xbc, 0xe6, 0x88, 0xca, 0x45, 0xb3, 0xcf,
	0x3d, 0x38, 0xe7, 0x18, 0xa6, 0xd0, 0xc4, 0x2b, 0xd7, 0xa4, 0x6a, 0x69, 0x62, 0x05, 0x71, 0x8d,
	0x3c, 0x52, 0x20, 0x5e, 0x59, 0x4f, 0xc3, 0x9d, 0xec, 0x4f, 0xa6, 0x1b, 0xb6, 0x93, 0x38, 0xe3,
	0x71, 0x36, 0x9e, 0x2d, 0x24, 0x9a, 0xe6, 0xa8, 0x38, 0x4f, 0x4a, 0x6a, 0xa2, 0xfc, 0xab, 0xd0,
	0xee, 0x4b, 0x56, 0x3d, 0xd3, 0x2f, 0x36, 0xd2, 0x7f, 0x0f, 0x96, 0x15, 0xa2, 0xb0, 0x60, 0x9d,
	0x0e, 0x9a, 0xc0, 0xb3, 0xdf, 0x7a, 0xe0, 0xa3, 0x98, 0x1f, 0x25, 0x03, 0x8e, 0xe6, 0xdf, 0x4e,
	0xe2, 0x67, 0xd1, 0xe1, 0x14, 0x01, 0x97, 0xa0, 0x9a, 0x8c, 0x48, 0xae, 0x76, 0x50, 0x4d, 0x46,
	0x08, 0x47, 0x03, 0x92, 0xa1, 0x15, 0x54, 0xa3, 0x81, 0xef, 0x43, 0x1d, 0x6b, 0x83, 0x3a, 0x8c,
	0x7e, 0x23, 0xa7, 0x17, 0xe1, 0x70, 0xcc, 0xc9, 0x40, 0xed, 0x40, 0x02, 0x32, 0x0a, 0xa2, 0x38,
	0x7b, 0x98, 0x26, 0x3f, 0xe5, 0x31, 0xe5, 0x02, 0xaa, 0x5a, 0xa0, 0xd8, 0x0f, 0x0a, 0xb9, 0x7e,
	0x98, 0x08, 0x2e, 0xa3, 0x7b, 0x4a, 0x29, 0xc2, 0x33, 0x12, 0xc1, 0x65, 0xa5, 0x68, 0x05, 0x12,
	0x60, 0xbf, 0xf1, 0x60, 0xd5, 0x54, 0x6d, 0x77, 0xa0, 0xac, 0xaf, 0xc5, 0xf4, 0x0c, 0x31, 0xaf,
	0x00, 0x8c, 0xd2, 0x64, 0x94, 0x64, 0xe1, 0x70, 0x77, 0xa0, 0xb2, 0xc0, 0xc0, 0x60, 0x00, 0x3d,
	0x1f, 0x47, 0x62, 0x57, 0xab, 0xab, 0x20, 0x23, 0xa1, 0xea, 0xe5, 0x09, 0xd5, 0x30, 0x0c, 0xc8,
	0xfe, 0xeb, 0xc1, 0xb2, 0x16, 0x29, 0x17, 0x47, 0x5a, 0xd1, 0xcb, 0xad, 0x58, 0xb0, 0xac, 0x96,
	0xb3, 0xac, 0x99, 0x3e, 0xb9, 0x02, 0x20, 0xc2, 0xf4, 0x90, 0x53, 0xf2, 0x28, 0xcb, 0x1b, 0x18,
	0xd7, 0xd2, 0x8d, 0x09, 0x4b, 0xfb, 0x37, 0xb4, 0xf5, 0x9a, 0x54, 0x71, 0xbe, 0x66, 0x54, 0x1c,
	0xdb, 0xfa, 0xca, 0xb0, 0x18, 0xf6, 0xcf, 0xd2, 0xe4, 0x98, 0x0e, 0x9c, 0x93, 0xe9, 0xad, 0x61,
	0x23, 0xd1, 0xe6, 0xcd, 0x44, 0x63, 0x7f, 0xf1, 0xe0, 0x42, 0xc0, 0xfb, 0x3c, 0x1a, 0x09, 0xcd,
	0x58, 0x85, 0x5a, 0x99, 0x37, 0x6e, 0x42, 0xb3, 0x4f, 0xab, 0x64, 0x82, 0x49, 0x99, 0x8a, 0x48,
	0x0d, 0x14, 0xa1, 0xff, 0x3e, 0xd4, 0x47, 0x29, 0x7f, 0x41, 0xc6, 0x59, 0xe8, 0x5e, 0x74, 0x36,
	0x68, 0x63, 0x07, 0x44, 0xe4, 0xdf, 0x84, 0xb9, 0xfe, 0x38, 0x4d, 0x79, 0x2c, 0x54, 0x81, 0x9f,
	0x4a, 0xaf, 0xe9, 0xd8, 0x1f, 0x3d, 0x78, 0xcb, 0x51, 0x00, 0xa5, 0x40, 0xb2, 0x4f, 0x46, 0x83,
	0x50, 0x70, 0xcb, 0x2c, 0x9e, 0x63, 0x96, 0x1b, 0x4a, 0x3a, 0xa9, 0xce, 0xa5, 0x12, 0x75, 0x1c,
	0x09, 0xbf, 0x55, 0x48, 0x58, 0x7b, 0xf9, 0x9e, 0x5c, 0xca, 0xff, 0x78, 0x70, 0xd1, 0x91, 0x92,
	0xfc, 0x97, 0xc4, 0x7c, 0x22, 0xce, 0xca, 0x6b, 0xbe, 0x1d, 0x4f, 0xb5, 0x89, 0x78, 0xc2, 0xf5,
	0x44, 0x84, 0x43, 0x64, 0xad, 0x83, 0xde, 0xc0, 0xd0, 0xcd, 0x8d, 0x10, 0x1e, 0x4b, 0xd1, 0xd6,
	0x08, 0x0a, 0x04, 0x55, 0xcc, 0x24, 0x13, 0xb4, 0xd8, 0xa4, 0xc5, 0x1c, 0xf6, 0x3b, 0x30, 0x87,
	0xf1, 0x15, 0x64, 0x42, 0x45, 0x95, 0x06, 0xf1, 0xcc, 0x41, 0x12, 0x73, 0xa9, 0x2c, 0x05, 0x56,
	0x23, 0x30, 0x30, 0xec, 0x17, 0x1e, 0x9c, 0xd7, 0xea, 0xee, 0xa4, 0xc9, 0x78, 0xf4, 0x95, 0xaa,
	0x58, 0x5e, 0x63, 0x64, 0x32, 0xa9, 0x1a, 0xf3, 0xd2, 0x3c, 0x62, 0xd7, 0x31, 0xc2, 0x9f, 0x9b,
	0xfe, 0x79, 0x3a, 0x3e, 0x78, 0xc4, 0x4f, 0xcb, 0xc5, 0x60, 0x7f, 0x70, 0x2a, 0xaf, 0x22, 0x7e,
	0x0c, 0x0b, 0x78, 0x60, 0x77, 0x34, 0x3e, 0xf8, 0x94, 0x9f, 0x52, 0x9d, 0x5b, 0xe8, 0xbe, 0x57,
	0xe2, 0x7c, 0x49, 0xbf, 0x75, 0xb7, 0x20, 0x7e, 0x10, 0x8b, 0xf4, 0x34, 0x30, 0xb7, 0xaf, 0x7f,
	0x0f, 0x96, 0x5d, 0x02, 0x7f, 0x19, 0x6a, 0x92, 0x33, 0x0a, 0x83, 0x3f, 0x8b, 0x1a, 0x5d, 0xa5,
	0x4b, 0x4c, 0x02, 0x1f, 0x56, 0xbf, 0xe3, 0xb1, 0x3b, 0xd0, 0xc6, 0xfd, 0x77, 0xe3, 0x81, 0x12,
	0xaf, 0x2c, 0x5b, 0xd7, 0xa0, 0xa9, 0xa4, 0x95, 0x91, 0xa4, 0x20, 0xb6, 0x0f, 0x6b, 0x01, 0xcf,
	0x46, 0x25, 0x4a, 0x7e, 0x08, 0xed, 0xd0, 0x64, 0xab, 0xd4, 0x5c, 0x55, 0x6a, 0x5a, 0x47, 0x06,
	0x36, 0x29, 0x7b, 0x17, 0xce, 0x07, 0xfc, 0xf9, 0x76, 0x12, 0xbf, 0xe0, 0xe9, 0xfe, 0x49, 0xf7,
	0x69, 0x1a, 0xbd, 0x08, 0xfb, 0x24, 0xd8, 0x20, 0x14, 0xa1, 0x16, 0x0c, 0x7f, 0xb3, 0xbf, 0xb9,
	0x71, 0xf1, 0x46, 0x2a, 0xee, 0x06, 0x2c, 0x14, 0xf9, 0xa0, 0xa3, 0xc4, 0x44, 0x9d, 0xa1, 0xe6,
	0x9a, 0xb5, 0xa2, 0x39, 0xb5, 0x84, 0xce, 0x59, 0x25, 0xf4, 0x0b, 0x0f, 0xd6, 0x9d, 0xdc, 0x36,
	0x83, 0xbd, 0xcc, 0x33, 0x5d, 0xa7, 0x8e, 0xae, 0x3b, 0x71, 0x64, 0xec, 0xcf, 0x0b, 0xe9, 0x96,
	0x55, 0x48, 0x4b, 0x77, 0x58, 0x95, 0xea, 0x9b, 0x6e, 0x2d, 0x9d, 0xb5, 0x25, 0x2f, 0x54, 0x47,
	0xb0, 0xaa, 0x92, 0x85, 0x1a, 0x24, 0xaa, 0xb9, 0xf1, 0xb3, 0x64, 0x7a, 0xca, 0x46, 0xfa, 0x56,
	0x36, 0x1b, 0x8d, 0x9a, 0x1d, 0x85, 0x65, 0x37, 0x31, 0xdb, 0x2e, 0xa2, 0x30, 0x3f, 0x4a, 0xba,
	0xe9, 0x5d, 0xa8, 0x45, 0x83, 0x4c, 0xc5, 0xde, 0xd4, 0x1b, 0x00, 0x69, 0xd8, 0x0e, 0x96, 0x55,
	0x87, 0x09, 0xe9, 0x95, 0xf9, 0xd7, 0x4c, 0x2e, 0xb3, 0x74, 0x27, 0x46, 0xbf, 0xf2, 0x60, 0x05,
	0x17, 0xa9, 0x03, 0xeb, 0x3e, 0x09, 0xa3, 0xf8, 0x49, 0x38, 0x32, 0x5c, 0xee, 0x4d, 0x6f, 0x4f,
	0xa5, 0xfa, 0x53, 0xdb, 0xd3, 0xda, 0xcc, 0xf6, 0xb4, 0x6e, 0xb7, 0xe1, 0xec, 0xbe, 0x2c, 0x3e,
	0x85, 0x18, 0x64, 0xfd, 0x2d, 0x68, 0x44, 0x82, 0x1f, 0x6b, 0x6d, 0x3a, 0x86, 0x36, 0x96, 0xc0,
	0x81, 0x24, 0x63, 0xff, 0xaa, 0xc9, 0x04, 0xcb, 0x6d, 0xa2, 0x12, 0xec, 0x2a, 0xb4, 0xf1, 0xa4,
	0xa2, 0xfd, 0xf4, 0xa8, 0xb0, 0xd8, 0x48, 0x6c, 0xf4, 0x0b, 0x84, 0xd9, 0xf3, 0xba, 0xe8, 0x29,
	0x89, 0x58, 0x58, 0xad, 0x6e, 0x59, 0x8d, 0xc1, 0xe2, 0x28, 0xe5, 0xc5, 0xe1, 0xb2, 0x35, 0xb7,
	0x70, 0xb6, 0x65, 0x9b, 0x6e, 0xe3, 0x2f, 0x39, 0xa0, 0x32, 0x5c, 0xcd, 0x1f, 0x9a, 0x43, 0x8e,
	0x43, 0x0e, 0x59, 0x4e, 0x30, 0x2f, 0x39, 0xe4, 0x08, 0xb4, 0xbd, 0x38, 0xd9, 0x4e, 0xc6, 0xb1,
	0xc8, 0x3a, 0x2d, 0xba, 0x6a, 0x72, 0x58, 0xae, 0xc9, 0x59, 0xb6, 0x03, 0x72, 0x6c, 0xd0, 0x30,
	0x5e, 0x82, 0xe2, 0x44, 0x4e, 0xc5, 0x0b, 0x34, 0xf6, 0x6a, 0x90, 0x7a, 0x7f, 0x34, 0xf3, 0xbe,
	0xde, 0xba, 0x28, 0x6d, 0x6a, 0x21, 0x51, 0x72, 0x85, 0x90, 0x4c, 0xda, 0xc4, 0xc4, 0xc2, 0xf9,
	0xd7, 0x60, 0x25, 0x4e, 0xe2, 0x6d, 0x1a, 0xa6, 0xf6, 0xb5, 0x90, 0x4b, 0x24, 0xe4, 0xe4, 0x02,
	0xbb, 0x07, 0x2b, 0x7b, 0x7c, 0xf8, 0x4c, 0x8d, 0x30, 0x7b, 0x22, 0x3c, 0xe4, 0x99, 0x7f, 0xdd,
	0x0e, 0x14, 0x9d, 0x3c, 0x2e, 0xa1, 0x8e, 0x93, 0xc7, 0xb0, 0xec, 0x2e, 0x61, 0x91, 0xcc, 0x44,
	0x98, 0x8a, 0x9e, 0x19, 0xf8, 0x26, 0x0a, 0xfd, 0xcb, 0xe3, 0xf0, 0x40, 0x75, 0x28, 0xed, 0x40,
	0x41, 0xec, 0x9f, 0x1e, 0xac, 0xba, 0xec, 0x28, 0x7c, 0x67, 0xd7, 0xf5, 0x76, 0x5e, 0xd7, 0xaf,
	0x43, 0x23, 0xc3, 0x4d, 0x4e, 0xb3, 0x38, 0x29, 0x3d, 0x51, 0x59, 0xc5, 0xba, 0xee, 0x14, 0xeb,
	0x2b, 0x00, 0xfc, 0x84, 0xf7, 0xed, 0x89, 0xbf, 0xc0, 0xbc, 0x72, 0x73, 0xcd, 0x38, 0xac, 0x3d,
	0x4e, 0xfa, 0xe1, 0x50, 0x0b, 0x53, 0x68, 0x77, 0x53, 0x4b, 0xed, 0x59, 0x0d, 0x61, 0x99, 0x25,
	0xb4, 0xe4, 0x14, 0x4d, 0xbb, 0xf1, 0x80, 0x9f, 0xa8, 0xea, 0xa1, 0x41, 0x76, 0x1b, 0x96, 0x64,
	0xdd, 0x47, 0x09, 0x4a, 0x8d, 0x67, 0x35, 0x05, 0x7a, 0x70, 0x63, 0x0c, 0x96, 0xe5, 0xbe, 0xed,
	0x30, 0xee, 0xf3, 0x61, 0xd9, 0x4e, 0xf6, 0xa5, 0x1a, 0xcb, 0x49, 0x9c, 0x57, 0x6a, 0xc5, 0x6e,
	0x68, 0x15, 0x61, 0xa6, 0x63, 0x7a, 0x15, 0xad, 0xe0, 0xfb, 0x50, 0x47, 0xb3, 0x75, 0x16, 0x88,
	0xfe, 0x82, 0xa2, 0xb7, 0x35, 0xeb, 0x55, 0x02, 0x22, 0xa2, 0xa9, 0x82, 0xa4, 0xa6, 0xd4, 0x29,
	0xd8, 0xbb, 0x0a, 0xf5, 0x2a, 0x81, 0x22, 0xbc, 0x37, 0xa7, 0x8c, 0xc0, 0x7e, 0x59, 0x5c, 0xbe,
	0x96, 0x67, 0x94, 0x7a, 0xba, 0xbf, 0x3f, 0x83, 0x6b, 0x26, 0xfa, 0xfb, 0xea, 0xcb, 0xf7, 0xe4,
	0xd7, 0xe6, 0x97, 0x1e, 0x5c, 0x2e, 0x13, 0x63, 0x6a, 0x93, 0x9f, 0x87, 0x7a, 0xf5, 0x4c, 0xa1,
	0x6e, 0x77, 0xf7, 0xb5, 0xd9, 0xdd, 0x7d, 0x7d, 0x56, 0x77, 0xdf, 0x98, 0xde, 0xdd, 0x37, 0xad,
	0xee, 0x9e, 0xfd, 0x0c, 0x2e, 0x95, 0xa9, 0x94, 0xa9, 0xb1, 0xea, 0x9a, 0x65, 0xda, 0xce, 0x14,
	0x05, 0x74, 0x37, 0xd2, 0x75, 0xed, 0x3a, 0x7d, 0x43, 0x6e, 0xd4, 0xdf, 0x7b, 0xe0, 0x07, 0xfc,
	0xf9, 0xc7, 0x63, 0x9e, 0x9e, 0x22, 0x99, 0xaa, 0x71, 0xf6, 0x5b, 0x59, 0x51, 0x3d, 0xdc, 0x66,
	0x64, 0x15, 0x1a, 0x7d, 0x2c, 0x95, 0xca, 0x5c, 0x12, 0x40, 0x4b, 0x0d, 0xa2, 0x94, 0xd3, 0x0b,
	0xac, 0xb6, 0x54, 0x8e, 0x30, 0xae, 0xae, 0x86, 0x75, 0x75, 0xad, 0x42, 0x23, 0xa2, 0x74, 0x95,
	0xc3, 0x91, 0x04, 0xd8, 0xc7, 0xd8, 0x2c, 0x8d, 0x86, 0xa7, 0xae, 0x84, 0x1f, 0xd0, 0x15, 0x24,
	0x63, 0x44, 0x55, 0xe2, 0x99, 0x61, 0x54, 0x50, 0xb3, 0x47, 0xc6, 0x0b, 0xaa, 0x2c, 0xf8, 0x77,
	0xa5, 0x64, 0x5d, 0x4b, 0x6b, 0xbb, 0xa3, 0x71, 0xae, 0xf9, 0xbc, 0xc5, 0x12, 0xf2, 0xa1, 0x85,
	0x96, 0x9f, 0x44, 0x31, 0x4f, 0x5f, 0x9f, 0x17, 0x36, 0x05, 0x51, 0x66, 0x48, 0xaf, 0x8a, 0xf7,
	0x7c, 0xe0, 0xa2, 0xd9, 0xaf, 0x1b, 0xc6, 0xeb, 0x9f, 0x3a, 0xf1, 0x36, 0x36, 0xbc, 0xa8, 0x8d,
	0x3a, 0xf1, 0xb2, 0x7b, 0xa2, 0xa9, 0x2b, 0xe5, 0x39, 0xc1, 0xfe, 0x2d, 0x68, 0x1c, 0xa3, 0xe0,
	0x25, 0xc3, 0xb6, 0xab, 0x15, 0x16, 0x1f, 0xa2, 0xf5, 0xbf, 0x0b, 0xed, 0x30, 0xcb, 0xb8, 0xd8,
	0x4f, 0xc3, 0x38, 0x7b, 0xc6, 0x53, 0xd5, 0xff, 0xea, 0x2a, 0x74, 0x17, 0xd7, 0x32, 0xbd, 0xd8,
	0xab, 0x04, 0x36, 0x75, 0xbe, 0xfd, 0x47, 0x91, 0x38, 0x1a, 0xa4, 0xe1, 0x67, 0x14, 0x0a, 0xee,
	0x76, 0xbd, 0x98, 0x6f, 0xd7, 0x08, 0xff, 0x16, 0xcc, 0x0b, 0x7d, 0x70, 0x73, 0xf6, 0xc1, 0x39,
	0x21, 0x6e, 0xfa, 0x4c, 0x1f, 0x37, 0x37, 0xfb, 0xb8, 0x9c, 0xd0, 0x7f, 0x00, 0x4b, 0x9a, 0xc1,
	0x7e, 0xf2, 0xe0, 0x84, 0xf7, 0xa9, 0xdd, 0x29, 0xac, 0x64, 0x9f, 0x27, 0x49, 0x7a, 0x95, 0xc0,
	0xd9, 0xe4, 0xdf, 0x01, 0x88, 0xf3, 0x67, 0x1f, 0x6a, 0x8a, 0x66, 0x3d, 0xec, 0xf4, 0x2a, 0x81,
	0x41, 0xee, 0x3f, 0x84, 0x73, 0xb1, 0x3d, 0xb0, 0xa8, 0x3b, 0x62, 0xc6, 0x48, 0xd3, 0xab, 0x04,
	0xee, 0x26, 0xff, 0x1e, 0x9c, 0xcb, 0x74, 0x02, 0x29, 0x3e, 0xf2, 0xee, 0x58, 0x33, 0xf8, 0x18,
	0xab, 0xc8, 0xc3, 0xd9, 0x80, 0x05, 0x40, 0x9c, 0xaa, 0x51, 0xb1, 0x2a, 0x4e, 0x8b, 0x4b, 0xe2,
	0x0b, 0x0f, 0x67, 0x8d, 0x7c, 0x42, 0x33, 0x02, 0x6e, 0xda, 0x74, 0x66, 0xb4, 0x27, 0x67, 0x4b,
	0x8f, 0x6f, 0x58, 0xd3, 0xd9, 0x44, 0x78, 0x5b, 0xef, 0xfd, 0xb2, 0x22, 0xde, 0x76, 0xe7, 0xb3,
	0xd9, 0x9b, 0xf2, 0xaa, 0xf8, 0xc8, 0x7a, 0xb0, 0x2b, 0xb2, 0xe0, 0xb5, 0x2a, 0xc4, 0x3f, 0x6a,
	0x58, 0xc2, 0x6c, 0x6e, 0x74, 0x5f, 0xd9, 0x17, 0x8e, 0x37, 0x71, 0xe1, 0xe0, 0xb0, 0x8d, 0x90,
	0x34, 0xa3, 0x32, 0xba, 0x89, 0xf2, 0xdf, 0x81, 0x25, 0xbc, 0x64, 0xf6, 0xc2, 0x63, 0xae, 0x88,
	0x64, 0x1d, 0x76, 0xb0, 0x45, 0x07, 0x52, 0x2f, 0x9f, 0x21, 0x1a, 0xee, 0xe4, 0x55, 0x74, 0xf7,
	0xcd, 0x59, 0xdd, 0xfd, 0xdc, 0x8c, 0xee, 0x7e, 0xde, 0xe9, 0xee, 0xad, 0xa9, 0xa3, 0xe5, 0x4e,
	0x1d, 0x46, 0xef, 0x0f, 0x2f, 0xe9, 0xfd, 0x17, 0xce, 0xd2, 0xfb, 0x2f, 0x96, 0xf4, 0xfe, 0x13,
	0x93, 0x59, 0xfb, 0x8c, 0x93, 0xd9, 0x52, 0xe9, 0x64, 0xc6, 0x7e, 0x32, 0x19, 0xf1, 0x01, 0xef,
	0x27, 0xe9, 0xe0, 0x4d, 0x45, 0x3c, 0xfb, 0x3a, 0x2c, 0xe4, 0xcb, 0xfb, 0x27, 0xe8, 0x30, 0x69,
	0x15, 0xc5, 0x58, 0x41, 0x72, 0x42, 0x2f, 0x1e, 0x14, 0xf6, 0xd1, 0xbb, 0xee, 0xf4, 0x78, 0x96,
	0x4f, 0x42, 0xec, 0xe7, 0x55, 0x58, 0xb1, 0x66, 0xfd, 0xff, 0xaf, 0x38, 0x6d, 0xbd, 0x6e, 0x9c,
	0xb6, 0x8a, 0x38, 0x65, 0x3b, 0x70, 0xde, 0x32, 0x01, 0x59, 0x13, 0x8b, 0x4f, 0x93, 0xa4, 0x71,
	0xdf, 0x07, 0x26, 0xcc, 0x15, 0x28, 0x3a, 0x59, 0x44, 0x5c, 0xaf, 0xa0, 0x64, 0xe5, 0x3e, 0x99,
	0x78, 0xef, 0xb0, 0xbe, 0x29, 0xff, 0xb9, 0x0a, 0x4b, 0xc5, 0x85, 0x8f, 0x97, 0x0e, 0x06, 0x19,
	0x8e, 0x62, 0x3a, 0xc8, 0xf0, 0x37, 0x95, 0xe7, 0x44, 0xf7, 0x67, 0x22, 0x41, 0xd7, 0x45, 0xf9,
	0xc5, 0x46, 0x46, 0x9f, 0x0f, 0x0c, 0x8c, 0x11, 0x51, 0x75, 0x3a, 0x51, 0x41, 0x88, 0x0f, 0x8f,
	0xa9, 0xb1, 0x53, 0x26, 0x97, 0x10, 0x9e, 0x89, 0x03, 0x9e, 0xb2, 0x36, 0xfd, 0xa6, 0x5e, 0xf1,
	0xf4, 0xf8, 0x20, 0x19, 0xaa, 0xa7, 0x6b, 0x05, 0x19, 0x6e, 0x03, 0xcb, 0x6d, 0xf4, 0x89, 0x0e,
	0xdd, 0x8d, 0xd6, 0x52, 0x19, 0x76, 0x81, 0x28, 0x26, 0xf0, 0xf4, 0x69, 0x2a, 0x4c, 0x43, 0x45,
	0xb5, 0x26, 0x47, 0xcc, 0x02, 0x83, 0x65, 0x23, 0x1b, 0xf7, 0xfb, 0x3c, 0xcb, 0x3a, 0x17, 0x49,
	0x39, 0x0d, 0xb2, 0xbf, 0xab, 0xcf, 0x4d, 0x34, 0x50, 0xde, 0x3f, 0xa0, 0xbc, 0x9d, 0xfa, 0xd6,
	0x64, 0xbe, 0x16, 0x55, 0x9d, 0x6f, 0xd3, 0x2f, 0x7b, 0x69, 0x7a, 0x07, 0x96, 0x46, 0x21, 0xde,
	0x1a, 0x4f, 0xcc, 0xf7, 0xa6, 0xc5, 0xc0, 0xc1, 0xe6, 0xfe, 0xdd, 0x8f, 0x8e, 0xb9, 0xb2, 0x6a,
	0x81, 0xf0, 0xaf, 0x42, 0x4d, 0x9c, 0xc8, 0x4f, 0xc2, 0x0b, 0x5d, 0x5f, 0xc5, 0xd6, 0x7e, 0xf1,
	0x47, 0x86, 0x00, 0x97, 0xd9, 0x5f, 0xd5, 0x67, 0x3d, 0x53, 0x29, 0x1a, 0x43, 0xcf, 0xaa, 0x58,
	0xeb, 0x2b, 0x2b, 0xd6, 0x7a, 0x45, 0xc5, 0x96, 0x0b, 0xc5, 0x5a, 0xa4, 0x44, 0xf7, 0xf3, 0x1a,
	0xb4, 0xf2, 0xbf, 0x6e, 0xf8, 0xdf, 0x87, 0xf9, 0x1d, 0x2e, 0x28, 0x39, 0xfc, 0xe5, 0x3c, 0xa7,
	0x9e, 0xef, 0x89, 0x34, 0x8a, 0x0f, 0xd7, 0xdf, 0x9e, 0xec, 0x61, 0xad, 0xaf, 0xc9, 0xac, 0xe2,
	0x7f, 0x00, 0xf0, 0x38, 0xca, 0x84, 0x4a, 0xd3, 0x76, 0xc1, 0xe2, 0xa3, 0x68, 0xb8, 0xbe, 0x5e,
	0x96, 0xa5, 0x92, 0x94, 0x55, 0xfc, 0xa7, 0xe0, 0xef, 0x70, 0x0a, 0x37, 0xb3, 0x64, 0x5e, 0x29,
	0x58, 0x94, 0x95, 0xd4, 0xf5, 0xa9, 0x99, 0xcf, 0x2a, 0xfe, 0x1e, 0x2c, 0x69, 0x6d, 0xce, 0xc8,
	0xed, 0xed, 0x99, 0x1d, 0x49, 0x36, 0x62, 0x15, 0xff, 0x0e, 0x2c, 0xef, 0x70, 0x41, 0x49, 0x9f,
	0xdf, 0x77, 0x4b, 0x05, 0x5b, 0x74, 0xc2, 0xfa, 0x05, 0x97, 0x0d, 0x91, 0xb3, 0x8a, 0x7f, 0x0d,
	0x9a, 0xbb, 0xd9, 0xde, 0x69, 0xdc, 0x77, 0x4d, 0xb3, 0xa2, 0xc0, 0xdd, 0x6c, 0x3b, 0x1c, 0x1f,
	0x1e, 0x89, 0x4f, 0x46, 0xac, 0x72, 0xd0, 0xa4, 0xff, 0xc3, 0xdc, 0xfa, 0x5f, 0x00, 0x00, 0x00,
	0xff, 0xff, 0xc9, 0xff, 0xfa, 0xa3, 0x5c, 0x23, 0x00, 0x00,
}
