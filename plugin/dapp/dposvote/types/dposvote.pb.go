// Code generated by protoc-gen-go. DO NOT EDIT.
// source: dposvote.proto

/*
Package types is a generated protocol buffer package.

It is generated from these files:
	dposvote.proto

It has these top-level messages:
	CandidatorInfo
	DposVoter
	Candidator
	DposCandidatorRegist
	DposCandidatorCancelRegist
	DposVote
	DposCancelVote
	DposVoteAction
	CandidatorQuery
	JsonCandidator
	CandidatorReply
	DposVoteQuery
	JsonDposVoter
	DposVoteReply
	ReceiptCandicator
	DposVrfM
	DposVrfRP
	DposVrfMRegist
	DposVrfRPRegist
	ReceiptVrf
	VrfInfo
	DposVrfQuery
	JsonVrfInfo
	DposVrfReply
*/
package types

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// CandidatorInfo 候选节点信息
type CandidatorInfo struct {
	Pubkey      []byte       `protobuf:"bytes,1,opt,name=pubkey,proto3" json:"pubkey,omitempty"`
	Address     string       `protobuf:"bytes,2,opt,name=address" json:"address,omitempty"`
	Ip          string       `protobuf:"bytes,3,opt,name=ip" json:"ip,omitempty"`
	Votes       int64        `protobuf:"varint,4,opt,name=votes" json:"votes,omitempty"`
	Status      int64        `protobuf:"varint,5,opt,name=status" json:"status,omitempty"`
	PreStatus   int64        `protobuf:"varint,6,opt,name=preStatus" json:"preStatus,omitempty"`
	StartTime   int64        `protobuf:"varint,7,opt,name=startTime" json:"startTime,omitempty"`
	StartHeight int64        `protobuf:"varint,8,opt,name=startHeight" json:"startHeight,omitempty"`
	StartTxHash string       `protobuf:"bytes,9,opt,name=startTxHash" json:"startTxHash,omitempty"`
	StartIndex  int64        `protobuf:"varint,10,opt,name=startIndex" json:"startIndex,omitempty"`
	Index       int64        `protobuf:"varint,11,opt,name=index" json:"index,omitempty"`
	PreIndex    int64        `protobuf:"varint,12,opt,name=preIndex" json:"preIndex,omitempty"`
	Voters      []*DposVoter `protobuf:"bytes,13,rep,name=voters" json:"voters,omitempty"`
}

func (m *CandidatorInfo) Reset()                    { *m = CandidatorInfo{} }
func (m *CandidatorInfo) String() string            { return proto.CompactTextString(m) }
func (*CandidatorInfo) ProtoMessage()               {}
func (*CandidatorInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *CandidatorInfo) GetPubkey() []byte {
	if m != nil {
		return m.Pubkey
	}
	return nil
}

func (m *CandidatorInfo) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *CandidatorInfo) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *CandidatorInfo) GetVotes() int64 {
	if m != nil {
		return m.Votes
	}
	return 0
}

func (m *CandidatorInfo) GetStatus() int64 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *CandidatorInfo) GetPreStatus() int64 {
	if m != nil {
		return m.PreStatus
	}
	return 0
}

func (m *CandidatorInfo) GetStartTime() int64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *CandidatorInfo) GetStartHeight() int64 {
	if m != nil {
		return m.StartHeight
	}
	return 0
}

func (m *CandidatorInfo) GetStartTxHash() string {
	if m != nil {
		return m.StartTxHash
	}
	return ""
}

func (m *CandidatorInfo) GetStartIndex() int64 {
	if m != nil {
		return m.StartIndex
	}
	return 0
}

func (m *CandidatorInfo) GetIndex() int64 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *CandidatorInfo) GetPreIndex() int64 {
	if m != nil {
		return m.PreIndex
	}
	return 0
}

func (m *CandidatorInfo) GetVoters() []*DposVoter {
	if m != nil {
		return m.Voters
	}
	return nil
}

type DposVoter struct {
	FromAddr string `protobuf:"bytes,1,opt,name=fromAddr" json:"fromAddr,omitempty"`
	Pubkey   []byte `protobuf:"bytes,2,opt,name=pubkey,proto3" json:"pubkey,omitempty"`
	Votes    int64  `protobuf:"varint,3,opt,name=votes" json:"votes,omitempty"`
	Index    int64  `protobuf:"varint,4,opt,name=index" json:"index,omitempty"`
	Time     int64  `protobuf:"varint,5,opt,name=time" json:"time,omitempty"`
}

func (m *DposVoter) Reset()                    { *m = DposVoter{} }
func (m *DposVoter) String() string            { return proto.CompactTextString(m) }
func (*DposVoter) ProtoMessage()               {}
func (*DposVoter) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *DposVoter) GetFromAddr() string {
	if m != nil {
		return m.FromAddr
	}
	return ""
}

func (m *DposVoter) GetPubkey() []byte {
	if m != nil {
		return m.Pubkey
	}
	return nil
}

func (m *DposVoter) GetVotes() int64 {
	if m != nil {
		return m.Votes
	}
	return 0
}

func (m *DposVoter) GetIndex() int64 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *DposVoter) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

// Candidator 候选节点信息
type Candidator struct {
	Pubkey  []byte `protobuf:"bytes,1,opt,name=pubkey,proto3" json:"pubkey,omitempty"`
	Address string `protobuf:"bytes,2,opt,name=address" json:"address,omitempty"`
	Ip      string `protobuf:"bytes,3,opt,name=ip" json:"ip,omitempty"`
	Votes   int64  `protobuf:"varint,4,opt,name=votes" json:"votes,omitempty"`
	Status  int64  `protobuf:"varint,5,opt,name=status" json:"status,omitempty"`
}

func (m *Candidator) Reset()                    { *m = Candidator{} }
func (m *Candidator) String() string            { return proto.CompactTextString(m) }
func (*Candidator) ProtoMessage()               {}
func (*Candidator) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Candidator) GetPubkey() []byte {
	if m != nil {
		return m.Pubkey
	}
	return nil
}

func (m *Candidator) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Candidator) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *Candidator) GetVotes() int64 {
	if m != nil {
		return m.Votes
	}
	return 0
}

func (m *Candidator) GetStatus() int64 {
	if m != nil {
		return m.Status
	}
	return 0
}

// DposCandidatorRegist 注册Dpos候选节点，必须抵押一定数量的币，比如：10000个币
type DposCandidatorRegist struct {
	Pubkey  string `protobuf:"bytes,1,opt,name=pubkey" json:"pubkey,omitempty"`
	Address string `protobuf:"bytes,2,opt,name=address" json:"address,omitempty"`
	Ip      string `protobuf:"bytes,3,opt,name=ip" json:"ip,omitempty"`
}

func (m *DposCandidatorRegist) Reset()                    { *m = DposCandidatorRegist{} }
func (m *DposCandidatorRegist) String() string            { return proto.CompactTextString(m) }
func (*DposCandidatorRegist) ProtoMessage()               {}
func (*DposCandidatorRegist) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *DposCandidatorRegist) GetPubkey() string {
	if m != nil {
		return m.Pubkey
	}
	return ""
}

func (m *DposCandidatorRegist) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *DposCandidatorRegist) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

// DposCandidatorCancelRegist 注销Dpos候选节点，解冻抵押的币
type DposCandidatorCancelRegist struct {
	Pubkey  string `protobuf:"bytes,1,opt,name=pubkey" json:"pubkey,omitempty"`
	Address string `protobuf:"bytes,2,opt,name=address" json:"address,omitempty"`
}

func (m *DposCandidatorCancelRegist) Reset()                    { *m = DposCandidatorCancelRegist{} }
func (m *DposCandidatorCancelRegist) String() string            { return proto.CompactTextString(m) }
func (*DposCandidatorCancelRegist) ProtoMessage()               {}
func (*DposCandidatorCancelRegist) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *DposCandidatorCancelRegist) GetPubkey() string {
	if m != nil {
		return m.Pubkey
	}
	return ""
}

func (m *DposCandidatorCancelRegist) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

// DposVote 为Dpos候选节点投票
type DposVote struct {
	FromAddr string `protobuf:"bytes,1,opt,name=fromAddr" json:"fromAddr,omitempty"`
	Pubkey   string `protobuf:"bytes,2,opt,name=pubkey" json:"pubkey,omitempty"`
	Votes    int64  `protobuf:"varint,3,opt,name=votes" json:"votes,omitempty"`
}

func (m *DposVote) Reset()                    { *m = DposVote{} }
func (m *DposVote) String() string            { return proto.CompactTextString(m) }
func (*DposVote) ProtoMessage()               {}
func (*DposVote) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *DposVote) GetFromAddr() string {
	if m != nil {
		return m.FromAddr
	}
	return ""
}

func (m *DposVote) GetPubkey() string {
	if m != nil {
		return m.Pubkey
	}
	return ""
}

func (m *DposVote) GetVotes() int64 {
	if m != nil {
		return m.Votes
	}
	return 0
}

// DposCancelVote 撤销为Dpos候选节点投票
type DposCancelVote struct {
	Pubkey string `protobuf:"bytes,1,opt,name=pubkey" json:"pubkey,omitempty"`
	Index  int64  `protobuf:"varint,3,opt,name=index" json:"index,omitempty"`
}

func (m *DposCancelVote) Reset()                    { *m = DposCancelVote{} }
func (m *DposCancelVote) String() string            { return proto.CompactTextString(m) }
func (*DposCancelVote) ProtoMessage()               {}
func (*DposCancelVote) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *DposCancelVote) GetPubkey() string {
	if m != nil {
		return m.Pubkey
	}
	return ""
}

func (m *DposCancelVote) GetIndex() int64 {
	if m != nil {
		return m.Index
	}
	return 0
}

// DposVoteAction DposVote动作
type DposVoteAction struct {
	// Types that are valid to be assigned to Value:
	//	*DposVoteAction_Regist
	//	*DposVoteAction_CancelRegist
	//	*DposVoteAction_ReRegist
	//	*DposVoteAction_Vote
	//	*DposVoteAction_CancelVote
	//	*DposVoteAction_CandidatorQuery
	//	*DposVoteAction_VoteQuery
	//	*DposVoteAction_RegistVrfM
	//	*DposVoteAction_RegistVrfRP
	//	*DposVoteAction_VrfQuery
	Value isDposVoteAction_Value `protobuf_oneof:"value"`
	Ty    int32                  `protobuf:"varint,11,opt,name=ty" json:"ty,omitempty"`
}

func (m *DposVoteAction) Reset()                    { *m = DposVoteAction{} }
func (m *DposVoteAction) String() string            { return proto.CompactTextString(m) }
func (*DposVoteAction) ProtoMessage()               {}
func (*DposVoteAction) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

type isDposVoteAction_Value interface {
	isDposVoteAction_Value()
}

type DposVoteAction_Regist struct {
	Regist *DposCandidatorRegist `protobuf:"bytes,1,opt,name=regist,oneof"`
}
type DposVoteAction_CancelRegist struct {
	CancelRegist *DposCandidatorCancelRegist `protobuf:"bytes,2,opt,name=cancelRegist,oneof"`
}
type DposVoteAction_ReRegist struct {
	ReRegist *DposCandidatorRegist `protobuf:"bytes,3,opt,name=reRegist,oneof"`
}
type DposVoteAction_Vote struct {
	Vote *DposVote `protobuf:"bytes,4,opt,name=vote,oneof"`
}
type DposVoteAction_CancelVote struct {
	CancelVote *DposCancelVote `protobuf:"bytes,5,opt,name=cancelVote,oneof"`
}
type DposVoteAction_CandidatorQuery struct {
	CandidatorQuery *CandidatorQuery `protobuf:"bytes,6,opt,name=candidatorQuery,oneof"`
}
type DposVoteAction_VoteQuery struct {
	VoteQuery *DposVoteQuery `protobuf:"bytes,7,opt,name=voteQuery,oneof"`
}
type DposVoteAction_RegistVrfM struct {
	RegistVrfM *DposVrfMRegist `protobuf:"bytes,8,opt,name=registVrfM,oneof"`
}
type DposVoteAction_RegistVrfRP struct {
	RegistVrfRP *DposVrfRPRegist `protobuf:"bytes,9,opt,name=registVrfRP,oneof"`
}
type DposVoteAction_VrfQuery struct {
	VrfQuery *DposVrfQuery `protobuf:"bytes,10,opt,name=vrfQuery,oneof"`
}

func (*DposVoteAction_Regist) isDposVoteAction_Value()          {}
func (*DposVoteAction_CancelRegist) isDposVoteAction_Value()    {}
func (*DposVoteAction_ReRegist) isDposVoteAction_Value()        {}
func (*DposVoteAction_Vote) isDposVoteAction_Value()            {}
func (*DposVoteAction_CancelVote) isDposVoteAction_Value()      {}
func (*DposVoteAction_CandidatorQuery) isDposVoteAction_Value() {}
func (*DposVoteAction_VoteQuery) isDposVoteAction_Value()       {}
func (*DposVoteAction_RegistVrfM) isDposVoteAction_Value()      {}
func (*DposVoteAction_RegistVrfRP) isDposVoteAction_Value()     {}
func (*DposVoteAction_VrfQuery) isDposVoteAction_Value()        {}

func (m *DposVoteAction) GetValue() isDposVoteAction_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *DposVoteAction) GetRegist() *DposCandidatorRegist {
	if x, ok := m.GetValue().(*DposVoteAction_Regist); ok {
		return x.Regist
	}
	return nil
}

func (m *DposVoteAction) GetCancelRegist() *DposCandidatorCancelRegist {
	if x, ok := m.GetValue().(*DposVoteAction_CancelRegist); ok {
		return x.CancelRegist
	}
	return nil
}

func (m *DposVoteAction) GetReRegist() *DposCandidatorRegist {
	if x, ok := m.GetValue().(*DposVoteAction_ReRegist); ok {
		return x.ReRegist
	}
	return nil
}

func (m *DposVoteAction) GetVote() *DposVote {
	if x, ok := m.GetValue().(*DposVoteAction_Vote); ok {
		return x.Vote
	}
	return nil
}

func (m *DposVoteAction) GetCancelVote() *DposCancelVote {
	if x, ok := m.GetValue().(*DposVoteAction_CancelVote); ok {
		return x.CancelVote
	}
	return nil
}

func (m *DposVoteAction) GetCandidatorQuery() *CandidatorQuery {
	if x, ok := m.GetValue().(*DposVoteAction_CandidatorQuery); ok {
		return x.CandidatorQuery
	}
	return nil
}

func (m *DposVoteAction) GetVoteQuery() *DposVoteQuery {
	if x, ok := m.GetValue().(*DposVoteAction_VoteQuery); ok {
		return x.VoteQuery
	}
	return nil
}

func (m *DposVoteAction) GetRegistVrfM() *DposVrfMRegist {
	if x, ok := m.GetValue().(*DposVoteAction_RegistVrfM); ok {
		return x.RegistVrfM
	}
	return nil
}

func (m *DposVoteAction) GetRegistVrfRP() *DposVrfRPRegist {
	if x, ok := m.GetValue().(*DposVoteAction_RegistVrfRP); ok {
		return x.RegistVrfRP
	}
	return nil
}

func (m *DposVoteAction) GetVrfQuery() *DposVrfQuery {
	if x, ok := m.GetValue().(*DposVoteAction_VrfQuery); ok {
		return x.VrfQuery
	}
	return nil
}

func (m *DposVoteAction) GetTy() int32 {
	if m != nil {
		return m.Ty
	}
	return 0
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*DposVoteAction) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _DposVoteAction_OneofMarshaler, _DposVoteAction_OneofUnmarshaler, _DposVoteAction_OneofSizer, []interface{}{
		(*DposVoteAction_Regist)(nil),
		(*DposVoteAction_CancelRegist)(nil),
		(*DposVoteAction_ReRegist)(nil),
		(*DposVoteAction_Vote)(nil),
		(*DposVoteAction_CancelVote)(nil),
		(*DposVoteAction_CandidatorQuery)(nil),
		(*DposVoteAction_VoteQuery)(nil),
		(*DposVoteAction_RegistVrfM)(nil),
		(*DposVoteAction_RegistVrfRP)(nil),
		(*DposVoteAction_VrfQuery)(nil),
	}
}

func _DposVoteAction_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*DposVoteAction)
	// value
	switch x := m.Value.(type) {
	case *DposVoteAction_Regist:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Regist); err != nil {
			return err
		}
	case *DposVoteAction_CancelRegist:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CancelRegist); err != nil {
			return err
		}
	case *DposVoteAction_ReRegist:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ReRegist); err != nil {
			return err
		}
	case *DposVoteAction_Vote:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Vote); err != nil {
			return err
		}
	case *DposVoteAction_CancelVote:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CancelVote); err != nil {
			return err
		}
	case *DposVoteAction_CandidatorQuery:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CandidatorQuery); err != nil {
			return err
		}
	case *DposVoteAction_VoteQuery:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.VoteQuery); err != nil {
			return err
		}
	case *DposVoteAction_RegistVrfM:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.RegistVrfM); err != nil {
			return err
		}
	case *DposVoteAction_RegistVrfRP:
		b.EncodeVarint(9<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.RegistVrfRP); err != nil {
			return err
		}
	case *DposVoteAction_VrfQuery:
		b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.VrfQuery); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("DposVoteAction.Value has unexpected type %T", x)
	}
	return nil
}

func _DposVoteAction_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*DposVoteAction)
	switch tag {
	case 1: // value.regist
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DposCandidatorRegist)
		err := b.DecodeMessage(msg)
		m.Value = &DposVoteAction_Regist{msg}
		return true, err
	case 2: // value.cancelRegist
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DposCandidatorCancelRegist)
		err := b.DecodeMessage(msg)
		m.Value = &DposVoteAction_CancelRegist{msg}
		return true, err
	case 3: // value.reRegist
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DposCandidatorRegist)
		err := b.DecodeMessage(msg)
		m.Value = &DposVoteAction_ReRegist{msg}
		return true, err
	case 4: // value.vote
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DposVote)
		err := b.DecodeMessage(msg)
		m.Value = &DposVoteAction_Vote{msg}
		return true, err
	case 5: // value.cancelVote
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DposCancelVote)
		err := b.DecodeMessage(msg)
		m.Value = &DposVoteAction_CancelVote{msg}
		return true, err
	case 6: // value.candidatorQuery
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CandidatorQuery)
		err := b.DecodeMessage(msg)
		m.Value = &DposVoteAction_CandidatorQuery{msg}
		return true, err
	case 7: // value.voteQuery
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DposVoteQuery)
		err := b.DecodeMessage(msg)
		m.Value = &DposVoteAction_VoteQuery{msg}
		return true, err
	case 8: // value.registVrfM
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DposVrfMRegist)
		err := b.DecodeMessage(msg)
		m.Value = &DposVoteAction_RegistVrfM{msg}
		return true, err
	case 9: // value.registVrfRP
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DposVrfRPRegist)
		err := b.DecodeMessage(msg)
		m.Value = &DposVoteAction_RegistVrfRP{msg}
		return true, err
	case 10: // value.vrfQuery
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DposVrfQuery)
		err := b.DecodeMessage(msg)
		m.Value = &DposVoteAction_VrfQuery{msg}
		return true, err
	default:
		return false, nil
	}
}

func _DposVoteAction_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*DposVoteAction)
	// value
	switch x := m.Value.(type) {
	case *DposVoteAction_Regist:
		s := proto.Size(x.Regist)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *DposVoteAction_CancelRegist:
		s := proto.Size(x.CancelRegist)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *DposVoteAction_ReRegist:
		s := proto.Size(x.ReRegist)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *DposVoteAction_Vote:
		s := proto.Size(x.Vote)
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *DposVoteAction_CancelVote:
		s := proto.Size(x.CancelVote)
		n += proto.SizeVarint(5<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *DposVoteAction_CandidatorQuery:
		s := proto.Size(x.CandidatorQuery)
		n += proto.SizeVarint(6<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *DposVoteAction_VoteQuery:
		s := proto.Size(x.VoteQuery)
		n += proto.SizeVarint(7<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *DposVoteAction_RegistVrfM:
		s := proto.Size(x.RegistVrfM)
		n += proto.SizeVarint(8<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *DposVoteAction_RegistVrfRP:
		s := proto.Size(x.RegistVrfRP)
		n += proto.SizeVarint(9<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *DposVoteAction_VrfQuery:
		s := proto.Size(x.VrfQuery)
		n += proto.SizeVarint(10<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type CandidatorQuery struct {
	Pubkeys []string `protobuf:"bytes,1,rep,name=pubkeys" json:"pubkeys,omitempty"`
	TopN    int32    `protobuf:"varint,2,opt,name=topN" json:"topN,omitempty"`
	Ty      int32    `protobuf:"varint,3,opt,name=ty" json:"ty,omitempty"`
}

func (m *CandidatorQuery) Reset()                    { *m = CandidatorQuery{} }
func (m *CandidatorQuery) String() string            { return proto.CompactTextString(m) }
func (*CandidatorQuery) ProtoMessage()               {}
func (*CandidatorQuery) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *CandidatorQuery) GetPubkeys() []string {
	if m != nil {
		return m.Pubkeys
	}
	return nil
}

func (m *CandidatorQuery) GetTopN() int32 {
	if m != nil {
		return m.TopN
	}
	return 0
}

func (m *CandidatorQuery) GetTy() int32 {
	if m != nil {
		return m.Ty
	}
	return 0
}

// Candidator 候选节点信息
type JsonCandidator struct {
	Pubkey  string `protobuf:"bytes,1,opt,name=pubkey" json:"pubkey,omitempty"`
	Address string `protobuf:"bytes,2,opt,name=address" json:"address,omitempty"`
	Ip      string `protobuf:"bytes,3,opt,name=ip" json:"ip,omitempty"`
	Votes   int64  `protobuf:"varint,4,opt,name=votes" json:"votes,omitempty"`
	Status  int64  `protobuf:"varint,5,opt,name=status" json:"status,omitempty"`
}

func (m *JsonCandidator) Reset()                    { *m = JsonCandidator{} }
func (m *JsonCandidator) String() string            { return proto.CompactTextString(m) }
func (*JsonCandidator) ProtoMessage()               {}
func (*JsonCandidator) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *JsonCandidator) GetPubkey() string {
	if m != nil {
		return m.Pubkey
	}
	return ""
}

func (m *JsonCandidator) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *JsonCandidator) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *JsonCandidator) GetVotes() int64 {
	if m != nil {
		return m.Votes
	}
	return 0
}

func (m *JsonCandidator) GetStatus() int64 {
	if m != nil {
		return m.Status
	}
	return 0
}

type CandidatorReply struct {
	Candidators []*JsonCandidator `protobuf:"bytes,1,rep,name=candidators" json:"candidators,omitempty"`
}

func (m *CandidatorReply) Reset()                    { *m = CandidatorReply{} }
func (m *CandidatorReply) String() string            { return proto.CompactTextString(m) }
func (*CandidatorReply) ProtoMessage()               {}
func (*CandidatorReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *CandidatorReply) GetCandidators() []*JsonCandidator {
	if m != nil {
		return m.Candidators
	}
	return nil
}

type DposVoteQuery struct {
	Pubkeys []string `protobuf:"bytes,1,rep,name=pubkeys" json:"pubkeys,omitempty"`
	Addr    string   `protobuf:"bytes,2,opt,name=addr" json:"addr,omitempty"`
}

func (m *DposVoteQuery) Reset()                    { *m = DposVoteQuery{} }
func (m *DposVoteQuery) String() string            { return proto.CompactTextString(m) }
func (*DposVoteQuery) ProtoMessage()               {}
func (*DposVoteQuery) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *DposVoteQuery) GetPubkeys() []string {
	if m != nil {
		return m.Pubkeys
	}
	return nil
}

func (m *DposVoteQuery) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

type JsonDposVoter struct {
	FromAddr string `protobuf:"bytes,1,opt,name=fromAddr" json:"fromAddr,omitempty"`
	Pubkey   string `protobuf:"bytes,2,opt,name=pubkey" json:"pubkey,omitempty"`
	Votes    int64  `protobuf:"varint,3,opt,name=votes" json:"votes,omitempty"`
	Index    int64  `protobuf:"varint,4,opt,name=index" json:"index,omitempty"`
	Time     int64  `protobuf:"varint,5,opt,name=time" json:"time,omitempty"`
}

func (m *JsonDposVoter) Reset()                    { *m = JsonDposVoter{} }
func (m *JsonDposVoter) String() string            { return proto.CompactTextString(m) }
func (*JsonDposVoter) ProtoMessage()               {}
func (*JsonDposVoter) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *JsonDposVoter) GetFromAddr() string {
	if m != nil {
		return m.FromAddr
	}
	return ""
}

func (m *JsonDposVoter) GetPubkey() string {
	if m != nil {
		return m.Pubkey
	}
	return ""
}

func (m *JsonDposVoter) GetVotes() int64 {
	if m != nil {
		return m.Votes
	}
	return 0
}

func (m *JsonDposVoter) GetIndex() int64 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *JsonDposVoter) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

type DposVoteReply struct {
	Votes []*JsonDposVoter `protobuf:"bytes,1,rep,name=votes" json:"votes,omitempty"`
}

func (m *DposVoteReply) Reset()                    { *m = DposVoteReply{} }
func (m *DposVoteReply) String() string            { return proto.CompactTextString(m) }
func (*DposVoteReply) ProtoMessage()               {}
func (*DposVoteReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *DposVoteReply) GetVotes() []*JsonDposVoter {
	if m != nil {
		return m.Votes
	}
	return nil
}

// ReceiptCandicator 候选者收据信息
type ReceiptCandicator struct {
	Index        int64           `protobuf:"varint,1,opt,name=Index" json:"Index,omitempty"`
	Pubkey       []byte          `protobuf:"bytes,2,opt,name=pubkey,proto3" json:"pubkey,omitempty"`
	Address      string          `protobuf:"bytes,3,opt,name=address" json:"address,omitempty"`
	Status       int64           `protobuf:"varint,4,opt,name=status" json:"status,omitempty"`
	PreStatus    int64           `protobuf:"varint,5,opt,name=preStatus" json:"preStatus,omitempty"`
	StatusChange bool            `protobuf:"varint,6,opt,name=statusChange" json:"statusChange,omitempty"`
	VoteType     int32           `protobuf:"varint,7,opt,name=voteType" json:"voteType,omitempty"`
	Vote         *DposVoter      `protobuf:"bytes,8,opt,name=vote" json:"vote,omitempty"`
	FromAddr     string          `protobuf:"bytes,9,opt,name=fromAddr" json:"fromAddr,omitempty"`
	CandInfo     *CandidatorInfo `protobuf:"bytes,10,opt,name=candInfo" json:"candInfo,omitempty"`
	Time         int64           `protobuf:"varint,11,opt,name=time" json:"time,omitempty"`
}

func (m *ReceiptCandicator) Reset()                    { *m = ReceiptCandicator{} }
func (m *ReceiptCandicator) String() string            { return proto.CompactTextString(m) }
func (*ReceiptCandicator) ProtoMessage()               {}
func (*ReceiptCandicator) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *ReceiptCandicator) GetIndex() int64 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *ReceiptCandicator) GetPubkey() []byte {
	if m != nil {
		return m.Pubkey
	}
	return nil
}

func (m *ReceiptCandicator) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *ReceiptCandicator) GetStatus() int64 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *ReceiptCandicator) GetPreStatus() int64 {
	if m != nil {
		return m.PreStatus
	}
	return 0
}

func (m *ReceiptCandicator) GetStatusChange() bool {
	if m != nil {
		return m.StatusChange
	}
	return false
}

func (m *ReceiptCandicator) GetVoteType() int32 {
	if m != nil {
		return m.VoteType
	}
	return 0
}

func (m *ReceiptCandicator) GetVote() *DposVoter {
	if m != nil {
		return m.Vote
	}
	return nil
}

func (m *ReceiptCandicator) GetFromAddr() string {
	if m != nil {
		return m.FromAddr
	}
	return ""
}

func (m *ReceiptCandicator) GetCandInfo() *CandidatorInfo {
	if m != nil {
		return m.CandInfo
	}
	return nil
}

func (m *ReceiptCandicator) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

type DposVrfM struct {
	Index       int64  `protobuf:"varint,1,opt,name=Index" json:"Index,omitempty"`
	Pubkey      []byte `protobuf:"bytes,2,opt,name=pubkey,proto3" json:"pubkey,omitempty"`
	Cycle       int64  `protobuf:"varint,3,opt,name=cycle" json:"cycle,omitempty"`
	Height      int64  `protobuf:"varint,4,opt,name=height" json:"height,omitempty"`
	M           []byte `protobuf:"bytes,5,opt,name=m,proto3" json:"m,omitempty"`
	Time        int64  `protobuf:"varint,6,opt,name=time" json:"time,omitempty"`
	CycleStart  int64  `protobuf:"varint,7,opt,name=cycleStart" json:"cycleStart,omitempty"`
	CycleMiddle int64  `protobuf:"varint,8,opt,name=cycleMiddle" json:"cycleMiddle,omitempty"`
	CycleStop   int64  `protobuf:"varint,9,opt,name=cycleStop" json:"cycleStop,omitempty"`
}

func (m *DposVrfM) Reset()                    { *m = DposVrfM{} }
func (m *DposVrfM) String() string            { return proto.CompactTextString(m) }
func (*DposVrfM) ProtoMessage()               {}
func (*DposVrfM) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *DposVrfM) GetIndex() int64 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *DposVrfM) GetPubkey() []byte {
	if m != nil {
		return m.Pubkey
	}
	return nil
}

func (m *DposVrfM) GetCycle() int64 {
	if m != nil {
		return m.Cycle
	}
	return 0
}

func (m *DposVrfM) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *DposVrfM) GetM() []byte {
	if m != nil {
		return m.M
	}
	return nil
}

func (m *DposVrfM) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *DposVrfM) GetCycleStart() int64 {
	if m != nil {
		return m.CycleStart
	}
	return 0
}

func (m *DposVrfM) GetCycleMiddle() int64 {
	if m != nil {
		return m.CycleMiddle
	}
	return 0
}

func (m *DposVrfM) GetCycleStop() int64 {
	if m != nil {
		return m.CycleStop
	}
	return 0
}

type DposVrfRP struct {
	Index       int64  `protobuf:"varint,1,opt,name=Index" json:"Index,omitempty"`
	Pubkey      []byte `protobuf:"bytes,2,opt,name=pubkey,proto3" json:"pubkey,omitempty"`
	Cycle       int64  `protobuf:"varint,3,opt,name=cycle" json:"cycle,omitempty"`
	Height      int64  `protobuf:"varint,4,opt,name=height" json:"height,omitempty"`
	M           []byte `protobuf:"bytes,5,opt,name=m,proto3" json:"m,omitempty"`
	R           []byte `protobuf:"bytes,6,opt,name=r,proto3" json:"r,omitempty"`
	P           []byte `protobuf:"bytes,7,opt,name=p,proto3" json:"p,omitempty"`
	Time        int64  `protobuf:"varint,8,opt,name=time" json:"time,omitempty"`
	CycleStart  int64  `protobuf:"varint,9,opt,name=cycleStart" json:"cycleStart,omitempty"`
	CycleMiddle int64  `protobuf:"varint,10,opt,name=cycleMiddle" json:"cycleMiddle,omitempty"`
	CycleStop   int64  `protobuf:"varint,11,opt,name=cycleStop" json:"cycleStop,omitempty"`
}

func (m *DposVrfRP) Reset()                    { *m = DposVrfRP{} }
func (m *DposVrfRP) String() string            { return proto.CompactTextString(m) }
func (*DposVrfRP) ProtoMessage()               {}
func (*DposVrfRP) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *DposVrfRP) GetIndex() int64 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *DposVrfRP) GetPubkey() []byte {
	if m != nil {
		return m.Pubkey
	}
	return nil
}

func (m *DposVrfRP) GetCycle() int64 {
	if m != nil {
		return m.Cycle
	}
	return 0
}

func (m *DposVrfRP) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *DposVrfRP) GetM() []byte {
	if m != nil {
		return m.M
	}
	return nil
}

func (m *DposVrfRP) GetR() []byte {
	if m != nil {
		return m.R
	}
	return nil
}

func (m *DposVrfRP) GetP() []byte {
	if m != nil {
		return m.P
	}
	return nil
}

func (m *DposVrfRP) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *DposVrfRP) GetCycleStart() int64 {
	if m != nil {
		return m.CycleStart
	}
	return 0
}

func (m *DposVrfRP) GetCycleMiddle() int64 {
	if m != nil {
		return m.CycleMiddle
	}
	return 0
}

func (m *DposVrfRP) GetCycleStop() int64 {
	if m != nil {
		return m.CycleStop
	}
	return 0
}

type DposVrfMRegist struct {
	Pubkey string `protobuf:"bytes,1,opt,name=pubkey" json:"pubkey,omitempty"`
	Cycle  int64  `protobuf:"varint,2,opt,name=cycle" json:"cycle,omitempty"`
	M      string `protobuf:"bytes,3,opt,name=m" json:"m,omitempty"`
}

func (m *DposVrfMRegist) Reset()                    { *m = DposVrfMRegist{} }
func (m *DposVrfMRegist) String() string            { return proto.CompactTextString(m) }
func (*DposVrfMRegist) ProtoMessage()               {}
func (*DposVrfMRegist) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *DposVrfMRegist) GetPubkey() string {
	if m != nil {
		return m.Pubkey
	}
	return ""
}

func (m *DposVrfMRegist) GetCycle() int64 {
	if m != nil {
		return m.Cycle
	}
	return 0
}

func (m *DposVrfMRegist) GetM() string {
	if m != nil {
		return m.M
	}
	return ""
}

type DposVrfRPRegist struct {
	Pubkey string `protobuf:"bytes,1,opt,name=pubkey" json:"pubkey,omitempty"`
	Cycle  int64  `protobuf:"varint,2,opt,name=cycle" json:"cycle,omitempty"`
	R      string `protobuf:"bytes,3,opt,name=r" json:"r,omitempty"`
	P      string `protobuf:"bytes,4,opt,name=p" json:"p,omitempty"`
}

func (m *DposVrfRPRegist) Reset()                    { *m = DposVrfRPRegist{} }
func (m *DposVrfRPRegist) String() string            { return proto.CompactTextString(m) }
func (*DposVrfRPRegist) ProtoMessage()               {}
func (*DposVrfRPRegist) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *DposVrfRPRegist) GetPubkey() string {
	if m != nil {
		return m.Pubkey
	}
	return ""
}

func (m *DposVrfRPRegist) GetCycle() int64 {
	if m != nil {
		return m.Cycle
	}
	return 0
}

func (m *DposVrfRPRegist) GetR() string {
	if m != nil {
		return m.R
	}
	return ""
}

func (m *DposVrfRPRegist) GetP() string {
	if m != nil {
		return m.P
	}
	return ""
}

// ReceiptVrf vrf收据信息
type ReceiptVrf struct {
	Index       int64  `protobuf:"varint,1,opt,name=Index" json:"Index,omitempty"`
	Pubkey      []byte `protobuf:"bytes,2,opt,name=pubkey,proto3" json:"pubkey,omitempty"`
	Status      int64  `protobuf:"varint,3,opt,name=status" json:"status,omitempty"`
	Cycle       int64  `protobuf:"varint,4,opt,name=cycle" json:"cycle,omitempty"`
	Height      int64  `protobuf:"varint,5,opt,name=height" json:"height,omitempty"`
	M           []byte `protobuf:"bytes,6,opt,name=m,proto3" json:"m,omitempty"`
	R           []byte `protobuf:"bytes,7,opt,name=r,proto3" json:"r,omitempty"`
	P           []byte `protobuf:"bytes,8,opt,name=p,proto3" json:"p,omitempty"`
	Time        int64  `protobuf:"varint,9,opt,name=time" json:"time,omitempty"`
	CycleStart  int64  `protobuf:"varint,10,opt,name=cycleStart" json:"cycleStart,omitempty"`
	CycleMiddle int64  `protobuf:"varint,11,opt,name=cycleMiddle" json:"cycleMiddle,omitempty"`
	CycleStop   int64  `protobuf:"varint,12,opt,name=cycleStop" json:"cycleStop,omitempty"`
}

func (m *ReceiptVrf) Reset()                    { *m = ReceiptVrf{} }
func (m *ReceiptVrf) String() string            { return proto.CompactTextString(m) }
func (*ReceiptVrf) ProtoMessage()               {}
func (*ReceiptVrf) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *ReceiptVrf) GetIndex() int64 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *ReceiptVrf) GetPubkey() []byte {
	if m != nil {
		return m.Pubkey
	}
	return nil
}

func (m *ReceiptVrf) GetStatus() int64 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *ReceiptVrf) GetCycle() int64 {
	if m != nil {
		return m.Cycle
	}
	return 0
}

func (m *ReceiptVrf) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *ReceiptVrf) GetM() []byte {
	if m != nil {
		return m.M
	}
	return nil
}

func (m *ReceiptVrf) GetR() []byte {
	if m != nil {
		return m.R
	}
	return nil
}

func (m *ReceiptVrf) GetP() []byte {
	if m != nil {
		return m.P
	}
	return nil
}

func (m *ReceiptVrf) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *ReceiptVrf) GetCycleStart() int64 {
	if m != nil {
		return m.CycleStart
	}
	return 0
}

func (m *ReceiptVrf) GetCycleMiddle() int64 {
	if m != nil {
		return m.CycleMiddle
	}
	return 0
}

func (m *ReceiptVrf) GetCycleStop() int64 {
	if m != nil {
		return m.CycleStop
	}
	return 0
}

type VrfInfo struct {
	Index  int64  `protobuf:"varint,1,opt,name=Index" json:"Index,omitempty"`
	Pubkey []byte `protobuf:"bytes,2,opt,name=pubkey,proto3" json:"pubkey,omitempty"`
	Cycle  int64  `protobuf:"varint,4,opt,name=cycle" json:"cycle,omitempty"`
	Height int64  `protobuf:"varint,5,opt,name=height" json:"height,omitempty"`
	M      []byte `protobuf:"bytes,6,opt,name=m,proto3" json:"m,omitempty"`
	R      []byte `protobuf:"bytes,7,opt,name=r,proto3" json:"r,omitempty"`
	P      []byte `protobuf:"bytes,8,opt,name=p,proto3" json:"p,omitempty"`
	Time   int64  `protobuf:"varint,9,opt,name=time" json:"time,omitempty"`
}

func (m *VrfInfo) Reset()                    { *m = VrfInfo{} }
func (m *VrfInfo) String() string            { return proto.CompactTextString(m) }
func (*VrfInfo) ProtoMessage()               {}
func (*VrfInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *VrfInfo) GetIndex() int64 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *VrfInfo) GetPubkey() []byte {
	if m != nil {
		return m.Pubkey
	}
	return nil
}

func (m *VrfInfo) GetCycle() int64 {
	if m != nil {
		return m.Cycle
	}
	return 0
}

func (m *VrfInfo) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *VrfInfo) GetM() []byte {
	if m != nil {
		return m.M
	}
	return nil
}

func (m *VrfInfo) GetR() []byte {
	if m != nil {
		return m.R
	}
	return nil
}

func (m *VrfInfo) GetP() []byte {
	if m != nil {
		return m.P
	}
	return nil
}

func (m *VrfInfo) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

type DposVrfQuery struct {
	Pubkeys   []string `protobuf:"bytes,1,rep,name=pubkeys" json:"pubkeys,omitempty"`
	Ty        int64    `protobuf:"varint,2,opt,name=ty" json:"ty,omitempty"`
	Timestamp int64    `protobuf:"varint,3,opt,name=timestamp" json:"timestamp,omitempty"`
	Cycle     int64    `protobuf:"varint,4,opt,name=cycle" json:"cycle,omitempty"`
}

func (m *DposVrfQuery) Reset()                    { *m = DposVrfQuery{} }
func (m *DposVrfQuery) String() string            { return proto.CompactTextString(m) }
func (*DposVrfQuery) ProtoMessage()               {}
func (*DposVrfQuery) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *DposVrfQuery) GetPubkeys() []string {
	if m != nil {
		return m.Pubkeys
	}
	return nil
}

func (m *DposVrfQuery) GetTy() int64 {
	if m != nil {
		return m.Ty
	}
	return 0
}

func (m *DposVrfQuery) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *DposVrfQuery) GetCycle() int64 {
	if m != nil {
		return m.Cycle
	}
	return 0
}

type JsonVrfInfo struct {
	Index  int64  `protobuf:"varint,1,opt,name=Index" json:"Index,omitempty"`
	Pubkey string `protobuf:"bytes,2,opt,name=pubkey" json:"pubkey,omitempty"`
	Cycle  int64  `protobuf:"varint,4,opt,name=cycle" json:"cycle,omitempty"`
	Height int64  `protobuf:"varint,5,opt,name=height" json:"height,omitempty"`
	M      string `protobuf:"bytes,6,opt,name=m" json:"m,omitempty"`
	R      string `protobuf:"bytes,7,opt,name=r" json:"r,omitempty"`
	P      string `protobuf:"bytes,8,opt,name=p" json:"p,omitempty"`
	Time   int64  `protobuf:"varint,9,opt,name=time" json:"time,omitempty"`
}

func (m *JsonVrfInfo) Reset()                    { *m = JsonVrfInfo{} }
func (m *JsonVrfInfo) String() string            { return proto.CompactTextString(m) }
func (*JsonVrfInfo) ProtoMessage()               {}
func (*JsonVrfInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *JsonVrfInfo) GetIndex() int64 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *JsonVrfInfo) GetPubkey() string {
	if m != nil {
		return m.Pubkey
	}
	return ""
}

func (m *JsonVrfInfo) GetCycle() int64 {
	if m != nil {
		return m.Cycle
	}
	return 0
}

func (m *JsonVrfInfo) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *JsonVrfInfo) GetM() string {
	if m != nil {
		return m.M
	}
	return ""
}

func (m *JsonVrfInfo) GetR() string {
	if m != nil {
		return m.R
	}
	return ""
}

func (m *JsonVrfInfo) GetP() string {
	if m != nil {
		return m.P
	}
	return ""
}

func (m *JsonVrfInfo) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

type DposVrfReply struct {
	Vrf []*JsonVrfInfo `protobuf:"bytes,1,rep,name=vrf" json:"vrf,omitempty"`
}

func (m *DposVrfReply) Reset()                    { *m = DposVrfReply{} }
func (m *DposVrfReply) String() string            { return proto.CompactTextString(m) }
func (*DposVrfReply) ProtoMessage()               {}
func (*DposVrfReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

func (m *DposVrfReply) GetVrf() []*JsonVrfInfo {
	if m != nil {
		return m.Vrf
	}
	return nil
}

func init() {
	proto.RegisterType((*CandidatorInfo)(nil), "types.CandidatorInfo")
	proto.RegisterType((*DposVoter)(nil), "types.DposVoter")
	proto.RegisterType((*Candidator)(nil), "types.Candidator")
	proto.RegisterType((*DposCandidatorRegist)(nil), "types.DposCandidatorRegist")
	proto.RegisterType((*DposCandidatorCancelRegist)(nil), "types.DposCandidatorCancelRegist")
	proto.RegisterType((*DposVote)(nil), "types.DposVote")
	proto.RegisterType((*DposCancelVote)(nil), "types.DposCancelVote")
	proto.RegisterType((*DposVoteAction)(nil), "types.DposVoteAction")
	proto.RegisterType((*CandidatorQuery)(nil), "types.CandidatorQuery")
	proto.RegisterType((*JsonCandidator)(nil), "types.JsonCandidator")
	proto.RegisterType((*CandidatorReply)(nil), "types.CandidatorReply")
	proto.RegisterType((*DposVoteQuery)(nil), "types.DposVoteQuery")
	proto.RegisterType((*JsonDposVoter)(nil), "types.JsonDposVoter")
	proto.RegisterType((*DposVoteReply)(nil), "types.DposVoteReply")
	proto.RegisterType((*ReceiptCandicator)(nil), "types.ReceiptCandicator")
	proto.RegisterType((*DposVrfM)(nil), "types.DposVrfM")
	proto.RegisterType((*DposVrfRP)(nil), "types.DposVrfRP")
	proto.RegisterType((*DposVrfMRegist)(nil), "types.DposVrfMRegist")
	proto.RegisterType((*DposVrfRPRegist)(nil), "types.DposVrfRPRegist")
	proto.RegisterType((*ReceiptVrf)(nil), "types.ReceiptVrf")
	proto.RegisterType((*VrfInfo)(nil), "types.VrfInfo")
	proto.RegisterType((*DposVrfQuery)(nil), "types.DposVrfQuery")
	proto.RegisterType((*JsonVrfInfo)(nil), "types.JsonVrfInfo")
	proto.RegisterType((*DposVrfReply)(nil), "types.DposVrfReply")
}

func init() { proto.RegisterFile("dposvote.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1117 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x57, 0x51, 0x8f, 0xdb, 0xc4,
	0x13, 0x8f, 0xed, 0x38, 0x89, 0xc7, 0xbe, 0xdc, 0xff, 0xbf, 0xa4, 0x95, 0x55, 0x10, 0x0a, 0x56,
	0x91, 0x22, 0x1e, 0x4e, 0x6a, 0x28, 0x42, 0x80, 0x40, 0x6a, 0x0f, 0x89, 0xb4, 0xa2, 0xa5, 0x6c,
	0x4f, 0x27, 0x24, 0x9e, 0x5c, 0x7b, 0x73, 0x67, 0x91, 0xc4, 0xd6, 0xda, 0x77, 0x6a, 0x24, 0x24,
	0x90, 0x10, 0x5f, 0x83, 0x17, 0x1e, 0xf8, 0x4e, 0x7c, 0x00, 0xc4, 0x87, 0xe0, 0x01, 0xed, 0xec,
	0x66, 0xbd, 0xf6, 0x5d, 0xee, 0xc8, 0x41, 0xfb, 0x96, 0x99, 0xd9, 0x19, 0xcf, 0xfc, 0x7e, 0xbb,
	0x33, 0x13, 0x18, 0xa6, 0x45, 0x5e, 0x9e, 0xe7, 0x15, 0x3b, 0x28, 0x78, 0x5e, 0xe5, 0xc4, 0xad,
	0xd6, 0x05, 0x2b, 0xa3, 0xbf, 0x6c, 0x18, 0x1e, 0xc6, 0xab, 0x34, 0x4b, 0xe3, 0x2a, 0xe7, 0x8f,
	0x56, 0xf3, 0x9c, 0xdc, 0x86, 0x5e, 0x71, 0xf6, 0xe2, 0x3b, 0xb6, 0x0e, 0xad, 0xb1, 0x35, 0x09,
	0xa8, 0x92, 0x48, 0x08, 0xfd, 0x38, 0x4d, 0x39, 0x2b, 0xcb, 0xd0, 0x1e, 0x5b, 0x13, 0x8f, 0x6e,
	0x44, 0x32, 0x04, 0x3b, 0x2b, 0x42, 0x07, 0x95, 0x76, 0x56, 0x90, 0x11, 0xb8, 0xe2, 0x4b, 0x65,
	0xd8, 0x1d, 0x5b, 0x13, 0x87, 0x4a, 0x41, 0xc4, 0x2d, 0xab, 0xb8, 0x3a, 0x2b, 0x43, 0x17, 0xd5,
	0x4a, 0x22, 0x6f, 0x81, 0x57, 0x70, 0xf6, 0x5c, 0x9a, 0x7a, 0x68, 0xaa, 0x15, 0xc2, 0x5a, 0x56,
	0x31, 0xaf, 0x8e, 0xb2, 0x25, 0x0b, 0xfb, 0xd2, 0xaa, 0x15, 0x64, 0x0c, 0x3e, 0x0a, 0x33, 0x96,
	0x9d, 0x9c, 0x56, 0xe1, 0x00, 0xed, 0xa6, 0x4a, 0x9f, 0x38, 0x7a, 0x39, 0x8b, 0xcb, 0xd3, 0xd0,
	0xc3, 0x24, 0x4d, 0x15, 0x79, 0x1b, 0x00, 0xc5, 0x47, 0xab, 0x94, 0xbd, 0x0c, 0x01, 0x43, 0x18,
	0x1a, 0x51, 0x4d, 0x86, 0x26, 0x5f, 0x56, 0x83, 0x02, 0xb9, 0x03, 0x83, 0x82, 0x33, 0xe9, 0x13,
	0xa0, 0x41, 0xcb, 0x64, 0x02, 0x3d, 0x51, 0x32, 0x2f, 0xc3, 0xbd, 0xb1, 0x33, 0xf1, 0xa7, 0xff,
	0x3b, 0x40, 0xb0, 0x0f, 0x3e, 0x2f, 0xf2, 0xf2, 0x58, 0x18, 0xa8, 0xb2, 0x47, 0x3f, 0x80, 0xa7,
	0x95, 0x22, 0xe4, 0x9c, 0xe7, 0xcb, 0x07, 0x69, 0xca, 0x11, 0x7a, 0x8f, 0x6a, 0xd9, 0x20, 0xc5,
	0x6e, 0x90, 0xa2, 0xa1, 0x76, 0x4c, 0xa8, 0x75, 0xca, 0x5d, 0x33, 0x65, 0x02, 0xdd, 0x4a, 0xa0,
	0x28, 0xe1, 0xc7, 0xdf, 0xd1, 0xf7, 0x00, 0x35, 0xfd, 0xaf, 0x9b, 0xfa, 0xe8, 0x1b, 0x18, 0x89,
	0xf2, 0xeb, 0x0c, 0x28, 0x3b, 0xc9, 0xca, 0xaa, 0x95, 0x87, 0xb7, 0x7b, 0x1e, 0xd1, 0x53, 0xb8,
	0xd3, 0x8c, 0x7c, 0x18, 0xaf, 0x12, 0xb6, 0xb8, 0x69, 0xfc, 0xe8, 0x08, 0x06, 0x1b, 0xa2, 0x76,
	0xe0, 0xc9, 0xbb, 0x9a, 0xa7, 0xe8, 0x33, 0x18, 0xaa, 0x2c, 0x13, 0xb6, 0xc0, 0xd8, 0xdb, 0x32,
	0xd3, 0x8c, 0x3a, 0x06, 0xa3, 0xd1, 0x1f, 0x5d, 0x19, 0x40, 0xb8, 0x3e, 0x48, 0xaa, 0x2c, 0x5f,
	0x91, 0x0f, 0xa0, 0xc7, 0xb1, 0x48, 0x0c, 0xe0, 0x4f, 0xdf, 0x34, 0xee, 0x5e, 0x1b, 0xe7, 0x59,
	0x87, 0xaa, 0xc3, 0xe4, 0x0b, 0x08, 0x12, 0x03, 0x21, 0xcc, 0xde, 0x9f, 0xbe, 0x73, 0xa9, 0xb3,
	0x09, 0xe5, 0xac, 0x43, 0x1b, 0x8e, 0xe4, 0x23, 0x18, 0x70, 0xa6, 0x82, 0x38, 0xff, 0x24, 0x03,
	0x7d, 0x9c, 0xbc, 0x0b, 0x5d, 0x01, 0x0b, 0x5e, 0x1d, 0x7f, 0xba, 0xdf, 0x7a, 0x34, 0xb3, 0x0e,
	0x45, 0x33, 0xf9, 0x10, 0x20, 0xd1, 0x80, 0xe1, 0x85, 0xf2, 0xa7, 0xb7, 0x9a, 0xdf, 0x50, 0xc6,
	0x59, 0x87, 0x1a, 0x47, 0xc9, 0x43, 0xd8, 0x4f, 0xf4, 0xf7, 0xbf, 0x3e, 0x63, 0x7c, 0x8d, 0xed,
	0xc6, 0x9f, 0xde, 0x56, 0xde, 0x87, 0x4d, 0xeb, 0xac, 0x43, 0xdb, 0x0e, 0xe4, 0x3e, 0x78, 0x22,
	0x09, 0xe9, 0xdd, 0x47, 0xef, 0x51, 0x2b, 0xd1, 0x8d, 0x6f, 0x7d, 0x50, 0xa4, 0x2c, 0x71, 0x3e,
	0xe6, 0xf3, 0x27, 0xd8, 0xa5, 0x9a, 0x29, 0x0b, 0xb5, 0x06, 0xc4, 0x38, 0x4a, 0x3e, 0x06, 0x5f,
	0x4b, 0xf4, 0x19, 0x76, 0xaf, 0x3a, 0x5d, 0xe5, 0x49, 0x9f, 0x69, 0x57, 0xf3, 0x30, 0xb9, 0x07,
	0x83, 0x73, 0x3e, 0x97, 0x99, 0x02, 0x3a, 0xbe, 0xd1, 0x74, 0xdc, 0x24, 0xaa, 0x8f, 0x89, 0x57,
	0x54, 0xad, 0xb1, 0xcf, 0xb9, 0xd4, 0xae, 0xd6, 0x0f, 0xfb, 0xe0, 0x9e, 0xc7, 0x8b, 0x33, 0x16,
	0x7d, 0x05, 0xfb, 0x2d, 0x70, 0xc4, 0x5b, 0x91, 0x77, 0xb3, 0x0c, 0xad, 0xb1, 0x23, 0xde, 0x8a,
	0x12, 0xb1, 0xcf, 0xe4, 0xc5, 0x53, 0xbc, 0x43, 0x2e, 0xc5, 0xdf, 0x2a, 0xb2, 0xb3, 0x89, 0x1c,
	0xfd, 0x68, 0xc1, 0xf0, 0x71, 0x99, 0xaf, 0xb6, 0x36, 0x1f, 0xef, 0x95, 0x37, 0x9f, 0xc7, 0x66,
	0x4d, 0x94, 0x15, 0x0b, 0xc1, 0x93, 0x5f, 0x13, 0x2e, 0xeb, 0xaa, 0x89, 0x6a, 0xa6, 0x4b, 0xcd,
	0x93, 0xd1, 0xa7, 0xb0, 0xd7, 0xa0, 0xff, 0x6a, 0x74, 0x44, 0xfe, 0xaa, 0x16, 0xfc, 0x1d, 0xfd,
	0x64, 0xc1, 0x9e, 0x08, 0x7f, 0x93, 0x59, 0xe0, 0xfd, 0x67, 0xb3, 0xe0, 0x93, 0xba, 0x08, 0x09,
	0xc7, 0x7b, 0x9b, 0x80, 0x12, 0x88, 0x91, 0x01, 0x44, 0x3d, 0xca, 0x54, 0x2b, 0xfb, 0xdd, 0x86,
	0xff, 0x53, 0x96, 0xb0, 0xac, 0xa8, 0x10, 0xa4, 0x04, 0x39, 0x1d, 0x81, 0x2b, 0x47, 0xa4, 0x25,
	0x3f, 0x2e, 0xe7, 0xe3, 0xb6, 0x61, 0x66, 0x30, 0xed, 0x34, 0x99, 0xae, 0x39, 0xec, 0x6e, 0xdf,
	0x1d, 0xdc, 0xf6, 0xee, 0x10, 0x41, 0x20, 0xcf, 0x1d, 0x9e, 0xc6, 0xab, 0x13, 0x86, 0xaf, 0x7d,
	0x40, 0x1b, 0x3a, 0x01, 0xb4, 0x28, 0xe0, 0x68, 0x5d, 0xc8, 0xf5, 0xc2, 0xa5, 0x5a, 0x26, 0x77,
	0x55, 0x43, 0x92, 0x0f, 0xf6, 0xe2, 0x14, 0x97, 0xfd, 0xc8, 0xa4, 0xca, 0x6b, 0x51, 0x75, 0x0f,
	0x06, 0xe2, 0x9a, 0x88, 0xbd, 0x4a, 0xbd, 0xc1, 0x5b, 0x17, 0x7a, 0x8d, 0x30, 0x52, 0x7d, 0x4c,
	0x33, 0xe3, 0x1b, 0xcc, 0xfc, 0x69, 0xa9, 0xf1, 0x23, 0x7a, 0xc2, 0x6e, 0x98, 0x8e, 0xc0, 0x4d,
	0xd6, 0xc9, 0x82, 0x6d, 0x2e, 0x05, 0x0a, 0xe2, 0xf4, 0xa9, 0x5c, 0x99, 0x14, 0x9e, 0x52, 0x22,
	0x01, 0x58, 0x4b, 0xc4, 0x31, 0xa0, 0xd6, 0x52, 0xa7, 0xd2, 0xab, 0x53, 0x11, 0xdb, 0x12, 0x86,
	0x78, 0x2e, 0x16, 0x24, 0xb5, 0x90, 0x19, 0x1a, 0xb1, 0x6f, 0xa1, 0xf4, 0x24, 0x4b, 0xd3, 0x05,
	0xdb, 0x6c, 0x64, 0x86, 0x4a, 0x70, 0xa6, 0xce, 0xe7, 0x05, 0x02, 0xe6, 0xd0, 0x5a, 0x11, 0xfd,
	0x6c, 0xab, 0x95, 0x08, 0x7b, 0xd8, 0xeb, 0xab, 0x35, 0x00, 0x8b, 0x63, 0xa1, 0x01, 0xb5, 0xb8,
	0x90, 0x0a, 0x2c, 0x2e, 0xa0, 0x56, 0xa1, 0x71, 0x18, 0x6c, 0xc5, 0xc1, 0xbb, 0x0e, 0x07, 0xb8,
	0x06, 0x07, 0xbf, 0x8d, 0xc3, 0x97, 0x6a, 0xb2, 0xeb, 0xc9, 0x70, 0xd5, 0x6a, 0x20, 0xab, 0xb6,
	0xcd, 0xaa, 0xb1, 0x3a, 0xf9, 0x8a, 0xac, 0x65, 0xf4, 0x2d, 0xec, 0xb7, 0xa6, 0xc5, 0xee, 0xe1,
	0xf8, 0x26, 0x9c, 0x82, 0xa7, 0x2b, 0xa5, 0x22, 0xfa, 0xc5, 0x06, 0x50, 0x4f, 0xff, 0x98, 0xcf,
	0x77, 0xe4, 0xac, 0x7e, 0xd9, 0x4e, 0xe3, 0x65, 0xeb, 0x34, 0xba, 0x97, 0x73, 0xe9, 0x5e, 0xe4,
	0xb2, 0xd7, 0xe0, 0xb2, 0xdf, 0xe0, 0x72, 0xd0, 0xe6, 0xd2, 0xdb, 0xca, 0x25, 0x5c, 0xc7, 0xa5,
	0x7f, 0x0d, 0x97, 0x41, 0x9b, 0xcb, 0x5f, 0x2d, 0xe8, 0x1f, 0xf3, 0x39, 0x3e, 0xef, 0x1b, 0xde,
	0xe8, 0x57, 0x8f, 0x42, 0xb4, 0x80, 0xc0, 0x5c, 0x0c, 0xae, 0x18, 0x61, 0x72, 0x98, 0xcb, 0xfb,
	0x61, 0x57, 0x6b, 0x51, 0xbd, 0x88, 0x50, 0x56, 0xf1, 0xb2, 0x50, 0x34, 0xd6, 0x8a, 0xcb, 0x6b,
	0x88, 0x7e, 0xb3, 0xc0, 0x17, 0x83, 0x64, 0x17, 0x5c, 0xbc, 0x7f, 0x8b, 0x8b, 0xd7, 0xc0, 0xc5,
	0x6b, 0xe0, 0xe2, 0x6d, 0xc3, 0xe5, 0xbe, 0xc6, 0x45, 0x4e, 0xc5, 0xbb, 0xe0, 0x9c, 0xf3, 0xb9,
	0x9a, 0x89, 0xc4, 0x98, 0x89, 0xaa, 0x14, 0x2a, 0xcc, 0x2f, 0x7a, 0xf8, 0x37, 0xfb, 0xfd, 0xbf,
	0x03, 0x00, 0x00, 0xff, 0xff, 0xcb, 0x64, 0xcc, 0x30, 0x78, 0x0f, 0x00, 0x00,
}
